// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v4.24.4
// source: sd/pages.proto

package sdv1

import (
	common "github.com/x3a-tech/contract-go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPagesParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lang          common.Lang            `protobuf:"varint,1,opt,name=lang,proto3,enum=common.Lang" json:"lang,omitempty"`
	Ids           []string               `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	Slugs         []string               `protobuf:"bytes,3,rep,name=slugs,proto3" json:"slugs,omitempty"`
	WithNav       []bool                 `protobuf:"varint,4,rep,packed,name=with_nav,json=withNav,proto3" json:"with_nav,omitempty"`
	ListParams    *common.ListParams     `protobuf:"bytes,5,opt,name=list_params,json=listParams,proto3" json:"list_params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPagesParams) Reset() {
	*x = GetPagesParams{}
	mi := &file_sd_pages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPagesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPagesParams) ProtoMessage() {}

func (x *GetPagesParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_pages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPagesParams.ProtoReflect.Descriptor instead.
func (*GetPagesParams) Descriptor() ([]byte, []int) {
	return file_sd_pages_proto_rawDescGZIP(), []int{0}
}

func (x *GetPagesParams) GetLang() common.Lang {
	if x != nil {
		return x.Lang
	}
	return common.Lang(0)
}

func (x *GetPagesParams) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *GetPagesParams) GetSlugs() []string {
	if x != nil {
		return x.Slugs
	}
	return nil
}

func (x *GetPagesParams) GetWithNav() []bool {
	if x != nil {
		return x.WithNav
	}
	return nil
}

func (x *GetPagesParams) GetListParams() *common.ListParams {
	if x != nil {
		return x.ListParams
	}
	return nil
}

type GetPagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          *Page                  `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Nav           []*Page                `protobuf:"bytes,2,rep,name=nav,proto3" json:"nav,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPagesResponse) Reset() {
	*x = GetPagesResponse{}
	mi := &file_sd_pages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPagesResponse) ProtoMessage() {}

func (x *GetPagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sd_pages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPagesResponse.ProtoReflect.Descriptor instead.
func (*GetPagesResponse) Descriptor() ([]byte, []int) {
	return file_sd_pages_proto_rawDescGZIP(), []int{1}
}

func (x *GetPagesResponse) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *GetPagesResponse) GetNav() []*Page {
	if x != nil {
		return x.Nav
	}
	return nil
}

type PageParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slug          string                 `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	ParentId      *int32                 `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3,oneof" json:"parent_id,omitempty"`
	Order         *int32                 `protobuf:"varint,3,opt,name=order,proto3,oneof" json:"order,omitempty"`
	IsShow        *bool                  `protobuf:"varint,4,opt,name=is_show,json=isShow,proto3,oneof" json:"is_show,omitempty"`
	Name          []*L10N                `protobuf:"bytes,5,rep,name=name,proto3" json:"name,omitempty"`
	Description   []*L10N                `protobuf:"bytes,6,rep,name=description,proto3" json:"description,omitempty"`
	Content       []*L10N                `protobuf:"bytes,7,rep,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageParams) Reset() {
	*x = PageParams{}
	mi := &file_sd_pages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageParams) ProtoMessage() {}

func (x *PageParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_pages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageParams.ProtoReflect.Descriptor instead.
func (*PageParams) Descriptor() ([]byte, []int) {
	return file_sd_pages_proto_rawDescGZIP(), []int{2}
}

func (x *PageParams) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *PageParams) GetParentId() int32 {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return 0
}

func (x *PageParams) GetOrder() int32 {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return 0
}

func (x *PageParams) GetIsShow() bool {
	if x != nil && x.IsShow != nil {
		return *x.IsShow
	}
	return false
}

func (x *PageParams) GetName() []*L10N {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *PageParams) GetDescription() []*L10N {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *PageParams) GetContent() []*L10N {
	if x != nil {
		return x.Content
	}
	return nil
}

type UpdatePageParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data          *PageParams            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePageParams) Reset() {
	*x = UpdatePageParams{}
	mi := &file_sd_pages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePageParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePageParams) ProtoMessage() {}

func (x *UpdatePageParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_pages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePageParams.ProtoReflect.Descriptor instead.
func (*UpdatePageParams) Descriptor() ([]byte, []int) {
	return file_sd_pages_proto_rawDescGZIP(), []int{3}
}

func (x *UpdatePageParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePageParams) GetData() *PageParams {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateResponseParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          *Page                  `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateResponseParams) Reset() {
	*x = CreateResponseParams{}
	mi := &file_sd_pages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateResponseParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponseParams) ProtoMessage() {}

func (x *CreateResponseParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_pages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponseParams.ProtoReflect.Descriptor instead.
func (*CreateResponseParams) Descriptor() ([]byte, []int) {
	return file_sd_pages_proto_rawDescGZIP(), []int{4}
}

func (x *CreateResponseParams) GetPage() *Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type RemovePagesParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []int32                `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemovePagesParams) Reset() {
	*x = RemovePagesParams{}
	mi := &file_sd_pages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemovePagesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePagesParams) ProtoMessage() {}

func (x *RemovePagesParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_pages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePagesParams.ProtoReflect.Descriptor instead.
func (*RemovePagesParams) Descriptor() ([]byte, []int) {
	return file_sd_pages_proto_rawDescGZIP(), []int{5}
}

func (x *RemovePagesParams) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ToggleAttachPageToParentParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParentId      int32                  `protobuf:"varint,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Ids           []int32                `protobuf:"varint,2,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToggleAttachPageToParentParams) Reset() {
	*x = ToggleAttachPageToParentParams{}
	mi := &file_sd_pages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToggleAttachPageToParentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleAttachPageToParentParams) ProtoMessage() {}

func (x *ToggleAttachPageToParentParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_pages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleAttachPageToParentParams.ProtoReflect.Descriptor instead.
func (*ToggleAttachPageToParentParams) Descriptor() ([]byte, []int) {
	return file_sd_pages_proto_rawDescGZIP(), []int{6}
}

func (x *ToggleAttachPageToParentParams) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ToggleAttachPageToParentParams) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type Page struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *int32                 `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	ParentId      *int32                 `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3,oneof" json:"parent_id,omitempty"`
	Slug          string                 `protobuf:"bytes,3,opt,name=slug,proto3" json:"slug,omitempty"`
	Order         *int32                 `protobuf:"varint,4,opt,name=order,proto3,oneof" json:"order,omitempty"`
	Name          *L10N                  `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description   *L10N                  `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Content       *L10N                  `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Page) Reset() {
	*x = Page{}
	mi := &file_sd_pages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Page) ProtoMessage() {}

func (x *Page) ProtoReflect() protoreflect.Message {
	mi := &file_sd_pages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Page.ProtoReflect.Descriptor instead.
func (*Page) Descriptor() ([]byte, []int) {
	return file_sd_pages_proto_rawDescGZIP(), []int{7}
}

func (x *Page) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Page) GetParentId() int32 {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return 0
}

func (x *Page) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Page) GetOrder() int32 {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return 0
}

func (x *Page) GetName() *L10N {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Page) GetDescription() *L10N {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *Page) GetContent() *L10N {
	if x != nil {
		return x.Content
	}
	return nil
}

var File_sd_pages_proto protoreflect.FileDescriptor

var file_sd_pages_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x73, 0x64, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x73, 0x64, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x73, 0x64, 0x2f, 0x6c, 0x31,
	0x30, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x6c, 0x75, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x6c, 0x75, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x6e, 0x61,
	0x76, 0x18, 0x04, 0x20, 0x03, 0x28, 0x08, 0x52, 0x07, 0x77, 0x69, 0x74, 0x68, 0x4e, 0x61, 0x76,
	0x12, 0x33, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x4c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x73, 0x64, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x03, 0x6e, 0x61, 0x76, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x73, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x03,
	0x6e, 0x61, 0x76, 0x22, 0x8d, 0x02, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x88, 0x01,
	0x01, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x73, 0x64, 0x2e, 0x4c, 0x31, 0x30, 0x6e, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x73, 0x64, 0x2e, 0x4c, 0x31, 0x30, 0x6e, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x73,
	0x64, 0x2e, 0x4c, 0x31, 0x30, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x73, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x22, 0x46, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x67,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x34, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x73, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x25, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x67, 0x65, 0x73,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x4f, 0x0a, 0x1e, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xf9, 0x01, 0x0a, 0x04, 0x50, 0x61,
	0x67, 0x65, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x19, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x73, 0x64, 0x2e, 0x4c, 0x31, 0x30, 0x6e,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x73, 0x64,
	0x2e, 0x4c, 0x31, 0x30, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x73, 0x64, 0x2e, 0x4c, 0x31, 0x30, 0x6e, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x33, 0x61, 0x2d, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x64, 0x3b, 0x73, 0x64, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_sd_pages_proto_rawDescOnce sync.Once
	file_sd_pages_proto_rawDescData []byte
)

func file_sd_pages_proto_rawDescGZIP() []byte {
	file_sd_pages_proto_rawDescOnce.Do(func() {
		file_sd_pages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sd_pages_proto_rawDesc), len(file_sd_pages_proto_rawDesc)))
	})
	return file_sd_pages_proto_rawDescData
}

var file_sd_pages_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_sd_pages_proto_goTypes = []any{
	(*GetPagesParams)(nil),                 // 0: sd.GetPagesParams
	(*GetPagesResponse)(nil),               // 1: sd.GetPagesResponse
	(*PageParams)(nil),                     // 2: sd.PageParams
	(*UpdatePageParams)(nil),               // 3: sd.UpdatePageParams
	(*CreateResponseParams)(nil),           // 4: sd.CreateResponseParams
	(*RemovePagesParams)(nil),              // 5: sd.RemovePagesParams
	(*ToggleAttachPageToParentParams)(nil), // 6: sd.ToggleAttachPageToParentParams
	(*Page)(nil),                           // 7: sd.Page
	(common.Lang)(0),                       // 8: common.Lang
	(*common.ListParams)(nil),              // 9: common.ListParams
	(*L10N)(nil),                           // 10: sd.L10n
}
var file_sd_pages_proto_depIdxs = []int32{
	8,  // 0: sd.GetPagesParams.lang:type_name -> common.Lang
	9,  // 1: sd.GetPagesParams.list_params:type_name -> common.ListParams
	7,  // 2: sd.GetPagesResponse.page:type_name -> sd.Page
	7,  // 3: sd.GetPagesResponse.nav:type_name -> sd.Page
	10, // 4: sd.PageParams.name:type_name -> sd.L10n
	10, // 5: sd.PageParams.description:type_name -> sd.L10n
	10, // 6: sd.PageParams.content:type_name -> sd.L10n
	2,  // 7: sd.UpdatePageParams.data:type_name -> sd.PageParams
	7,  // 8: sd.CreateResponseParams.page:type_name -> sd.Page
	10, // 9: sd.Page.name:type_name -> sd.L10n
	10, // 10: sd.Page.description:type_name -> sd.L10n
	10, // 11: sd.Page.content:type_name -> sd.L10n
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_sd_pages_proto_init() }
func file_sd_pages_proto_init() {
	if File_sd_pages_proto != nil {
		return
	}
	file_sd_l10n_proto_init()
	file_sd_pages_proto_msgTypes[2].OneofWrappers = []any{}
	file_sd_pages_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sd_pages_proto_rawDesc), len(file_sd_pages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sd_pages_proto_goTypes,
		DependencyIndexes: file_sd_pages_proto_depIdxs,
		MessageInfos:      file_sd_pages_proto_msgTypes,
	}.Build()
	File_sd_pages_proto = out.File
	file_sd_pages_proto_goTypes = nil
	file_sd_pages_proto_depIdxs = nil
}
