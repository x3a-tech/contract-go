// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v4.24.4
// source: sd/fields.proto

package sdv1

import (
	common "github.com/x3a-tech/contract-go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FieldType int32

const (
	FieldType_FIELD_TYPE_UNSPECIFIED FieldType = 0
	FieldType_NUMBER                 FieldType = 1
	FieldType_STRING                 FieldType = 2
	FieldType_BOOLEAN                FieldType = 3
	FieldType_TIMESTAMP              FieldType = 4
	FieldType_LINK                   FieldType = 5
	FieldType_IMAGE                  FieldType = 6
	FieldType_ENUM                   FieldType = 7
)

// Enum value maps for FieldType.
var (
	FieldType_name = map[int32]string{
		0: "FIELD_TYPE_UNSPECIFIED",
		1: "NUMBER",
		2: "STRING",
		3: "BOOLEAN",
		4: "TIMESTAMP",
		5: "LINK",
		6: "IMAGE",
		7: "ENUM",
	}
	FieldType_value = map[string]int32{
		"FIELD_TYPE_UNSPECIFIED": 0,
		"NUMBER":                 1,
		"STRING":                 2,
		"BOOLEAN":                3,
		"TIMESTAMP":              4,
		"LINK":                   5,
		"IMAGE":                  6,
		"ENUM":                   7,
	}
)

func (x FieldType) Enum() *FieldType {
	p := new(FieldType)
	*p = x
	return p
}

func (x FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_sd_fields_proto_enumTypes[0].Descriptor()
}

func (FieldType) Type() protoreflect.EnumType {
	return &file_sd_fields_proto_enumTypes[0]
}

func (x FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldType.Descriptor instead.
func (FieldType) EnumDescriptor() ([]byte, []int) {
	return file_sd_fields_proto_rawDescGZIP(), []int{0}
}

type FieldOptionNumberView int32

const (
	FieldOptionNumberView_FIELD_NUMBER_VIEW_UNSPECIFIED FieldOptionNumberView = 0
	FieldOptionNumberView_INPUT                         FieldOptionNumberView = 1
	FieldOptionNumberView_RANGE                         FieldOptionNumberView = 2
	FieldOptionNumberView_INCREMENT                     FieldOptionNumberView = 3
)

// Enum value maps for FieldOptionNumberView.
var (
	FieldOptionNumberView_name = map[int32]string{
		0: "FIELD_NUMBER_VIEW_UNSPECIFIED",
		1: "INPUT",
		2: "RANGE",
		3: "INCREMENT",
	}
	FieldOptionNumberView_value = map[string]int32{
		"FIELD_NUMBER_VIEW_UNSPECIFIED": 0,
		"INPUT":                         1,
		"RANGE":                         2,
		"INCREMENT":                     3,
	}
)

func (x FieldOptionNumberView) Enum() *FieldOptionNumberView {
	p := new(FieldOptionNumberView)
	*p = x
	return p
}

func (x FieldOptionNumberView) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldOptionNumberView) Descriptor() protoreflect.EnumDescriptor {
	return file_sd_fields_proto_enumTypes[1].Descriptor()
}

func (FieldOptionNumberView) Type() protoreflect.EnumType {
	return &file_sd_fields_proto_enumTypes[1]
}

func (x FieldOptionNumberView) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldOptionNumberView.Descriptor instead.
func (FieldOptionNumberView) EnumDescriptor() ([]byte, []int) {
	return file_sd_fields_proto_rawDescGZIP(), []int{1}
}

type FieldLinkTarget int32

const (
	FieldLinkTarget_FIELD_LINK_TARGET_UNSPECIFIED FieldLinkTarget = 0
	FieldLinkTarget_INNER                         FieldLinkTarget = 1
	FieldLinkTarget_WEB                           FieldLinkTarget = 2
	FieldLinkTarget_XCOM                          FieldLinkTarget = 3
	FieldLinkTarget_FACEBOOK                      FieldLinkTarget = 4
	FieldLinkTarget_INSTAGRAM                     FieldLinkTarget = 5
	FieldLinkTarget_LINKEDIN                      FieldLinkTarget = 6
)

// Enum value maps for FieldLinkTarget.
var (
	FieldLinkTarget_name = map[int32]string{
		0: "FIELD_LINK_TARGET_UNSPECIFIED",
		1: "INNER",
		2: "WEB",
		3: "XCOM",
		4: "FACEBOOK",
		5: "INSTAGRAM",
		6: "LINKEDIN",
	}
	FieldLinkTarget_value = map[string]int32{
		"FIELD_LINK_TARGET_UNSPECIFIED": 0,
		"INNER":                         1,
		"WEB":                           2,
		"XCOM":                          3,
		"FACEBOOK":                      4,
		"INSTAGRAM":                     5,
		"LINKEDIN":                      6,
	}
)

func (x FieldLinkTarget) Enum() *FieldLinkTarget {
	p := new(FieldLinkTarget)
	*p = x
	return p
}

func (x FieldLinkTarget) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldLinkTarget) Descriptor() protoreflect.EnumDescriptor {
	return file_sd_fields_proto_enumTypes[2].Descriptor()
}

func (FieldLinkTarget) Type() protoreflect.EnumType {
	return &file_sd_fields_proto_enumTypes[2]
}

func (x FieldLinkTarget) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldLinkTarget.Descriptor instead.
func (FieldLinkTarget) EnumDescriptor() ([]byte, []int) {
	return file_sd_fields_proto_rawDescGZIP(), []int{2}
}

type FieldsFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lang          common.Lang            `protobuf:"varint,1,opt,name=lang,proto3,enum=common.Lang" json:"lang,omitempty"`
	Ids           *int32                 `protobuf:"varint,2,opt,name=ids,proto3,oneof" json:"ids,omitempty"`
	ListIds       *int32                 `protobuf:"varint,3,opt,name=list_ids,json=listIds,proto3,oneof" json:"list_ids,omitempty"`
	ListParams    *common.ListParams     `protobuf:"bytes,4,opt,name=listParams,proto3" json:"listParams,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldsFilter) Reset() {
	*x = FieldsFilter{}
	mi := &file_sd_fields_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldsFilter) ProtoMessage() {}

func (x *FieldsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_sd_fields_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldsFilter.ProtoReflect.Descriptor instead.
func (*FieldsFilter) Descriptor() ([]byte, []int) {
	return file_sd_fields_proto_rawDescGZIP(), []int{0}
}

func (x *FieldsFilter) GetLang() common.Lang {
	if x != nil {
		return x.Lang
	}
	return common.Lang(0)
}

func (x *FieldsFilter) GetIds() int32 {
	if x != nil && x.Ids != nil {
		return *x.Ids
	}
	return 0
}

func (x *FieldsFilter) GetListIds() int32 {
	if x != nil && x.ListIds != nil {
		return *x.ListIds
	}
	return 0
}

func (x *FieldsFilter) GetListParams() *common.ListParams {
	if x != nil {
		return x.ListParams
	}
	return nil
}

type Field struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          FieldType              `protobuf:"varint,2,opt,name=type,proto3,enum=sd.FieldType" json:"type,omitempty"`
	Name          *string                `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	L10Ns         []*common.L10N         `protobuf:"bytes,4,rep,name=l10ns,proto3" json:"l10ns,omitempty"`
	Options       []*FieldOption         `protobuf:"bytes,5,rep,name=options,proto3" json:"options,omitempty"`
	GroupKeys     []string               `protobuf:"bytes,6,rep,name=group_keys,json=groupKeys,proto3" json:"group_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Field) Reset() {
	*x = Field{}
	mi := &file_sd_fields_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_sd_fields_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_sd_fields_proto_rawDescGZIP(), []int{1}
}

func (x *Field) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Field) GetType() FieldType {
	if x != nil {
		return x.Type
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

func (x *Field) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Field) GetL10Ns() []*common.L10N {
	if x != nil {
		return x.L10Ns
	}
	return nil
}

func (x *Field) GetOptions() []*FieldOption {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Field) GetGroupKeys() []string {
	if x != nil {
		return x.GroupKeys
	}
	return nil
}

type NewField struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          FieldType              `protobuf:"varint,2,opt,name=type,proto3,enum=sd.FieldType" json:"type,omitempty"`
	Name          *string                `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	GroupKeys     []string               `protobuf:"bytes,6,rep,name=group_keys,json=groupKeys,proto3" json:"group_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewField) Reset() {
	*x = NewField{}
	mi := &file_sd_fields_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewField) ProtoMessage() {}

func (x *NewField) ProtoReflect() protoreflect.Message {
	mi := &file_sd_fields_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewField.ProtoReflect.Descriptor instead.
func (*NewField) Descriptor() ([]byte, []int) {
	return file_sd_fields_proto_rawDescGZIP(), []int{2}
}

func (x *NewField) GetType() FieldType {
	if x != nil {
		return x.Type
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

func (x *NewField) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *NewField) GetGroupKeys() []string {
	if x != nil {
		return x.GroupKeys
	}
	return nil
}

type CreateFieldParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          FieldType              `protobuf:"varint,1,opt,name=type,proto3,enum=sd.FieldType" json:"type,omitempty"`
	InFilter      *bool                  `protobuf:"varint,2,opt,name=in_filter,json=inFilter,proto3,oneof" json:"in_filter,omitempty"`
	InPreview     *bool                  `protobuf:"varint,3,opt,name=in_preview,json=inPreview,proto3,oneof" json:"in_preview,omitempty"`
	InPage        *bool                  `protobuf:"varint,4,opt,name=in_page,json=inPage,proto3,oneof" json:"in_page,omitempty"`
	Order         *int32                 `protobuf:"varint,5,opt,name=order,proto3,oneof" json:"order,omitempty"`
	L10Ns         []*NewL10N             `protobuf:"bytes,6,rep,name=l10ns,proto3" json:"l10ns,omitempty"`
	GroupKeys     []string               `protobuf:"bytes,7,rep,name=group_keys,json=groupKeys,proto3" json:"group_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFieldParams) Reset() {
	*x = CreateFieldParams{}
	mi := &file_sd_fields_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFieldParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFieldParams) ProtoMessage() {}

func (x *CreateFieldParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_fields_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFieldParams.ProtoReflect.Descriptor instead.
func (*CreateFieldParams) Descriptor() ([]byte, []int) {
	return file_sd_fields_proto_rawDescGZIP(), []int{3}
}

func (x *CreateFieldParams) GetType() FieldType {
	if x != nil {
		return x.Type
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

func (x *CreateFieldParams) GetInFilter() bool {
	if x != nil && x.InFilter != nil {
		return *x.InFilter
	}
	return false
}

func (x *CreateFieldParams) GetInPreview() bool {
	if x != nil && x.InPreview != nil {
		return *x.InPreview
	}
	return false
}

func (x *CreateFieldParams) GetInPage() bool {
	if x != nil && x.InPage != nil {
		return *x.InPage
	}
	return false
}

func (x *CreateFieldParams) GetOrder() int32 {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return 0
}

func (x *CreateFieldParams) GetL10Ns() []*NewL10N {
	if x != nil {
		return x.L10Ns
	}
	return nil
}

func (x *CreateFieldParams) GetGroupKeys() []string {
	if x != nil {
		return x.GroupKeys
	}
	return nil
}

type UpdateFields struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InFilter      *bool                  `protobuf:"varint,3,opt,name=in_filter,json=inFilter,proto3,oneof" json:"in_filter,omitempty"`
	InPreview     *bool                  `protobuf:"varint,4,opt,name=in_preview,json=inPreview,proto3,oneof" json:"in_preview,omitempty"`
	InPage        *bool                  `protobuf:"varint,5,opt,name=in_page,json=inPage,proto3,oneof" json:"in_page,omitempty"`
	Order         *int32                 `protobuf:"varint,6,opt,name=order,proto3,oneof" json:"order,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFields) Reset() {
	*x = UpdateFields{}
	mi := &file_sd_fields_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFields) ProtoMessage() {}

func (x *UpdateFields) ProtoReflect() protoreflect.Message {
	mi := &file_sd_fields_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFields.ProtoReflect.Descriptor instead.
func (*UpdateFields) Descriptor() ([]byte, []int) {
	return file_sd_fields_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateFields) GetInFilter() bool {
	if x != nil && x.InFilter != nil {
		return *x.InFilter
	}
	return false
}

func (x *UpdateFields) GetInPreview() bool {
	if x != nil && x.InPreview != nil {
		return *x.InPreview
	}
	return false
}

func (x *UpdateFields) GetInPage() bool {
	if x != nil && x.InPage != nil {
		return *x.InPage
	}
	return false
}

func (x *UpdateFields) GetOrder() int32 {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return 0
}

type UpdateFieldsParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []int32                `protobuf:"varint,1,rep,packed,name=id,proto3" json:"id,omitempty"`
	Data          *UpdateFields          `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFieldsParams) Reset() {
	*x = UpdateFieldsParams{}
	mi := &file_sd_fields_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFieldsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFieldsParams) ProtoMessage() {}

func (x *UpdateFieldsParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_fields_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFieldsParams.ProtoReflect.Descriptor instead.
func (*UpdateFieldsParams) Descriptor() ([]byte, []int) {
	return file_sd_fields_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateFieldsParams) GetId() []int32 {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateFieldsParams) GetData() *UpdateFields {
	if x != nil {
		return x.Data
	}
	return nil
}

type FieldOption struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Option:
	//
	//	*FieldOption_Number
	//	*FieldOption_String_
	//	*FieldOption_Link
	//	*FieldOption_Image
	Option        isFieldOption_Option `protobuf_oneof:"option"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldOption) Reset() {
	*x = FieldOption{}
	mi := &file_sd_fields_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOption) ProtoMessage() {}

func (x *FieldOption) ProtoReflect() protoreflect.Message {
	mi := &file_sd_fields_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOption.ProtoReflect.Descriptor instead.
func (*FieldOption) Descriptor() ([]byte, []int) {
	return file_sd_fields_proto_rawDescGZIP(), []int{6}
}

func (x *FieldOption) GetOption() isFieldOption_Option {
	if x != nil {
		return x.Option
	}
	return nil
}

func (x *FieldOption) GetNumber() *FieldOptionNumber {
	if x != nil {
		if x, ok := x.Option.(*FieldOption_Number); ok {
			return x.Number
		}
	}
	return nil
}

func (x *FieldOption) GetString_() *FieldOptionString {
	if x != nil {
		if x, ok := x.Option.(*FieldOption_String_); ok {
			return x.String_
		}
	}
	return nil
}

func (x *FieldOption) GetLink() *FieldOptionLink {
	if x != nil {
		if x, ok := x.Option.(*FieldOption_Link); ok {
			return x.Link
		}
	}
	return nil
}

func (x *FieldOption) GetImage() *FieldOptionImage {
	if x != nil {
		if x, ok := x.Option.(*FieldOption_Image); ok {
			return x.Image
		}
	}
	return nil
}

type isFieldOption_Option interface {
	isFieldOption_Option()
}

type FieldOption_Number struct {
	Number *FieldOptionNumber `protobuf:"bytes,1,opt,name=number,proto3,oneof"`
}

type FieldOption_String_ struct {
	String_ *FieldOptionString `protobuf:"bytes,2,opt,name=string,proto3,oneof"`
}

type FieldOption_Link struct {
	Link *FieldOptionLink `protobuf:"bytes,3,opt,name=link,proto3,oneof"`
}

type FieldOption_Image struct {
	Image *FieldOptionImage `protobuf:"bytes,4,opt,name=image,proto3,oneof"`
}

func (*FieldOption_Number) isFieldOption_Option() {}

func (*FieldOption_String_) isFieldOption_Option() {}

func (*FieldOption_Link) isFieldOption_Option() {}

func (*FieldOption_Image) isFieldOption_Option() {}

type FieldOptionNumber struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Default       int32                  `protobuf:"varint,1,opt,name=default,proto3" json:"default,omitempty"`
	Min           int32                  `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty"`
	Max           int32                  `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	Step          int32                  `protobuf:"varint,4,opt,name=step,proto3" json:"step,omitempty"`
	Precision     int32                  `protobuf:"varint,5,opt,name=precision,proto3" json:"precision,omitempty"`
	View          FieldOptionNumberView  `protobuf:"varint,6,opt,name=view,proto3,enum=sd.FieldOptionNumberView" json:"view,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldOptionNumber) Reset() {
	*x = FieldOptionNumber{}
	mi := &file_sd_fields_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldOptionNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOptionNumber) ProtoMessage() {}

func (x *FieldOptionNumber) ProtoReflect() protoreflect.Message {
	mi := &file_sd_fields_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOptionNumber.ProtoReflect.Descriptor instead.
func (*FieldOptionNumber) Descriptor() ([]byte, []int) {
	return file_sd_fields_proto_rawDescGZIP(), []int{7}
}

func (x *FieldOptionNumber) GetDefault() int32 {
	if x != nil {
		return x.Default
	}
	return 0
}

func (x *FieldOptionNumber) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *FieldOptionNumber) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *FieldOptionNumber) GetStep() int32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *FieldOptionNumber) GetPrecision() int32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *FieldOptionNumber) GetView() FieldOptionNumberView {
	if x != nil {
		return x.View
	}
	return FieldOptionNumberView_FIELD_NUMBER_VIEW_UNSPECIFIED
}

type FieldOptionString struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Default       string                 `protobuf:"bytes,1,opt,name=default,proto3" json:"default,omitempty"`
	Mask          string                 `protobuf:"bytes,2,opt,name=mask,proto3" json:"mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldOptionString) Reset() {
	*x = FieldOptionString{}
	mi := &file_sd_fields_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldOptionString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOptionString) ProtoMessage() {}

func (x *FieldOptionString) ProtoReflect() protoreflect.Message {
	mi := &file_sd_fields_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOptionString.ProtoReflect.Descriptor instead.
func (*FieldOptionString) Descriptor() ([]byte, []int) {
	return file_sd_fields_proto_rawDescGZIP(), []int{8}
}

func (x *FieldOptionString) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *FieldOptionString) GetMask() string {
	if x != nil {
		return x.Mask
	}
	return ""
}

type FieldOptionLink struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Target        FieldLinkTarget        `protobuf:"varint,1,opt,name=target,proto3,enum=sd.FieldLinkTarget" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldOptionLink) Reset() {
	*x = FieldOptionLink{}
	mi := &file_sd_fields_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldOptionLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOptionLink) ProtoMessage() {}

func (x *FieldOptionLink) ProtoReflect() protoreflect.Message {
	mi := &file_sd_fields_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOptionLink.ProtoReflect.Descriptor instead.
func (*FieldOptionLink) Descriptor() ([]byte, []int) {
	return file_sd_fields_proto_rawDescGZIP(), []int{9}
}

func (x *FieldOptionLink) GetTarget() FieldLinkTarget {
	if x != nil {
		return x.Target
	}
	return FieldLinkTarget_FIELD_LINK_TARGET_UNSPECIFIED
}

type FieldOptionImage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinWidth      int32                  `protobuf:"varint,1,opt,name=min_width,json=minWidth,proto3" json:"min_width,omitempty"`
	MaxWidth      int32                  `protobuf:"varint,2,opt,name=max_width,json=maxWidth,proto3" json:"max_width,omitempty"`
	MinHeight     int32                  `protobuf:"varint,3,opt,name=min_height,json=minHeight,proto3" json:"min_height,omitempty"`
	MaxHeight     int32                  `protobuf:"varint,4,opt,name=max_height,json=maxHeight,proto3" json:"max_height,omitempty"`
	Quality       int32                  `protobuf:"varint,5,opt,name=quality,proto3" json:"quality,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldOptionImage) Reset() {
	*x = FieldOptionImage{}
	mi := &file_sd_fields_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldOptionImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOptionImage) ProtoMessage() {}

func (x *FieldOptionImage) ProtoReflect() protoreflect.Message {
	mi := &file_sd_fields_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOptionImage.ProtoReflect.Descriptor instead.
func (*FieldOptionImage) Descriptor() ([]byte, []int) {
	return file_sd_fields_proto_rawDescGZIP(), []int{10}
}

func (x *FieldOptionImage) GetMinWidth() int32 {
	if x != nil {
		return x.MinWidth
	}
	return 0
}

func (x *FieldOptionImage) GetMaxWidth() int32 {
	if x != nil {
		return x.MaxWidth
	}
	return 0
}

func (x *FieldOptionImage) GetMinHeight() int32 {
	if x != nil {
		return x.MinHeight
	}
	return 0
}

func (x *FieldOptionImage) GetMaxHeight() int32 {
	if x != nil {
		return x.MaxHeight
	}
	return 0
}

func (x *FieldOptionImage) GetQuality() int32 {
	if x != nil {
		return x.Quality
	}
	return 0
}

type FieldValue struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	FieldId int32                  `protobuf:"varint,1,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*FieldValue_Int
	//	*FieldValue_Str
	//	*FieldValue_Bool
	//	*FieldValue_Bytes
	//	*FieldValue_Ts
	Value         isFieldValue_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldValue) Reset() {
	*x = FieldValue{}
	mi := &file_sd_fields_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldValue) ProtoMessage() {}

func (x *FieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_sd_fields_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldValue.ProtoReflect.Descriptor instead.
func (*FieldValue) Descriptor() ([]byte, []int) {
	return file_sd_fields_proto_rawDescGZIP(), []int{11}
}

func (x *FieldValue) GetFieldId() int32 {
	if x != nil {
		return x.FieldId
	}
	return 0
}

func (x *FieldValue) GetValue() isFieldValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *FieldValue) GetInt() int32 {
	if x != nil {
		if x, ok := x.Value.(*FieldValue_Int); ok {
			return x.Int
		}
	}
	return 0
}

func (x *FieldValue) GetStr() string {
	if x != nil {
		if x, ok := x.Value.(*FieldValue_Str); ok {
			return x.Str
		}
	}
	return ""
}

func (x *FieldValue) GetBool() bool {
	if x != nil {
		if x, ok := x.Value.(*FieldValue_Bool); ok {
			return x.Bool
		}
	}
	return false
}

func (x *FieldValue) GetBytes() []byte {
	if x != nil {
		if x, ok := x.Value.(*FieldValue_Bytes); ok {
			return x.Bytes
		}
	}
	return nil
}

func (x *FieldValue) GetTs() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Value.(*FieldValue_Ts); ok {
			return x.Ts
		}
	}
	return nil
}

type isFieldValue_Value interface {
	isFieldValue_Value()
}

type FieldValue_Int struct {
	Int int32 `protobuf:"varint,2,opt,name=int,proto3,oneof"`
}

type FieldValue_Str struct {
	Str string `protobuf:"bytes,3,opt,name=str,proto3,oneof"`
}

type FieldValue_Bool struct {
	Bool bool `protobuf:"varint,4,opt,name=bool,proto3,oneof"`
}

type FieldValue_Bytes struct {
	Bytes []byte `protobuf:"bytes,5,opt,name=bytes,proto3,oneof"`
}

type FieldValue_Ts struct {
	Ts *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=ts,proto3,oneof"`
}

func (*FieldValue_Int) isFieldValue_Value() {}

func (*FieldValue_Str) isFieldValue_Value() {}

func (*FieldValue_Bool) isFieldValue_Value() {}

func (*FieldValue_Bytes) isFieldValue_Value() {}

func (*FieldValue_Ts) isFieldValue_Value() {}

type FieldEntityValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityId      int32                  `protobuf:"varint,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Data          *FieldValue            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldEntityValue) Reset() {
	*x = FieldEntityValue{}
	mi := &file_sd_fields_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldEntityValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldEntityValue) ProtoMessage() {}

func (x *FieldEntityValue) ProtoReflect() protoreflect.Message {
	mi := &file_sd_fields_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldEntityValue.ProtoReflect.Descriptor instead.
func (*FieldEntityValue) Descriptor() ([]byte, []int) {
	return file_sd_fields_proto_rawDescGZIP(), []int{12}
}

func (x *FieldEntityValue) GetEntityId() int32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *FieldEntityValue) GetData() *FieldValue {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_sd_fields_proto protoreflect.FileDescriptor

var file_sd_fields_proto_rawDesc = string([]byte{
	0x0a, 0x0f, 0x73, 0x64, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x73, 0x64, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x73, 0x64, 0x2f,
	0x6c, 0x31, 0x30, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x0c, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x15, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0a, 0x6c, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x69, 0x64, 0x73,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x22, 0xca, 0x01,
	0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x05, 0x6c, 0x31, 0x30, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x31, 0x30, 0x6e,
	0x52, 0x05, 0x6c, 0x31, 0x30, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79,
	0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6e, 0x0a, 0x08, 0x4e, 0x65,
	0x77, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79,
	0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xaa, 0x02, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x21, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d,
	0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x09, 0x69, 0x6e, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x69, 0x6e, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x06, 0x69, 0x6e,
	0x50, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x21, 0x0a, 0x05, 0x6c, 0x31, 0x30, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x64, 0x2e, 0x4e, 0x65, 0x77, 0x4c, 0x31, 0x30, 0x6e, 0x52, 0x05,
	0x6c, 0x31, 0x30, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4b, 0x65, 0x79, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xc0, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x6e, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x08, 0x69,
	0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x69, 0x6e,
	0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01,
	0x52, 0x09, 0x69, 0x6e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x88, 0x01, 0x01, 0x12, 0x1c,
	0x0a, 0x07, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x02, 0x52, 0x06, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x03, 0x52, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6e, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x64, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd2, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x04, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb2, 0x01, 0x0a, 0x11,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x61, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73,
	0x74, 0x65, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x19, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77,
	0x22, 0x41, 0x0a, 0x11, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x61, 0x73, 0x6b, 0x22, 0x3e, 0x0a, 0x0f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2b, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x69, 0x6e,
	0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0xb4, 0x01, 0x0a, 0x0a, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x03, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x00, 0x52, 0x03, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x03, 0x73, 0x74, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x04,
	0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f,
	0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x02, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x48, 0x00, 0x52, 0x02, 0x74, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x53, 0x0a, 0x10, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x7a, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x0a, 0x0a, 0x06, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4f, 0x4f, 0x4c, 0x45,
	0x41, 0x4e, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x54, 0x41, 0x4d,
	0x50, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x05, 0x12, 0x09, 0x0a,
	0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x4e, 0x55, 0x4d,
	0x10, 0x07, 0x2a, 0x5f, 0x0a, 0x15, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x12, 0x21, 0x0a, 0x1d, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x56, 0x49, 0x45, 0x57,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x41, 0x4e,
	0x47, 0x45, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x43, 0x52, 0x45, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x03, 0x2a, 0x7d, 0x0a, 0x0f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x6e, 0x6b,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f,
	0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x4e,
	0x45, 0x52, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x45, 0x42, 0x10, 0x02, 0x12, 0x08, 0x0a,
	0x04, 0x58, 0x43, 0x4f, 0x4d, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x41, 0x43, 0x45, 0x42,
	0x4f, 0x4f, 0x4b, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x47, 0x52,
	0x41, 0x4d, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x49, 0x4e, 0x4b, 0x45, 0x44, 0x49, 0x4e,
	0x10, 0x06, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x78, 0x33, 0x61, 0x2d, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x64, 0x3b, 0x73, 0x64, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_sd_fields_proto_rawDescOnce sync.Once
	file_sd_fields_proto_rawDescData []byte
)

func file_sd_fields_proto_rawDescGZIP() []byte {
	file_sd_fields_proto_rawDescOnce.Do(func() {
		file_sd_fields_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sd_fields_proto_rawDesc), len(file_sd_fields_proto_rawDesc)))
	})
	return file_sd_fields_proto_rawDescData
}

var file_sd_fields_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_sd_fields_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_sd_fields_proto_goTypes = []any{
	(FieldType)(0),                // 0: sd.FieldType
	(FieldOptionNumberView)(0),    // 1: sd.FieldOptionNumberView
	(FieldLinkTarget)(0),          // 2: sd.FieldLinkTarget
	(*FieldsFilter)(nil),          // 3: sd.FieldsFilter
	(*Field)(nil),                 // 4: sd.Field
	(*NewField)(nil),              // 5: sd.NewField
	(*CreateFieldParams)(nil),     // 6: sd.CreateFieldParams
	(*UpdateFields)(nil),          // 7: sd.UpdateFields
	(*UpdateFieldsParams)(nil),    // 8: sd.UpdateFieldsParams
	(*FieldOption)(nil),           // 9: sd.FieldOption
	(*FieldOptionNumber)(nil),     // 10: sd.FieldOptionNumber
	(*FieldOptionString)(nil),     // 11: sd.FieldOptionString
	(*FieldOptionLink)(nil),       // 12: sd.FieldOptionLink
	(*FieldOptionImage)(nil),      // 13: sd.FieldOptionImage
	(*FieldValue)(nil),            // 14: sd.FieldValue
	(*FieldEntityValue)(nil),      // 15: sd.FieldEntityValue
	(common.Lang)(0),              // 16: common.Lang
	(*common.ListParams)(nil),     // 17: common.ListParams
	(*common.L10N)(nil),           // 18: common.L10n
	(*NewL10N)(nil),               // 19: sd.NewL10n
	(*timestamppb.Timestamp)(nil), // 20: google.protobuf.Timestamp
}
var file_sd_fields_proto_depIdxs = []int32{
	16, // 0: sd.FieldsFilter.lang:type_name -> common.Lang
	17, // 1: sd.FieldsFilter.listParams:type_name -> common.ListParams
	0,  // 2: sd.Field.type:type_name -> sd.FieldType
	18, // 3: sd.Field.l10ns:type_name -> common.L10n
	9,  // 4: sd.Field.options:type_name -> sd.FieldOption
	0,  // 5: sd.NewField.type:type_name -> sd.FieldType
	0,  // 6: sd.CreateFieldParams.type:type_name -> sd.FieldType
	19, // 7: sd.CreateFieldParams.l10ns:type_name -> sd.NewL10n
	7,  // 8: sd.UpdateFieldsParams.data:type_name -> sd.UpdateFields
	10, // 9: sd.FieldOption.number:type_name -> sd.FieldOptionNumber
	11, // 10: sd.FieldOption.string:type_name -> sd.FieldOptionString
	12, // 11: sd.FieldOption.link:type_name -> sd.FieldOptionLink
	13, // 12: sd.FieldOption.image:type_name -> sd.FieldOptionImage
	1,  // 13: sd.FieldOptionNumber.view:type_name -> sd.FieldOptionNumberView
	2,  // 14: sd.FieldOptionLink.target:type_name -> sd.FieldLinkTarget
	20, // 15: sd.FieldValue.ts:type_name -> google.protobuf.Timestamp
	14, // 16: sd.FieldEntityValue.data:type_name -> sd.FieldValue
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_sd_fields_proto_init() }
func file_sd_fields_proto_init() {
	if File_sd_fields_proto != nil {
		return
	}
	file_sd_l10n_proto_init()
	file_sd_fields_proto_msgTypes[0].OneofWrappers = []any{}
	file_sd_fields_proto_msgTypes[1].OneofWrappers = []any{}
	file_sd_fields_proto_msgTypes[2].OneofWrappers = []any{}
	file_sd_fields_proto_msgTypes[3].OneofWrappers = []any{}
	file_sd_fields_proto_msgTypes[4].OneofWrappers = []any{}
	file_sd_fields_proto_msgTypes[6].OneofWrappers = []any{
		(*FieldOption_Number)(nil),
		(*FieldOption_String_)(nil),
		(*FieldOption_Link)(nil),
		(*FieldOption_Image)(nil),
	}
	file_sd_fields_proto_msgTypes[11].OneofWrappers = []any{
		(*FieldValue_Int)(nil),
		(*FieldValue_Str)(nil),
		(*FieldValue_Bool)(nil),
		(*FieldValue_Bytes)(nil),
		(*FieldValue_Ts)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sd_fields_proto_rawDesc), len(file_sd_fields_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sd_fields_proto_goTypes,
		DependencyIndexes: file_sd_fields_proto_depIdxs,
		EnumInfos:         file_sd_fields_proto_enumTypes,
		MessageInfos:      file_sd_fields_proto_msgTypes,
	}.Build()
	File_sd_fields_proto = out.File
	file_sd_fields_proto_goTypes = nil
	file_sd_fields_proto_depIdxs = nil
}
