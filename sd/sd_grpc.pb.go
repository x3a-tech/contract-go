// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v4.24.4
// source: sd/sd.proto

package sdv1

import (
	context "context"
	common "github.com/x3a-tech/contract-go/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	StaticData_GetGroupKeys_FullMethodName              = "/sd.StaticData/GetGroupKeys"
	StaticData_CreateGroupKeys_FullMethodName           = "/sd.StaticData/CreateGroupKeys"
	StaticData_RemoveGroupKeys_FullMethodName           = "/sd.StaticData/RemoveGroupKeys"
	StaticData_GetLists_FullMethodName                  = "/sd.StaticData/GetLists"
	StaticData_CreateList_FullMethodName                = "/sd.StaticData/CreateList"
	StaticData_UpdateListSlug_FullMethodName            = "/sd.StaticData/UpdateListSlug"
	StaticData_UpdateListMeta_FullMethodName            = "/sd.StaticData/UpdateListMeta"
	StaticData_UpdateListImage_FullMethodName           = "/sd.StaticData/UpdateListImage"
	StaticData_RemoveListImage_FullMethodName           = "/sd.StaticData/RemoveListImage"
	StaticData_UpdateListL10Ns_FullMethodName           = "/sd.StaticData/UpdateListL10ns"
	StaticData_ShowLists_FullMethodName                 = "/sd.StaticData/ShowLists"
	StaticData_HideLists_FullMethodName                 = "/sd.StaticData/HideLists"
	StaticData_RemoveLists_FullMethodName               = "/sd.StaticData/RemoveLists"
	StaticData_SortLists_FullMethodName                 = "/sd.StaticData/SortLists"
	StaticData_AttachListsToLists_FullMethodName        = "/sd.StaticData/AttachListsToLists"
	StaticData_DetachListsToLists_FullMethodName        = "/sd.StaticData/DetachListsToLists"
	StaticData_CopyList_FullMethodName                  = "/sd.StaticData/CopyList"
	StaticData_CopyListWithRelations_FullMethodName     = "/sd.StaticData/CopyListWithRelations"
	StaticData_CheckFreeSlugInList_FullMethodName       = "/sd.StaticData/CheckFreeSlugInList"
	StaticData_GetEntities_FullMethodName               = "/sd.StaticData/GetEntities"
	StaticData_CreateEntity_FullMethodName              = "/sd.StaticData/CreateEntity"
	StaticData_UpdateEntitiesRating_FullMethodName      = "/sd.StaticData/UpdateEntitiesRating"
	StaticData_UpdateEntitySlug_FullMethodName          = "/sd.StaticData/UpdateEntitySlug"
	StaticData_UpdateEntityImage_FullMethodName         = "/sd.StaticData/UpdateEntityImage"
	StaticData_RemoveEntityImage_FullMethodName         = "/sd.StaticData/RemoveEntityImage"
	StaticData_UpdateEntityL10Ns_FullMethodName         = "/sd.StaticData/UpdateEntityL10ns"
	StaticData_ShowEntities_FullMethodName              = "/sd.StaticData/ShowEntities"
	StaticData_HideEntities_FullMethodName              = "/sd.StaticData/HideEntities"
	StaticData_RemoveEntities_FullMethodName            = "/sd.StaticData/RemoveEntities"
	StaticData_SortEntities_FullMethodName              = "/sd.StaticData/SortEntities"
	StaticData_AttachEntitiesToList_FullMethodName      = "/sd.StaticData/AttachEntitiesToList"
	StaticData_DetachEntitiesFromList_FullMethodName    = "/sd.StaticData/DetachEntitiesFromList"
	StaticData_CopyEntity_FullMethodName                = "/sd.StaticData/CopyEntity"
	StaticData_CopyEntityWithRelations_FullMethodName   = "/sd.StaticData/CopyEntityWithRelations"
	StaticData_CheckFreeSlugInEntities_FullMethodName   = "/sd.StaticData/CheckFreeSlugInEntities"
	StaticData_GetFields_FullMethodName                 = "/sd.StaticData/GetFields"
	StaticData_GetFieldsValuesByEntities_FullMethodName = "/sd.StaticData/GetFieldsValuesByEntities"
	StaticData_CreateField_FullMethodName               = "/sd.StaticData/CreateField"
	StaticData_UpsertEntityFieldValue_FullMethodName    = "/sd.StaticData/UpsertEntityFieldValue"
	StaticData_RemoveEntityFieldValue_FullMethodName    = "/sd.StaticData/RemoveEntityFieldValue"
	StaticData_UpsertEntityFieldImage_FullMethodName    = "/sd.StaticData/UpsertEntityFieldImage"
	StaticData_RemoveEntityFieldImage_FullMethodName    = "/sd.StaticData/RemoveEntityFieldImage"
	StaticData_UpdateFields_FullMethodName              = "/sd.StaticData/UpdateFields"
	StaticData_UpdateFieldsL10Ns_FullMethodName         = "/sd.StaticData/UpdateFieldsL10ns"
	StaticData_RemoveFieldsL10Ns_FullMethodName         = "/sd.StaticData/RemoveFieldsL10ns"
	StaticData_RemoveFields_FullMethodName              = "/sd.StaticData/RemoveFields"
	StaticData_SortFields_FullMethodName                = "/sd.StaticData/SortFields"
	StaticData_UpsertFieldImage_FullMethodName          = "/sd.StaticData/UpsertFieldImage"
	StaticData_UpdateOptionsFields_FullMethodName       = "/sd.StaticData/UpdateOptionsFields"
	StaticData_AttachFieldToListParams_FullMethodName   = "/sd.StaticData/AttachFieldToListParams"
	StaticData_DetachFieldFromListParams_FullMethodName = "/sd.StaticData/DetachFieldFromListParams"
	StaticData_AttachFieldsToGroupKeys_FullMethodName   = "/sd.StaticData/AttachFieldsToGroupKeys"
	StaticData_DetachFieldsToGroupKeys_FullMethodName   = "/sd.StaticData/DetachFieldsToGroupKeys"
	StaticData_CheckAttachedFieldsInList_FullMethodName = "/sd.StaticData/CheckAttachedFieldsInList"
	StaticData_GetPages_FullMethodName                  = "/sd.StaticData/GetPages"
	StaticData_CreatePage_FullMethodName                = "/sd.StaticData/CreatePage"
	StaticData_UpdatePage_FullMethodName                = "/sd.StaticData/UpdatePage"
	StaticData_RemovePage_FullMethodName                = "/sd.StaticData/RemovePage"
	StaticData_AttachPageToParent_FullMethodName        = "/sd.StaticData/AttachPageToParent"
	StaticData_DetachPageFromParent_FullMethodName      = "/sd.StaticData/DetachPageFromParent"
)

// StaticDataClient is the client API for StaticData service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StaticDataClient interface {
	// GroupKeys
	GetGroupKeys(ctx context.Context, in *GetGroupKeysParams, opts ...grpc.CallOption) (*GetGroupKeysResponse, error)
	CreateGroupKeys(ctx context.Context, in *CreateGroupKeysParams, opts ...grpc.CallOption) (*CreateGroupKeysResponse, error)
	RemoveGroupKeys(ctx context.Context, in *RemoveGroupKeysParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	// Lists
	GetLists(ctx context.Context, in *GetListsParams, opts ...grpc.CallOption) (*GetListResponse, error)
	CreateList(ctx context.Context, in *CreateListParams, opts ...grpc.CallOption) (*List, error)
	UpdateListSlug(ctx context.Context, in *UpdateListSlugParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateListMeta(ctx context.Context, in *UpdateListMetaParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateListImage(ctx context.Context, in *UpdateListImageParams, opts ...grpc.CallOption) (*UpdateListImageResponse, error)
	RemoveListImage(ctx context.Context, in *RemoveListImageParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateListL10Ns(ctx context.Context, in *UpdateListL10NsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ShowLists(ctx context.Context, in *SingleManipulationListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	HideLists(ctx context.Context, in *SingleManipulationListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	RemoveLists(ctx context.Context, in *SingleManipulationListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SortLists(ctx context.Context, in *SortListParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	AttachListsToLists(ctx context.Context, in *AttachListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DetachListsToLists(ctx context.Context, in *AttachListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CopyList(ctx context.Context, in *CopyListParams, opts ...grpc.CallOption) (*List, error)
	CopyListWithRelations(ctx context.Context, in *CopyListParams, opts ...grpc.CallOption) (*List, error)
	CheckFreeSlugInList(ctx context.Context, in *CheckFreeSlugInListParams, opts ...grpc.CallOption) (*common.BoolStatus, error)
	// Entities
	GetEntities(ctx context.Context, in *GetEntitiesParams, opts ...grpc.CallOption) (*GetEntitiesResponse, error)
	CreateEntity(ctx context.Context, in *CreateEntityParams, opts ...grpc.CallOption) (*Entity, error)
	UpdateEntitiesRating(ctx context.Context, in *UpdateEntitiesRaringParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateEntitySlug(ctx context.Context, in *UpdateEntitySlugParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateEntityImage(ctx context.Context, in *UpdateEntityImageParams, opts ...grpc.CallOption) (*UpdateEntityImageResponse, error)
	RemoveEntityImage(ctx context.Context, in *RemoveEntityImageParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateEntityL10Ns(ctx context.Context, in *UpdateEntityL10NsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	ShowEntities(ctx context.Context, in *SingleManipulationEntitiesParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	HideEntities(ctx context.Context, in *SingleManipulationEntitiesParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	RemoveEntities(ctx context.Context, in *SingleManipulationEntitiesParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SortEntities(ctx context.Context, in *SortEntitiesParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	AttachEntitiesToList(ctx context.Context, in *AttachEntitiesToListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DetachEntitiesFromList(ctx context.Context, in *AttachEntitiesToListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CopyEntity(ctx context.Context, in *CopyEntityParams, opts ...grpc.CallOption) (*Entity, error)
	CopyEntityWithRelations(ctx context.Context, in *CopyEntityParams, opts ...grpc.CallOption) (*Entity, error)
	CheckFreeSlugInEntities(ctx context.Context, in *CheckFreeSlugInEntitiesParams, opts ...grpc.CallOption) (*common.BoolStatus, error)
	// Fields
	GetFields(ctx context.Context, in *GetFieldsParams, opts ...grpc.CallOption) (*GetFieldsResponse, error)
	GetFieldsValuesByEntities(ctx context.Context, in *GetFieldsValuesByEntitiesParams, opts ...grpc.CallOption) (*GetFieldsValuesByEntitiesResponse, error)
	CreateField(ctx context.Context, in *CreateFieldParams, opts ...grpc.CallOption) (*Field, error)
	UpsertEntityFieldValue(ctx context.Context, in *UpsertEntityFieldValueParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	RemoveEntityFieldValue(ctx context.Context, in *RemoveEntityFieldValueParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpsertEntityFieldImage(ctx context.Context, in *UpsertEntityFieldImageResponse, opts ...grpc.CallOption) (*emptypb.Empty, error)
	RemoveEntityFieldImage(ctx context.Context, in *RemoveEntityFieldValueParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateFields(ctx context.Context, in *UpdateFieldsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateFieldsL10Ns(ctx context.Context, in *UpdateFieldsL10NsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	RemoveFieldsL10Ns(ctx context.Context, in *RemoveFieldsL10NsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	RemoveFields(ctx context.Context, in *RemoveFieldsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	SortFields(ctx context.Context, in *SortFieldsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpsertFieldImage(ctx context.Context, in *UpdateOptionsFieldsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateOptionsFields(ctx context.Context, in *UpdateOptionsFieldsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	AttachFieldToListParams(ctx context.Context, in *ToggleAttachFieldToListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DetachFieldFromListParams(ctx context.Context, in *ToggleAttachFieldToListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	AttachFieldsToGroupKeys(ctx context.Context, in *ToggleAttachFieldToKeyGroupsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DetachFieldsToGroupKeys(ctx context.Context, in *ToggleAttachFieldToKeyGroupsParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CheckAttachedFieldsInList(ctx context.Context, in *CheckAttachedFieldsInListParams, opts ...grpc.CallOption) (*common.BoolStatus, error)
	// Pages
	GetPages(ctx context.Context, in *GetPagesParams, opts ...grpc.CallOption) (*GetPagesResponse, error)
	CreatePage(ctx context.Context, in *PageParams, opts ...grpc.CallOption) (*Page, error)
	UpdatePage(ctx context.Context, in *UpdatePageParams, opts ...grpc.CallOption) (*Page, error)
	RemovePage(ctx context.Context, in *RemovePagesParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	AttachPageToParent(ctx context.Context, in *ToggleAttachPageToParentParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
	DetachPageFromParent(ctx context.Context, in *ToggleAttachPageToParentParams, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type staticDataClient struct {
	cc grpc.ClientConnInterface
}

func NewStaticDataClient(cc grpc.ClientConnInterface) StaticDataClient {
	return &staticDataClient{cc}
}

func (c *staticDataClient) GetGroupKeys(ctx context.Context, in *GetGroupKeysParams, opts ...grpc.CallOption) (*GetGroupKeysResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetGroupKeysResponse)
	err := c.cc.Invoke(ctx, StaticData_GetGroupKeys_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) CreateGroupKeys(ctx context.Context, in *CreateGroupKeysParams, opts ...grpc.CallOption) (*CreateGroupKeysResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateGroupKeysResponse)
	err := c.cc.Invoke(ctx, StaticData_CreateGroupKeys_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) RemoveGroupKeys(ctx context.Context, in *RemoveGroupKeysParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_RemoveGroupKeys_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) GetLists(ctx context.Context, in *GetListsParams, opts ...grpc.CallOption) (*GetListResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetListResponse)
	err := c.cc.Invoke(ctx, StaticData_GetLists_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) CreateList(ctx context.Context, in *CreateListParams, opts ...grpc.CallOption) (*List, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(List)
	err := c.cc.Invoke(ctx, StaticData_CreateList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpdateListSlug(ctx context.Context, in *UpdateListSlugParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_UpdateListSlug_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpdateListMeta(ctx context.Context, in *UpdateListMetaParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_UpdateListMeta_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpdateListImage(ctx context.Context, in *UpdateListImageParams, opts ...grpc.CallOption) (*UpdateListImageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateListImageResponse)
	err := c.cc.Invoke(ctx, StaticData_UpdateListImage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) RemoveListImage(ctx context.Context, in *RemoveListImageParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_RemoveListImage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpdateListL10Ns(ctx context.Context, in *UpdateListL10NsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_UpdateListL10Ns_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) ShowLists(ctx context.Context, in *SingleManipulationListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_ShowLists_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) HideLists(ctx context.Context, in *SingleManipulationListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_HideLists_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) RemoveLists(ctx context.Context, in *SingleManipulationListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_RemoveLists_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) SortLists(ctx context.Context, in *SortListParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_SortLists_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) AttachListsToLists(ctx context.Context, in *AttachListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_AttachListsToLists_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) DetachListsToLists(ctx context.Context, in *AttachListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_DetachListsToLists_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) CopyList(ctx context.Context, in *CopyListParams, opts ...grpc.CallOption) (*List, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(List)
	err := c.cc.Invoke(ctx, StaticData_CopyList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) CopyListWithRelations(ctx context.Context, in *CopyListParams, opts ...grpc.CallOption) (*List, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(List)
	err := c.cc.Invoke(ctx, StaticData_CopyListWithRelations_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) CheckFreeSlugInList(ctx context.Context, in *CheckFreeSlugInListParams, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_CheckFreeSlugInList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) GetEntities(ctx context.Context, in *GetEntitiesParams, opts ...grpc.CallOption) (*GetEntitiesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetEntitiesResponse)
	err := c.cc.Invoke(ctx, StaticData_GetEntities_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) CreateEntity(ctx context.Context, in *CreateEntityParams, opts ...grpc.CallOption) (*Entity, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Entity)
	err := c.cc.Invoke(ctx, StaticData_CreateEntity_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpdateEntitiesRating(ctx context.Context, in *UpdateEntitiesRaringParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_UpdateEntitiesRating_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpdateEntitySlug(ctx context.Context, in *UpdateEntitySlugParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_UpdateEntitySlug_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpdateEntityImage(ctx context.Context, in *UpdateEntityImageParams, opts ...grpc.CallOption) (*UpdateEntityImageResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateEntityImageResponse)
	err := c.cc.Invoke(ctx, StaticData_UpdateEntityImage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) RemoveEntityImage(ctx context.Context, in *RemoveEntityImageParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_RemoveEntityImage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpdateEntityL10Ns(ctx context.Context, in *UpdateEntityL10NsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_UpdateEntityL10Ns_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) ShowEntities(ctx context.Context, in *SingleManipulationEntitiesParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_ShowEntities_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) HideEntities(ctx context.Context, in *SingleManipulationEntitiesParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_HideEntities_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) RemoveEntities(ctx context.Context, in *SingleManipulationEntitiesParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_RemoveEntities_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) SortEntities(ctx context.Context, in *SortEntitiesParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_SortEntities_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) AttachEntitiesToList(ctx context.Context, in *AttachEntitiesToListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_AttachEntitiesToList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) DetachEntitiesFromList(ctx context.Context, in *AttachEntitiesToListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_DetachEntitiesFromList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) CopyEntity(ctx context.Context, in *CopyEntityParams, opts ...grpc.CallOption) (*Entity, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Entity)
	err := c.cc.Invoke(ctx, StaticData_CopyEntity_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) CopyEntityWithRelations(ctx context.Context, in *CopyEntityParams, opts ...grpc.CallOption) (*Entity, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Entity)
	err := c.cc.Invoke(ctx, StaticData_CopyEntityWithRelations_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) CheckFreeSlugInEntities(ctx context.Context, in *CheckFreeSlugInEntitiesParams, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_CheckFreeSlugInEntities_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) GetFields(ctx context.Context, in *GetFieldsParams, opts ...grpc.CallOption) (*GetFieldsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetFieldsResponse)
	err := c.cc.Invoke(ctx, StaticData_GetFields_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) GetFieldsValuesByEntities(ctx context.Context, in *GetFieldsValuesByEntitiesParams, opts ...grpc.CallOption) (*GetFieldsValuesByEntitiesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetFieldsValuesByEntitiesResponse)
	err := c.cc.Invoke(ctx, StaticData_GetFieldsValuesByEntities_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) CreateField(ctx context.Context, in *CreateFieldParams, opts ...grpc.CallOption) (*Field, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Field)
	err := c.cc.Invoke(ctx, StaticData_CreateField_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpsertEntityFieldValue(ctx context.Context, in *UpsertEntityFieldValueParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_UpsertEntityFieldValue_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) RemoveEntityFieldValue(ctx context.Context, in *RemoveEntityFieldValueParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_RemoveEntityFieldValue_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpsertEntityFieldImage(ctx context.Context, in *UpsertEntityFieldImageResponse, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_UpsertEntityFieldImage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) RemoveEntityFieldImage(ctx context.Context, in *RemoveEntityFieldValueParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_RemoveEntityFieldImage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpdateFields(ctx context.Context, in *UpdateFieldsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_UpdateFields_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpdateFieldsL10Ns(ctx context.Context, in *UpdateFieldsL10NsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_UpdateFieldsL10Ns_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) RemoveFieldsL10Ns(ctx context.Context, in *RemoveFieldsL10NsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_RemoveFieldsL10Ns_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) RemoveFields(ctx context.Context, in *RemoveFieldsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_RemoveFields_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) SortFields(ctx context.Context, in *SortFieldsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_SortFields_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpsertFieldImage(ctx context.Context, in *UpdateOptionsFieldsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_UpsertFieldImage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpdateOptionsFields(ctx context.Context, in *UpdateOptionsFieldsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_UpdateOptionsFields_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) AttachFieldToListParams(ctx context.Context, in *ToggleAttachFieldToListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_AttachFieldToListParams_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) DetachFieldFromListParams(ctx context.Context, in *ToggleAttachFieldToListsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_DetachFieldFromListParams_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) AttachFieldsToGroupKeys(ctx context.Context, in *ToggleAttachFieldToKeyGroupsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_AttachFieldsToGroupKeys_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) DetachFieldsToGroupKeys(ctx context.Context, in *ToggleAttachFieldToKeyGroupsParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_DetachFieldsToGroupKeys_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) CheckAttachedFieldsInList(ctx context.Context, in *CheckAttachedFieldsInListParams, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_CheckAttachedFieldsInList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) GetPages(ctx context.Context, in *GetPagesParams, opts ...grpc.CallOption) (*GetPagesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetPagesResponse)
	err := c.cc.Invoke(ctx, StaticData_GetPages_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) CreatePage(ctx context.Context, in *PageParams, opts ...grpc.CallOption) (*Page, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Page)
	err := c.cc.Invoke(ctx, StaticData_CreatePage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpdatePage(ctx context.Context, in *UpdatePageParams, opts ...grpc.CallOption) (*Page, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Page)
	err := c.cc.Invoke(ctx, StaticData_UpdatePage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) RemovePage(ctx context.Context, in *RemovePagesParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_RemovePage_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) AttachPageToParent(ctx context.Context, in *ToggleAttachPageToParentParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_AttachPageToParent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) DetachPageFromParent(ctx context.Context, in *ToggleAttachPageToParentParams, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, StaticData_DetachPageFromParent_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StaticDataServer is the server API for StaticData service.
// All implementations must embed UnimplementedStaticDataServer
// for forward compatibility.
type StaticDataServer interface {
	// GroupKeys
	GetGroupKeys(context.Context, *GetGroupKeysParams) (*GetGroupKeysResponse, error)
	CreateGroupKeys(context.Context, *CreateGroupKeysParams) (*CreateGroupKeysResponse, error)
	RemoveGroupKeys(context.Context, *RemoveGroupKeysParams) (*emptypb.Empty, error)
	// Lists
	GetLists(context.Context, *GetListsParams) (*GetListResponse, error)
	CreateList(context.Context, *CreateListParams) (*List, error)
	UpdateListSlug(context.Context, *UpdateListSlugParams) (*emptypb.Empty, error)
	UpdateListMeta(context.Context, *UpdateListMetaParams) (*emptypb.Empty, error)
	UpdateListImage(context.Context, *UpdateListImageParams) (*UpdateListImageResponse, error)
	RemoveListImage(context.Context, *RemoveListImageParams) (*emptypb.Empty, error)
	UpdateListL10Ns(context.Context, *UpdateListL10NsParams) (*emptypb.Empty, error)
	ShowLists(context.Context, *SingleManipulationListsParams) (*emptypb.Empty, error)
	HideLists(context.Context, *SingleManipulationListsParams) (*emptypb.Empty, error)
	RemoveLists(context.Context, *SingleManipulationListsParams) (*emptypb.Empty, error)
	SortLists(context.Context, *SortListParams) (*emptypb.Empty, error)
	AttachListsToLists(context.Context, *AttachListsParams) (*emptypb.Empty, error)
	DetachListsToLists(context.Context, *AttachListsParams) (*emptypb.Empty, error)
	CopyList(context.Context, *CopyListParams) (*List, error)
	CopyListWithRelations(context.Context, *CopyListParams) (*List, error)
	CheckFreeSlugInList(context.Context, *CheckFreeSlugInListParams) (*common.BoolStatus, error)
	// Entities
	GetEntities(context.Context, *GetEntitiesParams) (*GetEntitiesResponse, error)
	CreateEntity(context.Context, *CreateEntityParams) (*Entity, error)
	UpdateEntitiesRating(context.Context, *UpdateEntitiesRaringParams) (*emptypb.Empty, error)
	UpdateEntitySlug(context.Context, *UpdateEntitySlugParams) (*emptypb.Empty, error)
	UpdateEntityImage(context.Context, *UpdateEntityImageParams) (*UpdateEntityImageResponse, error)
	RemoveEntityImage(context.Context, *RemoveEntityImageParams) (*emptypb.Empty, error)
	UpdateEntityL10Ns(context.Context, *UpdateEntityL10NsParams) (*emptypb.Empty, error)
	ShowEntities(context.Context, *SingleManipulationEntitiesParams) (*emptypb.Empty, error)
	HideEntities(context.Context, *SingleManipulationEntitiesParams) (*emptypb.Empty, error)
	RemoveEntities(context.Context, *SingleManipulationEntitiesParams) (*emptypb.Empty, error)
	SortEntities(context.Context, *SortEntitiesParams) (*emptypb.Empty, error)
	AttachEntitiesToList(context.Context, *AttachEntitiesToListsParams) (*emptypb.Empty, error)
	DetachEntitiesFromList(context.Context, *AttachEntitiesToListsParams) (*emptypb.Empty, error)
	CopyEntity(context.Context, *CopyEntityParams) (*Entity, error)
	CopyEntityWithRelations(context.Context, *CopyEntityParams) (*Entity, error)
	CheckFreeSlugInEntities(context.Context, *CheckFreeSlugInEntitiesParams) (*common.BoolStatus, error)
	// Fields
	GetFields(context.Context, *GetFieldsParams) (*GetFieldsResponse, error)
	GetFieldsValuesByEntities(context.Context, *GetFieldsValuesByEntitiesParams) (*GetFieldsValuesByEntitiesResponse, error)
	CreateField(context.Context, *CreateFieldParams) (*Field, error)
	UpsertEntityFieldValue(context.Context, *UpsertEntityFieldValueParams) (*emptypb.Empty, error)
	RemoveEntityFieldValue(context.Context, *RemoveEntityFieldValueParams) (*emptypb.Empty, error)
	UpsertEntityFieldImage(context.Context, *UpsertEntityFieldImageResponse) (*emptypb.Empty, error)
	RemoveEntityFieldImage(context.Context, *RemoveEntityFieldValueParams) (*emptypb.Empty, error)
	UpdateFields(context.Context, *UpdateFieldsParams) (*emptypb.Empty, error)
	UpdateFieldsL10Ns(context.Context, *UpdateFieldsL10NsParams) (*emptypb.Empty, error)
	RemoveFieldsL10Ns(context.Context, *RemoveFieldsL10NsParams) (*emptypb.Empty, error)
	RemoveFields(context.Context, *RemoveFieldsParams) (*emptypb.Empty, error)
	SortFields(context.Context, *SortFieldsParams) (*emptypb.Empty, error)
	UpsertFieldImage(context.Context, *UpdateOptionsFieldsParams) (*emptypb.Empty, error)
	UpdateOptionsFields(context.Context, *UpdateOptionsFieldsParams) (*emptypb.Empty, error)
	AttachFieldToListParams(context.Context, *ToggleAttachFieldToListsParams) (*emptypb.Empty, error)
	DetachFieldFromListParams(context.Context, *ToggleAttachFieldToListsParams) (*emptypb.Empty, error)
	AttachFieldsToGroupKeys(context.Context, *ToggleAttachFieldToKeyGroupsParams) (*emptypb.Empty, error)
	DetachFieldsToGroupKeys(context.Context, *ToggleAttachFieldToKeyGroupsParams) (*emptypb.Empty, error)
	CheckAttachedFieldsInList(context.Context, *CheckAttachedFieldsInListParams) (*common.BoolStatus, error)
	// Pages
	GetPages(context.Context, *GetPagesParams) (*GetPagesResponse, error)
	CreatePage(context.Context, *PageParams) (*Page, error)
	UpdatePage(context.Context, *UpdatePageParams) (*Page, error)
	RemovePage(context.Context, *RemovePagesParams) (*emptypb.Empty, error)
	AttachPageToParent(context.Context, *ToggleAttachPageToParentParams) (*emptypb.Empty, error)
	DetachPageFromParent(context.Context, *ToggleAttachPageToParentParams) (*emptypb.Empty, error)
	mustEmbedUnimplementedStaticDataServer()
}

// UnimplementedStaticDataServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedStaticDataServer struct{}

func (UnimplementedStaticDataServer) GetGroupKeys(context.Context, *GetGroupKeysParams) (*GetGroupKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGroupKeys not implemented")
}
func (UnimplementedStaticDataServer) CreateGroupKeys(context.Context, *CreateGroupKeysParams) (*CreateGroupKeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGroupKeys not implemented")
}
func (UnimplementedStaticDataServer) RemoveGroupKeys(context.Context, *RemoveGroupKeysParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveGroupKeys not implemented")
}
func (UnimplementedStaticDataServer) GetLists(context.Context, *GetListsParams) (*GetListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLists not implemented")
}
func (UnimplementedStaticDataServer) CreateList(context.Context, *CreateListParams) (*List, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateList not implemented")
}
func (UnimplementedStaticDataServer) UpdateListSlug(context.Context, *UpdateListSlugParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateListSlug not implemented")
}
func (UnimplementedStaticDataServer) UpdateListMeta(context.Context, *UpdateListMetaParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateListMeta not implemented")
}
func (UnimplementedStaticDataServer) UpdateListImage(context.Context, *UpdateListImageParams) (*UpdateListImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateListImage not implemented")
}
func (UnimplementedStaticDataServer) RemoveListImage(context.Context, *RemoveListImageParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveListImage not implemented")
}
func (UnimplementedStaticDataServer) UpdateListL10Ns(context.Context, *UpdateListL10NsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateListL10Ns not implemented")
}
func (UnimplementedStaticDataServer) ShowLists(context.Context, *SingleManipulationListsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowLists not implemented")
}
func (UnimplementedStaticDataServer) HideLists(context.Context, *SingleManipulationListsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HideLists not implemented")
}
func (UnimplementedStaticDataServer) RemoveLists(context.Context, *SingleManipulationListsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveLists not implemented")
}
func (UnimplementedStaticDataServer) SortLists(context.Context, *SortListParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SortLists not implemented")
}
func (UnimplementedStaticDataServer) AttachListsToLists(context.Context, *AttachListsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachListsToLists not implemented")
}
func (UnimplementedStaticDataServer) DetachListsToLists(context.Context, *AttachListsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetachListsToLists not implemented")
}
func (UnimplementedStaticDataServer) CopyList(context.Context, *CopyListParams) (*List, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CopyList not implemented")
}
func (UnimplementedStaticDataServer) CopyListWithRelations(context.Context, *CopyListParams) (*List, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CopyListWithRelations not implemented")
}
func (UnimplementedStaticDataServer) CheckFreeSlugInList(context.Context, *CheckFreeSlugInListParams) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckFreeSlugInList not implemented")
}
func (UnimplementedStaticDataServer) GetEntities(context.Context, *GetEntitiesParams) (*GetEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEntities not implemented")
}
func (UnimplementedStaticDataServer) CreateEntity(context.Context, *CreateEntityParams) (*Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEntity not implemented")
}
func (UnimplementedStaticDataServer) UpdateEntitiesRating(context.Context, *UpdateEntitiesRaringParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEntitiesRating not implemented")
}
func (UnimplementedStaticDataServer) UpdateEntitySlug(context.Context, *UpdateEntitySlugParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEntitySlug not implemented")
}
func (UnimplementedStaticDataServer) UpdateEntityImage(context.Context, *UpdateEntityImageParams) (*UpdateEntityImageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEntityImage not implemented")
}
func (UnimplementedStaticDataServer) RemoveEntityImage(context.Context, *RemoveEntityImageParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveEntityImage not implemented")
}
func (UnimplementedStaticDataServer) UpdateEntityL10Ns(context.Context, *UpdateEntityL10NsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEntityL10Ns not implemented")
}
func (UnimplementedStaticDataServer) ShowEntities(context.Context, *SingleManipulationEntitiesParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShowEntities not implemented")
}
func (UnimplementedStaticDataServer) HideEntities(context.Context, *SingleManipulationEntitiesParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HideEntities not implemented")
}
func (UnimplementedStaticDataServer) RemoveEntities(context.Context, *SingleManipulationEntitiesParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveEntities not implemented")
}
func (UnimplementedStaticDataServer) SortEntities(context.Context, *SortEntitiesParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SortEntities not implemented")
}
func (UnimplementedStaticDataServer) AttachEntitiesToList(context.Context, *AttachEntitiesToListsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachEntitiesToList not implemented")
}
func (UnimplementedStaticDataServer) DetachEntitiesFromList(context.Context, *AttachEntitiesToListsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetachEntitiesFromList not implemented")
}
func (UnimplementedStaticDataServer) CopyEntity(context.Context, *CopyEntityParams) (*Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CopyEntity not implemented")
}
func (UnimplementedStaticDataServer) CopyEntityWithRelations(context.Context, *CopyEntityParams) (*Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CopyEntityWithRelations not implemented")
}
func (UnimplementedStaticDataServer) CheckFreeSlugInEntities(context.Context, *CheckFreeSlugInEntitiesParams) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckFreeSlugInEntities not implemented")
}
func (UnimplementedStaticDataServer) GetFields(context.Context, *GetFieldsParams) (*GetFieldsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFields not implemented")
}
func (UnimplementedStaticDataServer) GetFieldsValuesByEntities(context.Context, *GetFieldsValuesByEntitiesParams) (*GetFieldsValuesByEntitiesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFieldsValuesByEntities not implemented")
}
func (UnimplementedStaticDataServer) CreateField(context.Context, *CreateFieldParams) (*Field, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateField not implemented")
}
func (UnimplementedStaticDataServer) UpsertEntityFieldValue(context.Context, *UpsertEntityFieldValueParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertEntityFieldValue not implemented")
}
func (UnimplementedStaticDataServer) RemoveEntityFieldValue(context.Context, *RemoveEntityFieldValueParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveEntityFieldValue not implemented")
}
func (UnimplementedStaticDataServer) UpsertEntityFieldImage(context.Context, *UpsertEntityFieldImageResponse) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertEntityFieldImage not implemented")
}
func (UnimplementedStaticDataServer) RemoveEntityFieldImage(context.Context, *RemoveEntityFieldValueParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveEntityFieldImage not implemented")
}
func (UnimplementedStaticDataServer) UpdateFields(context.Context, *UpdateFieldsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFields not implemented")
}
func (UnimplementedStaticDataServer) UpdateFieldsL10Ns(context.Context, *UpdateFieldsL10NsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFieldsL10Ns not implemented")
}
func (UnimplementedStaticDataServer) RemoveFieldsL10Ns(context.Context, *RemoveFieldsL10NsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFieldsL10Ns not implemented")
}
func (UnimplementedStaticDataServer) RemoveFields(context.Context, *RemoveFieldsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFields not implemented")
}
func (UnimplementedStaticDataServer) SortFields(context.Context, *SortFieldsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SortFields not implemented")
}
func (UnimplementedStaticDataServer) UpsertFieldImage(context.Context, *UpdateOptionsFieldsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpsertFieldImage not implemented")
}
func (UnimplementedStaticDataServer) UpdateOptionsFields(context.Context, *UpdateOptionsFieldsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOptionsFields not implemented")
}
func (UnimplementedStaticDataServer) AttachFieldToListParams(context.Context, *ToggleAttachFieldToListsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachFieldToListParams not implemented")
}
func (UnimplementedStaticDataServer) DetachFieldFromListParams(context.Context, *ToggleAttachFieldToListsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetachFieldFromListParams not implemented")
}
func (UnimplementedStaticDataServer) AttachFieldsToGroupKeys(context.Context, *ToggleAttachFieldToKeyGroupsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachFieldsToGroupKeys not implemented")
}
func (UnimplementedStaticDataServer) DetachFieldsToGroupKeys(context.Context, *ToggleAttachFieldToKeyGroupsParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetachFieldsToGroupKeys not implemented")
}
func (UnimplementedStaticDataServer) CheckAttachedFieldsInList(context.Context, *CheckAttachedFieldsInListParams) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckAttachedFieldsInList not implemented")
}
func (UnimplementedStaticDataServer) GetPages(context.Context, *GetPagesParams) (*GetPagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPages not implemented")
}
func (UnimplementedStaticDataServer) CreatePage(context.Context, *PageParams) (*Page, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePage not implemented")
}
func (UnimplementedStaticDataServer) UpdatePage(context.Context, *UpdatePageParams) (*Page, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePage not implemented")
}
func (UnimplementedStaticDataServer) RemovePage(context.Context, *RemovePagesParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePage not implemented")
}
func (UnimplementedStaticDataServer) AttachPageToParent(context.Context, *ToggleAttachPageToParentParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachPageToParent not implemented")
}
func (UnimplementedStaticDataServer) DetachPageFromParent(context.Context, *ToggleAttachPageToParentParams) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetachPageFromParent not implemented")
}
func (UnimplementedStaticDataServer) mustEmbedUnimplementedStaticDataServer() {}
func (UnimplementedStaticDataServer) testEmbeddedByValue()                    {}

// UnsafeStaticDataServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StaticDataServer will
// result in compilation errors.
type UnsafeStaticDataServer interface {
	mustEmbedUnimplementedStaticDataServer()
}

func RegisterStaticDataServer(s grpc.ServiceRegistrar, srv StaticDataServer) {
	// If the following call pancis, it indicates UnimplementedStaticDataServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&StaticData_ServiceDesc, srv)
}

func _StaticData_GetGroupKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGroupKeysParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).GetGroupKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_GetGroupKeys_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).GetGroupKeys(ctx, req.(*GetGroupKeysParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_CreateGroupKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGroupKeysParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).CreateGroupKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_CreateGroupKeys_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).CreateGroupKeys(ctx, req.(*CreateGroupKeysParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_RemoveGroupKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveGroupKeysParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).RemoveGroupKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_RemoveGroupKeys_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).RemoveGroupKeys(ctx, req.(*RemoveGroupKeysParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_GetLists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).GetLists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_GetLists_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).GetLists(ctx, req.(*GetListsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_CreateList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateListParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).CreateList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_CreateList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).CreateList(ctx, req.(*CreateListParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpdateListSlug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateListSlugParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpdateListSlug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpdateListSlug_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpdateListSlug(ctx, req.(*UpdateListSlugParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpdateListMeta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateListMetaParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpdateListMeta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpdateListMeta_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpdateListMeta(ctx, req.(*UpdateListMetaParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpdateListImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateListImageParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpdateListImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpdateListImage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpdateListImage(ctx, req.(*UpdateListImageParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_RemoveListImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveListImageParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).RemoveListImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_RemoveListImage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).RemoveListImage(ctx, req.(*RemoveListImageParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpdateListL10Ns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateListL10NsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpdateListL10Ns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpdateListL10Ns_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpdateListL10Ns(ctx, req.(*UpdateListL10NsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_ShowLists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleManipulationListsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).ShowLists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_ShowLists_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).ShowLists(ctx, req.(*SingleManipulationListsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_HideLists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleManipulationListsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).HideLists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_HideLists_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).HideLists(ctx, req.(*SingleManipulationListsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_RemoveLists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleManipulationListsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).RemoveLists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_RemoveLists_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).RemoveLists(ctx, req.(*SingleManipulationListsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_SortLists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SortListParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).SortLists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_SortLists_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).SortLists(ctx, req.(*SortListParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_AttachListsToLists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachListsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).AttachListsToLists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_AttachListsToLists_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).AttachListsToLists(ctx, req.(*AttachListsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_DetachListsToLists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachListsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).DetachListsToLists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_DetachListsToLists_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).DetachListsToLists(ctx, req.(*AttachListsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_CopyList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyListParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).CopyList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_CopyList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).CopyList(ctx, req.(*CopyListParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_CopyListWithRelations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyListParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).CopyListWithRelations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_CopyListWithRelations_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).CopyListWithRelations(ctx, req.(*CopyListParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_CheckFreeSlugInList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckFreeSlugInListParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).CheckFreeSlugInList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_CheckFreeSlugInList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).CheckFreeSlugInList(ctx, req.(*CheckFreeSlugInListParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_GetEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEntitiesParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).GetEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_GetEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).GetEntities(ctx, req.(*GetEntitiesParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_CreateEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEntityParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).CreateEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_CreateEntity_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).CreateEntity(ctx, req.(*CreateEntityParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpdateEntitiesRating_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEntitiesRaringParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpdateEntitiesRating(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpdateEntitiesRating_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpdateEntitiesRating(ctx, req.(*UpdateEntitiesRaringParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpdateEntitySlug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEntitySlugParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpdateEntitySlug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpdateEntitySlug_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpdateEntitySlug(ctx, req.(*UpdateEntitySlugParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpdateEntityImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEntityImageParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpdateEntityImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpdateEntityImage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpdateEntityImage(ctx, req.(*UpdateEntityImageParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_RemoveEntityImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveEntityImageParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).RemoveEntityImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_RemoveEntityImage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).RemoveEntityImage(ctx, req.(*RemoveEntityImageParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpdateEntityL10Ns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEntityL10NsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpdateEntityL10Ns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpdateEntityL10Ns_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpdateEntityL10Ns(ctx, req.(*UpdateEntityL10NsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_ShowEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleManipulationEntitiesParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).ShowEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_ShowEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).ShowEntities(ctx, req.(*SingleManipulationEntitiesParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_HideEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleManipulationEntitiesParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).HideEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_HideEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).HideEntities(ctx, req.(*SingleManipulationEntitiesParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_RemoveEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleManipulationEntitiesParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).RemoveEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_RemoveEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).RemoveEntities(ctx, req.(*SingleManipulationEntitiesParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_SortEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SortEntitiesParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).SortEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_SortEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).SortEntities(ctx, req.(*SortEntitiesParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_AttachEntitiesToList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachEntitiesToListsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).AttachEntitiesToList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_AttachEntitiesToList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).AttachEntitiesToList(ctx, req.(*AttachEntitiesToListsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_DetachEntitiesFromList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttachEntitiesToListsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).DetachEntitiesFromList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_DetachEntitiesFromList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).DetachEntitiesFromList(ctx, req.(*AttachEntitiesToListsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_CopyEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyEntityParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).CopyEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_CopyEntity_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).CopyEntity(ctx, req.(*CopyEntityParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_CopyEntityWithRelations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyEntityParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).CopyEntityWithRelations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_CopyEntityWithRelations_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).CopyEntityWithRelations(ctx, req.(*CopyEntityParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_CheckFreeSlugInEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckFreeSlugInEntitiesParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).CheckFreeSlugInEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_CheckFreeSlugInEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).CheckFreeSlugInEntities(ctx, req.(*CheckFreeSlugInEntitiesParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_GetFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFieldsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).GetFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_GetFields_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).GetFields(ctx, req.(*GetFieldsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_GetFieldsValuesByEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFieldsValuesByEntitiesParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).GetFieldsValuesByEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_GetFieldsValuesByEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).GetFieldsValuesByEntities(ctx, req.(*GetFieldsValuesByEntitiesParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_CreateField_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFieldParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).CreateField(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_CreateField_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).CreateField(ctx, req.(*CreateFieldParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpsertEntityFieldValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertEntityFieldValueParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpsertEntityFieldValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpsertEntityFieldValue_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpsertEntityFieldValue(ctx, req.(*UpsertEntityFieldValueParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_RemoveEntityFieldValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveEntityFieldValueParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).RemoveEntityFieldValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_RemoveEntityFieldValue_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).RemoveEntityFieldValue(ctx, req.(*RemoveEntityFieldValueParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpsertEntityFieldImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpsertEntityFieldImageResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpsertEntityFieldImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpsertEntityFieldImage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpsertEntityFieldImage(ctx, req.(*UpsertEntityFieldImageResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_RemoveEntityFieldImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveEntityFieldValueParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).RemoveEntityFieldImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_RemoveEntityFieldImage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).RemoveEntityFieldImage(ctx, req.(*RemoveEntityFieldValueParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpdateFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFieldsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpdateFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpdateFields_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpdateFields(ctx, req.(*UpdateFieldsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpdateFieldsL10Ns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFieldsL10NsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpdateFieldsL10Ns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpdateFieldsL10Ns_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpdateFieldsL10Ns(ctx, req.(*UpdateFieldsL10NsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_RemoveFieldsL10Ns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveFieldsL10NsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).RemoveFieldsL10Ns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_RemoveFieldsL10Ns_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).RemoveFieldsL10Ns(ctx, req.(*RemoveFieldsL10NsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_RemoveFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveFieldsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).RemoveFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_RemoveFields_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).RemoveFields(ctx, req.(*RemoveFieldsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_SortFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SortFieldsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).SortFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_SortFields_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).SortFields(ctx, req.(*SortFieldsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpsertFieldImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOptionsFieldsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpsertFieldImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpsertFieldImage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpsertFieldImage(ctx, req.(*UpdateOptionsFieldsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpdateOptionsFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOptionsFieldsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpdateOptionsFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpdateOptionsFields_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpdateOptionsFields(ctx, req.(*UpdateOptionsFieldsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_AttachFieldToListParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleAttachFieldToListsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).AttachFieldToListParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_AttachFieldToListParams_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).AttachFieldToListParams(ctx, req.(*ToggleAttachFieldToListsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_DetachFieldFromListParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleAttachFieldToListsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).DetachFieldFromListParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_DetachFieldFromListParams_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).DetachFieldFromListParams(ctx, req.(*ToggleAttachFieldToListsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_AttachFieldsToGroupKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleAttachFieldToKeyGroupsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).AttachFieldsToGroupKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_AttachFieldsToGroupKeys_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).AttachFieldsToGroupKeys(ctx, req.(*ToggleAttachFieldToKeyGroupsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_DetachFieldsToGroupKeys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleAttachFieldToKeyGroupsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).DetachFieldsToGroupKeys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_DetachFieldsToGroupKeys_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).DetachFieldsToGroupKeys(ctx, req.(*ToggleAttachFieldToKeyGroupsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_CheckAttachedFieldsInList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckAttachedFieldsInListParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).CheckAttachedFieldsInList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_CheckAttachedFieldsInList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).CheckAttachedFieldsInList(ctx, req.(*CheckAttachedFieldsInListParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_GetPages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPagesParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).GetPages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_GetPages_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).GetPages(ctx, req.(*GetPagesParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_CreatePage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PageParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).CreatePage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_CreatePage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).CreatePage(ctx, req.(*PageParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpdatePage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePageParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpdatePage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpdatePage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpdatePage(ctx, req.(*UpdatePageParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_RemovePage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePagesParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).RemovePage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_RemovePage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).RemovePage(ctx, req.(*RemovePagesParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_AttachPageToParent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleAttachPageToParentParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).AttachPageToParent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_AttachPageToParent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).AttachPageToParent(ctx, req.(*ToggleAttachPageToParentParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_DetachPageFromParent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleAttachPageToParentParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).DetachPageFromParent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_DetachPageFromParent_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).DetachPageFromParent(ctx, req.(*ToggleAttachPageToParentParams))
	}
	return interceptor(ctx, in, info, handler)
}

// StaticData_ServiceDesc is the grpc.ServiceDesc for StaticData service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StaticData_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "sd.StaticData",
	HandlerType: (*StaticDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGroupKeys",
			Handler:    _StaticData_GetGroupKeys_Handler,
		},
		{
			MethodName: "CreateGroupKeys",
			Handler:    _StaticData_CreateGroupKeys_Handler,
		},
		{
			MethodName: "RemoveGroupKeys",
			Handler:    _StaticData_RemoveGroupKeys_Handler,
		},
		{
			MethodName: "GetLists",
			Handler:    _StaticData_GetLists_Handler,
		},
		{
			MethodName: "CreateList",
			Handler:    _StaticData_CreateList_Handler,
		},
		{
			MethodName: "UpdateListSlug",
			Handler:    _StaticData_UpdateListSlug_Handler,
		},
		{
			MethodName: "UpdateListMeta",
			Handler:    _StaticData_UpdateListMeta_Handler,
		},
		{
			MethodName: "UpdateListImage",
			Handler:    _StaticData_UpdateListImage_Handler,
		},
		{
			MethodName: "RemoveListImage",
			Handler:    _StaticData_RemoveListImage_Handler,
		},
		{
			MethodName: "UpdateListL10ns",
			Handler:    _StaticData_UpdateListL10Ns_Handler,
		},
		{
			MethodName: "ShowLists",
			Handler:    _StaticData_ShowLists_Handler,
		},
		{
			MethodName: "HideLists",
			Handler:    _StaticData_HideLists_Handler,
		},
		{
			MethodName: "RemoveLists",
			Handler:    _StaticData_RemoveLists_Handler,
		},
		{
			MethodName: "SortLists",
			Handler:    _StaticData_SortLists_Handler,
		},
		{
			MethodName: "AttachListsToLists",
			Handler:    _StaticData_AttachListsToLists_Handler,
		},
		{
			MethodName: "DetachListsToLists",
			Handler:    _StaticData_DetachListsToLists_Handler,
		},
		{
			MethodName: "CopyList",
			Handler:    _StaticData_CopyList_Handler,
		},
		{
			MethodName: "CopyListWithRelations",
			Handler:    _StaticData_CopyListWithRelations_Handler,
		},
		{
			MethodName: "CheckFreeSlugInList",
			Handler:    _StaticData_CheckFreeSlugInList_Handler,
		},
		{
			MethodName: "GetEntities",
			Handler:    _StaticData_GetEntities_Handler,
		},
		{
			MethodName: "CreateEntity",
			Handler:    _StaticData_CreateEntity_Handler,
		},
		{
			MethodName: "UpdateEntitiesRating",
			Handler:    _StaticData_UpdateEntitiesRating_Handler,
		},
		{
			MethodName: "UpdateEntitySlug",
			Handler:    _StaticData_UpdateEntitySlug_Handler,
		},
		{
			MethodName: "UpdateEntityImage",
			Handler:    _StaticData_UpdateEntityImage_Handler,
		},
		{
			MethodName: "RemoveEntityImage",
			Handler:    _StaticData_RemoveEntityImage_Handler,
		},
		{
			MethodName: "UpdateEntityL10ns",
			Handler:    _StaticData_UpdateEntityL10Ns_Handler,
		},
		{
			MethodName: "ShowEntities",
			Handler:    _StaticData_ShowEntities_Handler,
		},
		{
			MethodName: "HideEntities",
			Handler:    _StaticData_HideEntities_Handler,
		},
		{
			MethodName: "RemoveEntities",
			Handler:    _StaticData_RemoveEntities_Handler,
		},
		{
			MethodName: "SortEntities",
			Handler:    _StaticData_SortEntities_Handler,
		},
		{
			MethodName: "AttachEntitiesToList",
			Handler:    _StaticData_AttachEntitiesToList_Handler,
		},
		{
			MethodName: "DetachEntitiesFromList",
			Handler:    _StaticData_DetachEntitiesFromList_Handler,
		},
		{
			MethodName: "CopyEntity",
			Handler:    _StaticData_CopyEntity_Handler,
		},
		{
			MethodName: "CopyEntityWithRelations",
			Handler:    _StaticData_CopyEntityWithRelations_Handler,
		},
		{
			MethodName: "CheckFreeSlugInEntities",
			Handler:    _StaticData_CheckFreeSlugInEntities_Handler,
		},
		{
			MethodName: "GetFields",
			Handler:    _StaticData_GetFields_Handler,
		},
		{
			MethodName: "GetFieldsValuesByEntities",
			Handler:    _StaticData_GetFieldsValuesByEntities_Handler,
		},
		{
			MethodName: "CreateField",
			Handler:    _StaticData_CreateField_Handler,
		},
		{
			MethodName: "UpsertEntityFieldValue",
			Handler:    _StaticData_UpsertEntityFieldValue_Handler,
		},
		{
			MethodName: "RemoveEntityFieldValue",
			Handler:    _StaticData_RemoveEntityFieldValue_Handler,
		},
		{
			MethodName: "UpsertEntityFieldImage",
			Handler:    _StaticData_UpsertEntityFieldImage_Handler,
		},
		{
			MethodName: "RemoveEntityFieldImage",
			Handler:    _StaticData_RemoveEntityFieldImage_Handler,
		},
		{
			MethodName: "UpdateFields",
			Handler:    _StaticData_UpdateFields_Handler,
		},
		{
			MethodName: "UpdateFieldsL10ns",
			Handler:    _StaticData_UpdateFieldsL10Ns_Handler,
		},
		{
			MethodName: "RemoveFieldsL10ns",
			Handler:    _StaticData_RemoveFieldsL10Ns_Handler,
		},
		{
			MethodName: "RemoveFields",
			Handler:    _StaticData_RemoveFields_Handler,
		},
		{
			MethodName: "SortFields",
			Handler:    _StaticData_SortFields_Handler,
		},
		{
			MethodName: "UpsertFieldImage",
			Handler:    _StaticData_UpsertFieldImage_Handler,
		},
		{
			MethodName: "UpdateOptionsFields",
			Handler:    _StaticData_UpdateOptionsFields_Handler,
		},
		{
			MethodName: "AttachFieldToListParams",
			Handler:    _StaticData_AttachFieldToListParams_Handler,
		},
		{
			MethodName: "DetachFieldFromListParams",
			Handler:    _StaticData_DetachFieldFromListParams_Handler,
		},
		{
			MethodName: "AttachFieldsToGroupKeys",
			Handler:    _StaticData_AttachFieldsToGroupKeys_Handler,
		},
		{
			MethodName: "DetachFieldsToGroupKeys",
			Handler:    _StaticData_DetachFieldsToGroupKeys_Handler,
		},
		{
			MethodName: "CheckAttachedFieldsInList",
			Handler:    _StaticData_CheckAttachedFieldsInList_Handler,
		},
		{
			MethodName: "GetPages",
			Handler:    _StaticData_GetPages_Handler,
		},
		{
			MethodName: "CreatePage",
			Handler:    _StaticData_CreatePage_Handler,
		},
		{
			MethodName: "UpdatePage",
			Handler:    _StaticData_UpdatePage_Handler,
		},
		{
			MethodName: "RemovePage",
			Handler:    _StaticData_RemovePage_Handler,
		},
		{
			MethodName: "AttachPageToParent",
			Handler:    _StaticData_AttachPageToParent_Handler,
		},
		{
			MethodName: "DetachPageFromParent",
			Handler:    _StaticData_DetachPageFromParent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sd/sd.proto",
}
