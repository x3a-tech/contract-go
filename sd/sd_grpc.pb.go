// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v4.24.4
// source: sd/sd.proto

package sdv1

import (
	context "context"
	common "github.com/x3a-tech/contract-go/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	StaticData_GetListBySlug_FullMethodName             = "/sd.StaticData/GetListBySlug"
	StaticData_GetListEntitiesBySlug_FullMethodName     = "/sd.StaticData/GetListEntitiesBySlug"
	StaticData_CreateList_FullMethodName                = "/sd.StaticData/CreateList"
	StaticData_UpdateList_FullMethodName                = "/sd.StaticData/UpdateList"
	StaticData_DeleteList_FullMethodName                = "/sd.StaticData/DeleteList"
	StaticData_SortLists_FullMethodName                 = "/sd.StaticData/SortLists"
	StaticData_ToggleVisibleLists_FullMethodName        = "/sd.StaticData/ToggleVisibleLists"
	StaticData_CreateEntity_FullMethodName              = "/sd.StaticData/CreateEntity"
	StaticData_GetEntityBySlug_FullMethodName           = "/sd.StaticData/GetEntityBySlug"
	StaticData_SortEntity_FullMethodName                = "/sd.StaticData/SortEntity"
	StaticData_ToggleVisibleEntities_FullMethodName     = "/sd.StaticData/ToggleVisibleEntities"
	StaticData_AttachEntitiesToList_FullMethodName      = "/sd.StaticData/AttachEntitiesToList"
	StaticData_DetachEntitiesFromList_FullMethodName    = "/sd.StaticData/DetachEntitiesFromList"
	StaticData_CreateField_FullMethodName               = "/sd.StaticData/CreateField"
	StaticData_UpdateField_FullMethodName               = "/sd.StaticData/UpdateField"
	StaticData_DeleteField_FullMethodName               = "/sd.StaticData/DeleteField"
	StaticData_AttachFieldToListParams_FullMethodName   = "/sd.StaticData/AttachFieldToListParams"
	StaticData_DetachFieldFromListParams_FullMethodName = "/sd.StaticData/DetachFieldFromListParams"
	StaticData_SetEntityFieldValue_FullMethodName       = "/sd.StaticData/SetEntityFieldValue"
	StaticData_RemoveEntityFieldValue_FullMethodName    = "/sd.StaticData/RemoveEntityFieldValue"
)

// StaticDataClient is the client API for StaticData service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StaticDataClient interface {
	GetListBySlug(ctx context.Context, in *GetListBySlugParams, opts ...grpc.CallOption) (*GetListBySlugResponse, error)
	GetListEntitiesBySlug(ctx context.Context, in *GetListBySlugParams, opts ...grpc.CallOption) (*GetListEntitiesBySlugResponse, error)
	CreateList(ctx context.Context, in *CreateListParams, opts ...grpc.CallOption) (*List, error)
	UpdateList(ctx context.Context, in *List, opts ...grpc.CallOption) (*List, error)
	DeleteList(ctx context.Context, in *SingleManipulationParams, opts ...grpc.CallOption) (*common.BoolStatus, error)
	SortLists(ctx context.Context, in *SortListParams, opts ...grpc.CallOption) (*common.BoolStatus, error)
	ToggleVisibleLists(ctx context.Context, in *ToggleVisibleListsParams, opts ...grpc.CallOption) (*common.BoolStatus, error)
	CreateEntity(ctx context.Context, in *CreateEntityParams, opts ...grpc.CallOption) (*Entity, error)
	GetEntityBySlug(ctx context.Context, in *GetEntityBySlugParams, opts ...grpc.CallOption) (*Entity, error)
	SortEntity(ctx context.Context, in *SortEntityParams, opts ...grpc.CallOption) (*common.BoolStatus, error)
	ToggleVisibleEntities(ctx context.Context, in *ToggleVisibleEntitiesParams, opts ...grpc.CallOption) (*common.BoolStatus, error)
	AttachEntitiesToList(ctx context.Context, in *ToggleAttachEntityToListParams, opts ...grpc.CallOption) (*common.BoolStatus, error)
	DetachEntitiesFromList(ctx context.Context, in *ToggleAttachEntityToListParams, opts ...grpc.CallOption) (*common.BoolStatus, error)
	CreateField(ctx context.Context, in *FieldMetaBase, opts ...grpc.CallOption) (*common.BoolStatus, error)
	UpdateField(ctx context.Context, in *FieldMetaBase, opts ...grpc.CallOption) (*common.BoolStatus, error)
	DeleteField(ctx context.Context, in *SingleManipulationParams, opts ...grpc.CallOption) (*common.BoolStatus, error)
	AttachFieldToListParams(ctx context.Context, in *ToggleAttachFieldToListParams, opts ...grpc.CallOption) (*common.BoolStatus, error)
	DetachFieldFromListParams(ctx context.Context, in *ToggleAttachFieldToListParams, opts ...grpc.CallOption) (*common.BoolStatus, error)
	SetEntityFieldValue(ctx context.Context, in *EntityFieldValue, opts ...grpc.CallOption) (*common.BoolStatus, error)
	RemoveEntityFieldValue(ctx context.Context, in *RemoveEntityFieldValueParams, opts ...grpc.CallOption) (*common.BoolStatus, error)
}

type staticDataClient struct {
	cc grpc.ClientConnInterface
}

func NewStaticDataClient(cc grpc.ClientConnInterface) StaticDataClient {
	return &staticDataClient{cc}
}

func (c *staticDataClient) GetListBySlug(ctx context.Context, in *GetListBySlugParams, opts ...grpc.CallOption) (*GetListBySlugResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetListBySlugResponse)
	err := c.cc.Invoke(ctx, StaticData_GetListBySlug_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) GetListEntitiesBySlug(ctx context.Context, in *GetListBySlugParams, opts ...grpc.CallOption) (*GetListEntitiesBySlugResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetListEntitiesBySlugResponse)
	err := c.cc.Invoke(ctx, StaticData_GetListEntitiesBySlug_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) CreateList(ctx context.Context, in *CreateListParams, opts ...grpc.CallOption) (*List, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(List)
	err := c.cc.Invoke(ctx, StaticData_CreateList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpdateList(ctx context.Context, in *List, opts ...grpc.CallOption) (*List, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(List)
	err := c.cc.Invoke(ctx, StaticData_UpdateList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) DeleteList(ctx context.Context, in *SingleManipulationParams, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_DeleteList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) SortLists(ctx context.Context, in *SortListParams, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_SortLists_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) ToggleVisibleLists(ctx context.Context, in *ToggleVisibleListsParams, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_ToggleVisibleLists_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) CreateEntity(ctx context.Context, in *CreateEntityParams, opts ...grpc.CallOption) (*Entity, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Entity)
	err := c.cc.Invoke(ctx, StaticData_CreateEntity_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) GetEntityBySlug(ctx context.Context, in *GetEntityBySlugParams, opts ...grpc.CallOption) (*Entity, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(Entity)
	err := c.cc.Invoke(ctx, StaticData_GetEntityBySlug_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) SortEntity(ctx context.Context, in *SortEntityParams, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_SortEntity_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) ToggleVisibleEntities(ctx context.Context, in *ToggleVisibleEntitiesParams, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_ToggleVisibleEntities_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) AttachEntitiesToList(ctx context.Context, in *ToggleAttachEntityToListParams, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_AttachEntitiesToList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) DetachEntitiesFromList(ctx context.Context, in *ToggleAttachEntityToListParams, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_DetachEntitiesFromList_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) CreateField(ctx context.Context, in *FieldMetaBase, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_CreateField_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) UpdateField(ctx context.Context, in *FieldMetaBase, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_UpdateField_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) DeleteField(ctx context.Context, in *SingleManipulationParams, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_DeleteField_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) AttachFieldToListParams(ctx context.Context, in *ToggleAttachFieldToListParams, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_AttachFieldToListParams_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) DetachFieldFromListParams(ctx context.Context, in *ToggleAttachFieldToListParams, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_DetachFieldFromListParams_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) SetEntityFieldValue(ctx context.Context, in *EntityFieldValue, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_SetEntityFieldValue_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staticDataClient) RemoveEntityFieldValue(ctx context.Context, in *RemoveEntityFieldValueParams, opts ...grpc.CallOption) (*common.BoolStatus, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(common.BoolStatus)
	err := c.cc.Invoke(ctx, StaticData_RemoveEntityFieldValue_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StaticDataServer is the server API for StaticData service.
// All implementations must embed UnimplementedStaticDataServer
// for forward compatibility.
type StaticDataServer interface {
	GetListBySlug(context.Context, *GetListBySlugParams) (*GetListBySlugResponse, error)
	GetListEntitiesBySlug(context.Context, *GetListBySlugParams) (*GetListEntitiesBySlugResponse, error)
	CreateList(context.Context, *CreateListParams) (*List, error)
	UpdateList(context.Context, *List) (*List, error)
	DeleteList(context.Context, *SingleManipulationParams) (*common.BoolStatus, error)
	SortLists(context.Context, *SortListParams) (*common.BoolStatus, error)
	ToggleVisibleLists(context.Context, *ToggleVisibleListsParams) (*common.BoolStatus, error)
	CreateEntity(context.Context, *CreateEntityParams) (*Entity, error)
	GetEntityBySlug(context.Context, *GetEntityBySlugParams) (*Entity, error)
	SortEntity(context.Context, *SortEntityParams) (*common.BoolStatus, error)
	ToggleVisibleEntities(context.Context, *ToggleVisibleEntitiesParams) (*common.BoolStatus, error)
	AttachEntitiesToList(context.Context, *ToggleAttachEntityToListParams) (*common.BoolStatus, error)
	DetachEntitiesFromList(context.Context, *ToggleAttachEntityToListParams) (*common.BoolStatus, error)
	CreateField(context.Context, *FieldMetaBase) (*common.BoolStatus, error)
	UpdateField(context.Context, *FieldMetaBase) (*common.BoolStatus, error)
	DeleteField(context.Context, *SingleManipulationParams) (*common.BoolStatus, error)
	AttachFieldToListParams(context.Context, *ToggleAttachFieldToListParams) (*common.BoolStatus, error)
	DetachFieldFromListParams(context.Context, *ToggleAttachFieldToListParams) (*common.BoolStatus, error)
	SetEntityFieldValue(context.Context, *EntityFieldValue) (*common.BoolStatus, error)
	RemoveEntityFieldValue(context.Context, *RemoveEntityFieldValueParams) (*common.BoolStatus, error)
	mustEmbedUnimplementedStaticDataServer()
}

// UnimplementedStaticDataServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedStaticDataServer struct{}

func (UnimplementedStaticDataServer) GetListBySlug(context.Context, *GetListBySlugParams) (*GetListBySlugResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListBySlug not implemented")
}
func (UnimplementedStaticDataServer) GetListEntitiesBySlug(context.Context, *GetListBySlugParams) (*GetListEntitiesBySlugResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListEntitiesBySlug not implemented")
}
func (UnimplementedStaticDataServer) CreateList(context.Context, *CreateListParams) (*List, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateList not implemented")
}
func (UnimplementedStaticDataServer) UpdateList(context.Context, *List) (*List, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateList not implemented")
}
func (UnimplementedStaticDataServer) DeleteList(context.Context, *SingleManipulationParams) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteList not implemented")
}
func (UnimplementedStaticDataServer) SortLists(context.Context, *SortListParams) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SortLists not implemented")
}
func (UnimplementedStaticDataServer) ToggleVisibleLists(context.Context, *ToggleVisibleListsParams) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleVisibleLists not implemented")
}
func (UnimplementedStaticDataServer) CreateEntity(context.Context, *CreateEntityParams) (*Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEntity not implemented")
}
func (UnimplementedStaticDataServer) GetEntityBySlug(context.Context, *GetEntityBySlugParams) (*Entity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEntityBySlug not implemented")
}
func (UnimplementedStaticDataServer) SortEntity(context.Context, *SortEntityParams) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SortEntity not implemented")
}
func (UnimplementedStaticDataServer) ToggleVisibleEntities(context.Context, *ToggleVisibleEntitiesParams) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleVisibleEntities not implemented")
}
func (UnimplementedStaticDataServer) AttachEntitiesToList(context.Context, *ToggleAttachEntityToListParams) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachEntitiesToList not implemented")
}
func (UnimplementedStaticDataServer) DetachEntitiesFromList(context.Context, *ToggleAttachEntityToListParams) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetachEntitiesFromList not implemented")
}
func (UnimplementedStaticDataServer) CreateField(context.Context, *FieldMetaBase) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateField not implemented")
}
func (UnimplementedStaticDataServer) UpdateField(context.Context, *FieldMetaBase) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateField not implemented")
}
func (UnimplementedStaticDataServer) DeleteField(context.Context, *SingleManipulationParams) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteField not implemented")
}
func (UnimplementedStaticDataServer) AttachFieldToListParams(context.Context, *ToggleAttachFieldToListParams) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AttachFieldToListParams not implemented")
}
func (UnimplementedStaticDataServer) DetachFieldFromListParams(context.Context, *ToggleAttachFieldToListParams) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DetachFieldFromListParams not implemented")
}
func (UnimplementedStaticDataServer) SetEntityFieldValue(context.Context, *EntityFieldValue) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetEntityFieldValue not implemented")
}
func (UnimplementedStaticDataServer) RemoveEntityFieldValue(context.Context, *RemoveEntityFieldValueParams) (*common.BoolStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveEntityFieldValue not implemented")
}
func (UnimplementedStaticDataServer) mustEmbedUnimplementedStaticDataServer() {}
func (UnimplementedStaticDataServer) testEmbeddedByValue()                    {}

// UnsafeStaticDataServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StaticDataServer will
// result in compilation errors.
type UnsafeStaticDataServer interface {
	mustEmbedUnimplementedStaticDataServer()
}

func RegisterStaticDataServer(s grpc.ServiceRegistrar, srv StaticDataServer) {
	// If the following call pancis, it indicates UnimplementedStaticDataServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&StaticData_ServiceDesc, srv)
}

func _StaticData_GetListBySlug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListBySlugParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).GetListBySlug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_GetListBySlug_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).GetListBySlug(ctx, req.(*GetListBySlugParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_GetListEntitiesBySlug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListBySlugParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).GetListEntitiesBySlug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_GetListEntitiesBySlug_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).GetListEntitiesBySlug(ctx, req.(*GetListBySlugParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_CreateList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateListParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).CreateList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_CreateList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).CreateList(ctx, req.(*CreateListParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpdateList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(List)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpdateList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpdateList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpdateList(ctx, req.(*List))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_DeleteList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleManipulationParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).DeleteList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_DeleteList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).DeleteList(ctx, req.(*SingleManipulationParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_SortLists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SortListParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).SortLists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_SortLists_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).SortLists(ctx, req.(*SortListParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_ToggleVisibleLists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleVisibleListsParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).ToggleVisibleLists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_ToggleVisibleLists_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).ToggleVisibleLists(ctx, req.(*ToggleVisibleListsParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_CreateEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEntityParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).CreateEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_CreateEntity_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).CreateEntity(ctx, req.(*CreateEntityParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_GetEntityBySlug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEntityBySlugParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).GetEntityBySlug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_GetEntityBySlug_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).GetEntityBySlug(ctx, req.(*GetEntityBySlugParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_SortEntity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SortEntityParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).SortEntity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_SortEntity_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).SortEntity(ctx, req.(*SortEntityParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_ToggleVisibleEntities_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleVisibleEntitiesParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).ToggleVisibleEntities(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_ToggleVisibleEntities_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).ToggleVisibleEntities(ctx, req.(*ToggleVisibleEntitiesParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_AttachEntitiesToList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleAttachEntityToListParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).AttachEntitiesToList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_AttachEntitiesToList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).AttachEntitiesToList(ctx, req.(*ToggleAttachEntityToListParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_DetachEntitiesFromList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleAttachEntityToListParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).DetachEntitiesFromList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_DetachEntitiesFromList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).DetachEntitiesFromList(ctx, req.(*ToggleAttachEntityToListParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_CreateField_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FieldMetaBase)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).CreateField(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_CreateField_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).CreateField(ctx, req.(*FieldMetaBase))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_UpdateField_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FieldMetaBase)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).UpdateField(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_UpdateField_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).UpdateField(ctx, req.(*FieldMetaBase))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_DeleteField_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleManipulationParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).DeleteField(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_DeleteField_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).DeleteField(ctx, req.(*SingleManipulationParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_AttachFieldToListParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleAttachFieldToListParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).AttachFieldToListParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_AttachFieldToListParams_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).AttachFieldToListParams(ctx, req.(*ToggleAttachFieldToListParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_DetachFieldFromListParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleAttachFieldToListParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).DetachFieldFromListParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_DetachFieldFromListParams_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).DetachFieldFromListParams(ctx, req.(*ToggleAttachFieldToListParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_SetEntityFieldValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EntityFieldValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).SetEntityFieldValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_SetEntityFieldValue_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).SetEntityFieldValue(ctx, req.(*EntityFieldValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaticData_RemoveEntityFieldValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveEntityFieldValueParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaticDataServer).RemoveEntityFieldValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: StaticData_RemoveEntityFieldValue_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaticDataServer).RemoveEntityFieldValue(ctx, req.(*RemoveEntityFieldValueParams))
	}
	return interceptor(ctx, in, info, handler)
}

// StaticData_ServiceDesc is the grpc.ServiceDesc for StaticData service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StaticData_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "sd.StaticData",
	HandlerType: (*StaticDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetListBySlug",
			Handler:    _StaticData_GetListBySlug_Handler,
		},
		{
			MethodName: "GetListEntitiesBySlug",
			Handler:    _StaticData_GetListEntitiesBySlug_Handler,
		},
		{
			MethodName: "CreateList",
			Handler:    _StaticData_CreateList_Handler,
		},
		{
			MethodName: "UpdateList",
			Handler:    _StaticData_UpdateList_Handler,
		},
		{
			MethodName: "DeleteList",
			Handler:    _StaticData_DeleteList_Handler,
		},
		{
			MethodName: "SortLists",
			Handler:    _StaticData_SortLists_Handler,
		},
		{
			MethodName: "ToggleVisibleLists",
			Handler:    _StaticData_ToggleVisibleLists_Handler,
		},
		{
			MethodName: "CreateEntity",
			Handler:    _StaticData_CreateEntity_Handler,
		},
		{
			MethodName: "GetEntityBySlug",
			Handler:    _StaticData_GetEntityBySlug_Handler,
		},
		{
			MethodName: "SortEntity",
			Handler:    _StaticData_SortEntity_Handler,
		},
		{
			MethodName: "ToggleVisibleEntities",
			Handler:    _StaticData_ToggleVisibleEntities_Handler,
		},
		{
			MethodName: "AttachEntitiesToList",
			Handler:    _StaticData_AttachEntitiesToList_Handler,
		},
		{
			MethodName: "DetachEntitiesFromList",
			Handler:    _StaticData_DetachEntitiesFromList_Handler,
		},
		{
			MethodName: "CreateField",
			Handler:    _StaticData_CreateField_Handler,
		},
		{
			MethodName: "UpdateField",
			Handler:    _StaticData_UpdateField_Handler,
		},
		{
			MethodName: "DeleteField",
			Handler:    _StaticData_DeleteField_Handler,
		},
		{
			MethodName: "AttachFieldToListParams",
			Handler:    _StaticData_AttachFieldToListParams_Handler,
		},
		{
			MethodName: "DetachFieldFromListParams",
			Handler:    _StaticData_DetachFieldFromListParams_Handler,
		},
		{
			MethodName: "SetEntityFieldValue",
			Handler:    _StaticData_SetEntityFieldValue_Handler,
		},
		{
			MethodName: "RemoveEntityFieldValue",
			Handler:    _StaticData_RemoveEntityFieldValue_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sd/sd.proto",
}
