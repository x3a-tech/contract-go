// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v4.24.4
// source: sd/sd.proto

package sdv1

import (
	common "github.com/x3a-tech/contract-go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FieldType int32

const (
	FieldType_FIELD_TYPE_UNSPECIFIED FieldType = 0
	FieldType_RATING                 FieldType = 1
	FieldType_STRING                 FieldType = 2
	FieldType_NUMBER                 FieldType = 3
	FieldType_BOOL                   FieldType = 4
	FieldType_TIMESTAMP              FieldType = 5
	FieldType_LINK                   FieldType = 6
	FieldType_IMAGE                  FieldType = 7
	FieldType_ENUM                   FieldType = 8
)

// Enum value maps for FieldType.
var (
	FieldType_name = map[int32]string{
		0: "FIELD_TYPE_UNSPECIFIED",
		1: "RATING",
		2: "STRING",
		3: "NUMBER",
		4: "BOOL",
		5: "TIMESTAMP",
		6: "LINK",
		7: "IMAGE",
		8: "ENUM",
	}
	FieldType_value = map[string]int32{
		"FIELD_TYPE_UNSPECIFIED": 0,
		"RATING":                 1,
		"STRING":                 2,
		"NUMBER":                 3,
		"BOOL":                   4,
		"TIMESTAMP":              5,
		"LINK":                   6,
		"IMAGE":                  7,
		"ENUM":                   8,
	}
)

func (x FieldType) Enum() *FieldType {
	p := new(FieldType)
	*p = x
	return p
}

func (x FieldType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldType) Descriptor() protoreflect.EnumDescriptor {
	return file_sd_sd_proto_enumTypes[0].Descriptor()
}

func (FieldType) Type() protoreflect.EnumType {
	return &file_sd_sd_proto_enumTypes[0]
}

func (x FieldType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldType.Descriptor instead.
func (FieldType) EnumDescriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{0}
}

type FieldNumberView int32

const (
	FieldNumberView_FIELD_NUMBER_VIEW_UNSPECIFIED FieldNumberView = 0
	FieldNumberView_INPUT                         FieldNumberView = 1
	FieldNumberView_RANGE                         FieldNumberView = 2
	FieldNumberView_INCREMENT                     FieldNumberView = 3
)

// Enum value maps for FieldNumberView.
var (
	FieldNumberView_name = map[int32]string{
		0: "FIELD_NUMBER_VIEW_UNSPECIFIED",
		1: "INPUT",
		2: "RANGE",
		3: "INCREMENT",
	}
	FieldNumberView_value = map[string]int32{
		"FIELD_NUMBER_VIEW_UNSPECIFIED": 0,
		"INPUT":                         1,
		"RANGE":                         2,
		"INCREMENT":                     3,
	}
)

func (x FieldNumberView) Enum() *FieldNumberView {
	p := new(FieldNumberView)
	*p = x
	return p
}

func (x FieldNumberView) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldNumberView) Descriptor() protoreflect.EnumDescriptor {
	return file_sd_sd_proto_enumTypes[1].Descriptor()
}

func (FieldNumberView) Type() protoreflect.EnumType {
	return &file_sd_sd_proto_enumTypes[1]
}

func (x FieldNumberView) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldNumberView.Descriptor instead.
func (FieldNumberView) EnumDescriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{1}
}

type FieldLinkTarget int32

const (
	FieldLinkTarget_FIELD_LINK_TARGET_UNSPECIFIED FieldLinkTarget = 0
	FieldLinkTarget_INNER                         FieldLinkTarget = 1
	FieldLinkTarget_WEB                           FieldLinkTarget = 2
	FieldLinkTarget_TWITTER                       FieldLinkTarget = 3
	FieldLinkTarget_XCOM                          FieldLinkTarget = 4
	FieldLinkTarget_FACEBOOK                      FieldLinkTarget = 5
	FieldLinkTarget_INSTAGRAM                     FieldLinkTarget = 6
	FieldLinkTarget_LINKEDIN                      FieldLinkTarget = 7
)

// Enum value maps for FieldLinkTarget.
var (
	FieldLinkTarget_name = map[int32]string{
		0: "FIELD_LINK_TARGET_UNSPECIFIED",
		1: "INNER",
		2: "WEB",
		3: "TWITTER",
		4: "XCOM",
		5: "FACEBOOK",
		6: "INSTAGRAM",
		7: "LINKEDIN",
	}
	FieldLinkTarget_value = map[string]int32{
		"FIELD_LINK_TARGET_UNSPECIFIED": 0,
		"INNER":                         1,
		"WEB":                           2,
		"TWITTER":                       3,
		"XCOM":                          4,
		"FACEBOOK":                      5,
		"INSTAGRAM":                     6,
		"LINKEDIN":                      7,
	}
)

func (x FieldLinkTarget) Enum() *FieldLinkTarget {
	p := new(FieldLinkTarget)
	*p = x
	return p
}

func (x FieldLinkTarget) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldLinkTarget) Descriptor() protoreflect.EnumDescriptor {
	return file_sd_sd_proto_enumTypes[2].Descriptor()
}

func (FieldLinkTarget) Type() protoreflect.EnumType {
	return &file_sd_sd_proto_enumTypes[2]
}

func (x FieldLinkTarget) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldLinkTarget.Descriptor instead.
func (FieldLinkTarget) EnumDescriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{2}
}

type SingleManipulationParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SingleManipulationParams) Reset() {
	*x = SingleManipulationParams{}
	mi := &file_sd_sd_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SingleManipulationParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleManipulationParams) ProtoMessage() {}

func (x *SingleManipulationParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleManipulationParams.ProtoReflect.Descriptor instead.
func (*SingleManipulationParams) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{0}
}

func (x *SingleManipulationParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetListBySlugParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lang          common.Lang            `protobuf:"varint,1,opt,name=lang,proto3,enum=common.Lang" json:"lang,omitempty"`
	Slug          string                 `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	ListParams    *common.ListParams     `protobuf:"bytes,3,opt,name=list_params,json=listParams,proto3" json:"list_params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListBySlugParams) Reset() {
	*x = GetListBySlugParams{}
	mi := &file_sd_sd_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListBySlugParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListBySlugParams) ProtoMessage() {}

func (x *GetListBySlugParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListBySlugParams.ProtoReflect.Descriptor instead.
func (*GetListBySlugParams) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{1}
}

func (x *GetListBySlugParams) GetLang() common.Lang {
	if x != nil {
		return x.Lang
	}
	return common.Lang(0)
}

func (x *GetListBySlugParams) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *GetListBySlugParams) GetListParams() *common.ListParams {
	if x != nil {
		return x.ListParams
	}
	return nil
}

type GetListBySlugResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          *List                  `protobuf:"bytes,1,opt,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListBySlugResponse) Reset() {
	*x = GetListBySlugResponse{}
	mi := &file_sd_sd_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListBySlugResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListBySlugResponse) ProtoMessage() {}

func (x *GetListBySlugResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListBySlugResponse.ProtoReflect.Descriptor instead.
func (*GetListBySlugResponse) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{2}
}

func (x *GetListBySlugResponse) GetList() *List {
	if x != nil {
		return x.List
	}
	return nil
}

type GetListEntitiesBySlugResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entities      []*Entity              `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetListEntitiesBySlugResponse) Reset() {
	*x = GetListEntitiesBySlugResponse{}
	mi := &file_sd_sd_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetListEntitiesBySlugResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListEntitiesBySlugResponse) ProtoMessage() {}

func (x *GetListEntitiesBySlugResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListEntitiesBySlugResponse.ProtoReflect.Descriptor instead.
func (*GetListEntitiesBySlugResponse) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{3}
}

func (x *GetListEntitiesBySlugResponse) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

type CreateListParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Order         int32                  `protobuf:"varint,1,opt,name=order,proto3" json:"order,omitempty"`
	Slug          string                 `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Name          []*common.I10N         `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty"`
	Description   []*common.I10N         `protobuf:"bytes,4,rep,name=description,proto3" json:"description,omitempty"`
	CustomKey     string                 `protobuf:"bytes,5,opt,name=custom_key,json=customKey,proto3" json:"custom_key,omitempty"`
	ParentId      int32                  `protobuf:"varint,6,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateListParams) Reset() {
	*x = CreateListParams{}
	mi := &file_sd_sd_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateListParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateListParams) ProtoMessage() {}

func (x *CreateListParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateListParams.ProtoReflect.Descriptor instead.
func (*CreateListParams) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{4}
}

func (x *CreateListParams) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *CreateListParams) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *CreateListParams) GetName() []*common.I10N {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *CreateListParams) GetDescription() []*common.I10N {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *CreateListParams) GetCustomKey() string {
	if x != nil {
		return x.CustomKey
	}
	return ""
}

func (x *CreateListParams) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

type SortList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Order         int32                  `protobuf:"varint,1,opt,name=order,proto3" json:"order,omitempty"`
	ListId        int32                  `protobuf:"varint,2,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortList) Reset() {
	*x = SortList{}
	mi := &file_sd_sd_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortList) ProtoMessage() {}

func (x *SortList) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortList.ProtoReflect.Descriptor instead.
func (*SortList) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{5}
}

func (x *SortList) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *SortList) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

type SortListParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sorts         []*SortList            `protobuf:"bytes,1,rep,name=sorts,proto3" json:"sorts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortListParams) Reset() {
	*x = SortListParams{}
	mi := &file_sd_sd_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortListParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortListParams) ProtoMessage() {}

func (x *SortListParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortListParams.ProtoReflect.Descriptor instead.
func (*SortListParams) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{6}
}

func (x *SortListParams) GetSorts() []*SortList {
	if x != nil {
		return x.Sorts
	}
	return nil
}

type ToggleVisibleListsParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Visible       bool                   `protobuf:"varint,1,opt,name=visible,proto3" json:"visible,omitempty"`
	ListIds       []int32                `protobuf:"varint,2,rep,packed,name=list_ids,json=listIds,proto3" json:"list_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToggleVisibleListsParams) Reset() {
	*x = ToggleVisibleListsParams{}
	mi := &file_sd_sd_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToggleVisibleListsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleVisibleListsParams) ProtoMessage() {}

func (x *ToggleVisibleListsParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleVisibleListsParams.ProtoReflect.Descriptor instead.
func (*ToggleVisibleListsParams) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{7}
}

func (x *ToggleVisibleListsParams) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *ToggleVisibleListsParams) GetListIds() []int32 {
	if x != nil {
		return x.ListIds
	}
	return nil
}

type ToggleVisibleEntitiesParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Visible       bool                   `protobuf:"varint,1,opt,name=visible,proto3" json:"visible,omitempty"`
	EntityIds     []int32                `protobuf:"varint,2,rep,packed,name=entity_ids,json=entityIds,proto3" json:"entity_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToggleVisibleEntitiesParams) Reset() {
	*x = ToggleVisibleEntitiesParams{}
	mi := &file_sd_sd_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToggleVisibleEntitiesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleVisibleEntitiesParams) ProtoMessage() {}

func (x *ToggleVisibleEntitiesParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleVisibleEntitiesParams.ProtoReflect.Descriptor instead.
func (*ToggleVisibleEntitiesParams) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{8}
}

func (x *ToggleVisibleEntitiesParams) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *ToggleVisibleEntitiesParams) GetEntityIds() []int32 {
	if x != nil {
		return x.EntityIds
	}
	return nil
}

type GetEntityBySlugParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lang          common.Lang            `protobuf:"varint,1,opt,name=lang,proto3,enum=common.Lang" json:"lang,omitempty"`
	Slug          string                 `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEntityBySlugParams) Reset() {
	*x = GetEntityBySlugParams{}
	mi := &file_sd_sd_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEntityBySlugParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntityBySlugParams) ProtoMessage() {}

func (x *GetEntityBySlugParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntityBySlugParams.ProtoReflect.Descriptor instead.
func (*GetEntityBySlugParams) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{9}
}

func (x *GetEntityBySlugParams) GetLang() common.Lang {
	if x != nil {
		return x.Lang
	}
	return common.Lang(0)
}

func (x *GetEntityBySlugParams) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

type DeleteListParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ListId        int32                  `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteListParams) Reset() {
	*x = DeleteListParams{}
	mi := &file_sd_sd_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteListParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteListParams) ProtoMessage() {}

func (x *DeleteListParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteListParams.ProtoReflect.Descriptor instead.
func (*DeleteListParams) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteListParams) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

type CreateEntityParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Order         int32                  `protobuf:"varint,1,opt,name=order,proto3" json:"order,omitempty"`
	Name          []*common.I10N         `protobuf:"bytes,2,rep,name=name,proto3" json:"name,omitempty"`
	Description   []*common.I10N         `protobuf:"bytes,3,rep,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateEntityParams) Reset() {
	*x = CreateEntityParams{}
	mi := &file_sd_sd_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateEntityParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEntityParams) ProtoMessage() {}

func (x *CreateEntityParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEntityParams.ProtoReflect.Descriptor instead.
func (*CreateEntityParams) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{11}
}

func (x *CreateEntityParams) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *CreateEntityParams) GetName() []*common.I10N {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *CreateEntityParams) GetDescription() []*common.I10N {
	if x != nil {
		return x.Description
	}
	return nil
}

type SortEntity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Order         int32                  `protobuf:"varint,1,opt,name=order,proto3" json:"order,omitempty"`
	EntityId      int32                  `protobuf:"varint,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortEntity) Reset() {
	*x = SortEntity{}
	mi := &file_sd_sd_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortEntity) ProtoMessage() {}

func (x *SortEntity) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortEntity.ProtoReflect.Descriptor instead.
func (*SortEntity) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{12}
}

func (x *SortEntity) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *SortEntity) GetEntityId() int32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

type SortEntityParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sorts         *SortEntity            `protobuf:"bytes,1,opt,name=sorts,proto3" json:"sorts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SortEntityParams) Reset() {
	*x = SortEntityParams{}
	mi := &file_sd_sd_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SortEntityParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortEntityParams) ProtoMessage() {}

func (x *SortEntityParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortEntityParams.ProtoReflect.Descriptor instead.
func (*SortEntityParams) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{13}
}

func (x *SortEntityParams) GetSorts() *SortEntity {
	if x != nil {
		return x.Sorts
	}
	return nil
}

type ToggleAttachEntityToListParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ListId        int32                  `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	EntityIds     []int32                `protobuf:"varint,2,rep,packed,name=entity_ids,json=entityIds,proto3" json:"entity_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToggleAttachEntityToListParams) Reset() {
	*x = ToggleAttachEntityToListParams{}
	mi := &file_sd_sd_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToggleAttachEntityToListParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleAttachEntityToListParams) ProtoMessage() {}

func (x *ToggleAttachEntityToListParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleAttachEntityToListParams.ProtoReflect.Descriptor instead.
func (*ToggleAttachEntityToListParams) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{14}
}

func (x *ToggleAttachEntityToListParams) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

func (x *ToggleAttachEntityToListParams) GetEntityIds() []int32 {
	if x != nil {
		return x.EntityIds
	}
	return nil
}

type ToggleAttachFieldToListParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ListId        int32                  `protobuf:"varint,1,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	FieldIds      []int32                `protobuf:"varint,2,rep,packed,name=field_ids,json=fieldIds,proto3" json:"field_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToggleAttachFieldToListParams) Reset() {
	*x = ToggleAttachFieldToListParams{}
	mi := &file_sd_sd_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToggleAttachFieldToListParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleAttachFieldToListParams) ProtoMessage() {}

func (x *ToggleAttachFieldToListParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleAttachFieldToListParams.ProtoReflect.Descriptor instead.
func (*ToggleAttachFieldToListParams) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{15}
}

func (x *ToggleAttachFieldToListParams) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

func (x *ToggleAttachFieldToListParams) GetFieldIds() []int32 {
	if x != nil {
		return x.FieldIds
	}
	return nil
}

type RemoveEntityFieldValueParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityId      int32                  `protobuf:"varint,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	FieldId       string                 `protobuf:"bytes,2,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveEntityFieldValueParams) Reset() {
	*x = RemoveEntityFieldValueParams{}
	mi := &file_sd_sd_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveEntityFieldValueParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveEntityFieldValueParams) ProtoMessage() {}

func (x *RemoveEntityFieldValueParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveEntityFieldValueParams.ProtoReflect.Descriptor instead.
func (*RemoveEntityFieldValueParams) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{16}
}

func (x *RemoveEntityFieldValueParams) GetEntityId() int32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *RemoveEntityFieldValueParams) GetFieldId() string {
	if x != nil {
		return x.FieldId
	}
	return ""
}

type CreateFieldParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          FieldType              `protobuf:"varint,1,opt,name=type,proto3,enum=sd.FieldType" json:"type,omitempty"`
	InFilter      bool                   `protobuf:"varint,2,opt,name=in_filter,json=inFilter,proto3" json:"in_filter,omitempty"`
	InPreview     bool                   `protobuf:"varint,3,opt,name=in_preview,json=inPreview,proto3" json:"in_preview,omitempty"`
	InPage        bool                   `protobuf:"varint,4,opt,name=in_page,json=inPage,proto3" json:"in_page,omitempty"`
	Order         int32                  `protobuf:"varint,5,opt,name=order,proto3" json:"order,omitempty"`
	Name          string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Prefix        string                 `protobuf:"bytes,8,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Postfix       string                 `protobuf:"bytes,9,opt,name=postfix,proto3" json:"postfix,omitempty"`
	Placeholder   string                 `protobuf:"bytes,10,opt,name=placeholder,proto3" json:"placeholder,omitempty"`
	GroupKeys     []string               `protobuf:"bytes,11,rep,name=group_keys,json=groupKeys,proto3" json:"group_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFieldParams) Reset() {
	*x = CreateFieldParams{}
	mi := &file_sd_sd_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFieldParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFieldParams) ProtoMessage() {}

func (x *CreateFieldParams) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFieldParams.ProtoReflect.Descriptor instead.
func (*CreateFieldParams) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{17}
}

func (x *CreateFieldParams) GetType() FieldType {
	if x != nil {
		return x.Type
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

func (x *CreateFieldParams) GetInFilter() bool {
	if x != nil {
		return x.InFilter
	}
	return false
}

func (x *CreateFieldParams) GetInPreview() bool {
	if x != nil {
		return x.InPreview
	}
	return false
}

func (x *CreateFieldParams) GetInPage() bool {
	if x != nil {
		return x.InPage
	}
	return false
}

func (x *CreateFieldParams) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *CreateFieldParams) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateFieldParams) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *CreateFieldParams) GetPostfix() string {
	if x != nil {
		return x.Postfix
	}
	return ""
}

func (x *CreateFieldParams) GetPlaceholder() string {
	if x != nil {
		return x.Placeholder
	}
	return ""
}

func (x *CreateFieldParams) GetGroupKeys() []string {
	if x != nil {
		return x.GroupKeys
	}
	return nil
}

type ListMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentId      int32                  `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Order         int32                  `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	Slug          string                 `protobuf:"bytes,4,opt,name=slug,proto3" json:"slug,omitempty"`
	Name          string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	CustomKey     string                 `protobuf:"bytes,7,opt,name=custom_key,json=customKey,proto3" json:"custom_key,omitempty"`
	Image         []byte                 `protobuf:"bytes,8,opt,name=image,proto3,oneof" json:"image,omitempty"`
	IsShow        bool                   `protobuf:"varint,9,opt,name=is_show,json=isShow,proto3" json:"is_show,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMeta) Reset() {
	*x = ListMeta{}
	mi := &file_sd_sd_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMeta) ProtoMessage() {}

func (x *ListMeta) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMeta.ProtoReflect.Descriptor instead.
func (*ListMeta) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{18}
}

func (x *ListMeta) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ListMeta) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ListMeta) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ListMeta) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *ListMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListMeta) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ListMeta) GetCustomKey() string {
	if x != nil {
		return x.CustomKey
	}
	return ""
}

func (x *ListMeta) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *ListMeta) GetIsShow() bool {
	if x != nil {
		return x.IsShow
	}
	return false
}

type ListFields struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        []*Field               `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFields) Reset() {
	*x = ListFields{}
	mi := &file_sd_sd_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFields) ProtoMessage() {}

func (x *ListFields) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFields.ProtoReflect.Descriptor instead.
func (*ListFields) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{19}
}

func (x *ListFields) GetFields() []*Field {
	if x != nil {
		return x.Fields
	}
	return nil
}

type List struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *ListMeta              `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Fields        []*ListFields          `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	SubLists      []*List                `protobuf:"bytes,3,rep,name=sub_lists,json=subLists,proto3" json:"sub_lists,omitempty"`
	Entities      []*Entity              `protobuf:"bytes,4,rep,name=entities,proto3" json:"entities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *List) Reset() {
	*x = List{}
	mi := &file_sd_sd_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{20}
}

func (x *List) GetMeta() *ListMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *List) GetFields() []*ListFields {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *List) GetSubLists() []*List {
	if x != nil {
		return x.SubLists
	}
	return nil
}

func (x *List) GetEntities() []*Entity {
	if x != nil {
		return x.Entities
	}
	return nil
}

type EntityMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Order         int32                  `protobuf:"varint,3,opt,name=order,proto3" json:"order,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	IsShow        bool                   `protobuf:"varint,6,opt,name=is_show,json=isShow,proto3" json:"is_show,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityMeta) Reset() {
	*x = EntityMeta{}
	mi := &file_sd_sd_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityMeta) ProtoMessage() {}

func (x *EntityMeta) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityMeta.ProtoReflect.Descriptor instead.
func (*EntityMeta) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{21}
}

func (x *EntityMeta) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EntityMeta) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *EntityMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EntityMeta) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EntityMeta) GetIsShow() bool {
	if x != nil {
		return x.IsShow
	}
	return false
}

type Entity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *EntityMeta            `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Fields        []*EntityFieldValue    `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Entity) Reset() {
	*x = Entity{}
	mi := &file_sd_sd_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{22}
}

func (x *Entity) GetMeta() *EntityMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Entity) GetFields() []*EntityFieldValue {
	if x != nil {
		return x.Fields
	}
	return nil
}

type FieldMetaBase struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          FieldType              `protobuf:"varint,2,opt,name=type,proto3,enum=sd.FieldType" json:"type,omitempty"`
	InFilter      bool                   `protobuf:"varint,3,opt,name=in_filter,json=inFilter,proto3" json:"in_filter,omitempty"`
	InPreview     bool                   `protobuf:"varint,4,opt,name=in_preview,json=inPreview,proto3" json:"in_preview,omitempty"`
	InPage        bool                   `protobuf:"varint,5,opt,name=in_page,json=inPage,proto3" json:"in_page,omitempty"`
	Order         int32                  `protobuf:"varint,6,opt,name=order,proto3" json:"order,omitempty"`
	Name          string                 `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Prefix        string                 `protobuf:"bytes,8,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Postfix       string                 `protobuf:"bytes,9,opt,name=postfix,proto3" json:"postfix,omitempty"`
	Placeholder   string                 `protobuf:"bytes,10,opt,name=placeholder,proto3" json:"placeholder,omitempty"`
	GroupKeys     []string               `protobuf:"bytes,11,rep,name=group_keys,json=groupKeys,proto3" json:"group_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldMetaBase) Reset() {
	*x = FieldMetaBase{}
	mi := &file_sd_sd_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldMetaBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldMetaBase) ProtoMessage() {}

func (x *FieldMetaBase) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldMetaBase.ProtoReflect.Descriptor instead.
func (*FieldMetaBase) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{23}
}

func (x *FieldMetaBase) GetType() FieldType {
	if x != nil {
		return x.Type
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

func (x *FieldMetaBase) GetInFilter() bool {
	if x != nil {
		return x.InFilter
	}
	return false
}

func (x *FieldMetaBase) GetInPreview() bool {
	if x != nil {
		return x.InPreview
	}
	return false
}

func (x *FieldMetaBase) GetInPage() bool {
	if x != nil {
		return x.InPage
	}
	return false
}

func (x *FieldMetaBase) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *FieldMetaBase) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FieldMetaBase) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *FieldMetaBase) GetPostfix() string {
	if x != nil {
		return x.Postfix
	}
	return ""
}

func (x *FieldMetaBase) GetPlaceholder() string {
	if x != nil {
		return x.Placeholder
	}
	return ""
}

func (x *FieldMetaBase) GetGroupKeys() []string {
	if x != nil {
		return x.GroupKeys
	}
	return nil
}

type FieldMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Base          *FieldMetaBase         `protobuf:"bytes,2,opt,name=base,proto3" json:"base,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldMeta) Reset() {
	*x = FieldMeta{}
	mi := &file_sd_sd_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldMeta) ProtoMessage() {}

func (x *FieldMeta) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldMeta.ProtoReflect.Descriptor instead.
func (*FieldMeta) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{24}
}

func (x *FieldMeta) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FieldMeta) GetBase() *FieldMetaBase {
	if x != nil {
		return x.Base
	}
	return nil
}

type GroupKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Key           string                 `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Label         string                 `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupKey) Reset() {
	*x = GroupKey{}
	mi := &file_sd_sd_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupKey) ProtoMessage() {}

func (x *GroupKey) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupKey.ProtoReflect.Descriptor instead.
func (*GroupKey) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{25}
}

func (x *GroupKey) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroupKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GroupKey) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type Field struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *FieldMeta             `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Options       *FieldOptions          `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Field) Reset() {
	*x = Field{}
	mi := &file_sd_sd_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{26}
}

func (x *Field) GetMeta() *FieldMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Field) GetOptions() *FieldOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type FieldOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to List:
	//
	//	*FieldOptions_CommonOptions
	//	*FieldOptions_NumberOptions
	//	*FieldOptions_StringOptions
	//	*FieldOptions_EnumOptions
	List          isFieldOptions_List `protobuf_oneof:"list"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldOptions) Reset() {
	*x = FieldOptions{}
	mi := &file_sd_sd_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldOptions) ProtoMessage() {}

func (x *FieldOptions) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldOptions.ProtoReflect.Descriptor instead.
func (*FieldOptions) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{27}
}

func (x *FieldOptions) GetList() isFieldOptions_List {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *FieldOptions) GetCommonOptions() *FieldCommonOptions {
	if x != nil {
		if x, ok := x.List.(*FieldOptions_CommonOptions); ok {
			return x.CommonOptions
		}
	}
	return nil
}

func (x *FieldOptions) GetNumberOptions() *FieldNumberOptions {
	if x != nil {
		if x, ok := x.List.(*FieldOptions_NumberOptions); ok {
			return x.NumberOptions
		}
	}
	return nil
}

func (x *FieldOptions) GetStringOptions() *FieldStringOptions {
	if x != nil {
		if x, ok := x.List.(*FieldOptions_StringOptions); ok {
			return x.StringOptions
		}
	}
	return nil
}

func (x *FieldOptions) GetEnumOptions() *FieldEnumOptions {
	if x != nil {
		if x, ok := x.List.(*FieldOptions_EnumOptions); ok {
			return x.EnumOptions
		}
	}
	return nil
}

type isFieldOptions_List interface {
	isFieldOptions_List()
}

type FieldOptions_CommonOptions struct {
	CommonOptions *FieldCommonOptions `protobuf:"bytes,1,opt,name=common_options,json=commonOptions,proto3,oneof"`
}

type FieldOptions_NumberOptions struct {
	NumberOptions *FieldNumberOptions `protobuf:"bytes,2,opt,name=number_options,json=numberOptions,proto3,oneof"`
}

type FieldOptions_StringOptions struct {
	StringOptions *FieldStringOptions `protobuf:"bytes,3,opt,name=string_options,json=stringOptions,proto3,oneof"`
}

type FieldOptions_EnumOptions struct {
	EnumOptions *FieldEnumOptions `protobuf:"bytes,4,opt,name=enum_options,json=enumOptions,proto3,oneof"`
}

func (*FieldOptions_CommonOptions) isFieldOptions_List() {}

func (*FieldOptions_NumberOptions) isFieldOptions_List() {}

func (*FieldOptions_StringOptions) isFieldOptions_List() {}

func (*FieldOptions_EnumOptions) isFieldOptions_List() {}

type FieldCommonOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldCommonOptions) Reset() {
	*x = FieldCommonOptions{}
	mi := &file_sd_sd_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldCommonOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldCommonOptions) ProtoMessage() {}

func (x *FieldCommonOptions) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldCommonOptions.ProtoReflect.Descriptor instead.
func (*FieldCommonOptions) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{28}
}

func (x *FieldCommonOptions) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FieldNumberOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Default       int32                  `protobuf:"varint,2,opt,name=default,proto3" json:"default,omitempty"`
	Min           int32                  `protobuf:"varint,3,opt,name=min,proto3" json:"min,omitempty"`
	Max           int32                  `protobuf:"varint,4,opt,name=max,proto3" json:"max,omitempty"`
	Step          int32                  `protobuf:"varint,5,opt,name=step,proto3" json:"step,omitempty"`
	Precision     int32                  `protobuf:"varint,6,opt,name=precision,proto3" json:"precision,omitempty"`
	Commas        int32                  `protobuf:"varint,7,opt,name=commas,proto3" json:"commas,omitempty"`
	View          FieldNumberView        `protobuf:"varint,8,opt,name=view,proto3,enum=sd.FieldNumberView" json:"view,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldNumberOptions) Reset() {
	*x = FieldNumberOptions{}
	mi := &file_sd_sd_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldNumberOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldNumberOptions) ProtoMessage() {}

func (x *FieldNumberOptions) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldNumberOptions.ProtoReflect.Descriptor instead.
func (*FieldNumberOptions) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{29}
}

func (x *FieldNumberOptions) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FieldNumberOptions) GetDefault() int32 {
	if x != nil {
		return x.Default
	}
	return 0
}

func (x *FieldNumberOptions) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *FieldNumberOptions) GetMax() int32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *FieldNumberOptions) GetStep() int32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *FieldNumberOptions) GetPrecision() int32 {
	if x != nil {
		return x.Precision
	}
	return 0
}

func (x *FieldNumberOptions) GetCommas() int32 {
	if x != nil {
		return x.Commas
	}
	return 0
}

func (x *FieldNumberOptions) GetView() FieldNumberView {
	if x != nil {
		return x.View
	}
	return FieldNumberView_FIELD_NUMBER_VIEW_UNSPECIFIED
}

type FieldStringOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Default       string                 `protobuf:"bytes,2,opt,name=default,proto3" json:"default,omitempty"`
	Mask          string                 `protobuf:"bytes,3,opt,name=mask,proto3" json:"mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldStringOptions) Reset() {
	*x = FieldStringOptions{}
	mi := &file_sd_sd_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldStringOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldStringOptions) ProtoMessage() {}

func (x *FieldStringOptions) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldStringOptions.ProtoReflect.Descriptor instead.
func (*FieldStringOptions) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{30}
}

func (x *FieldStringOptions) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FieldStringOptions) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *FieldStringOptions) GetMask() string {
	if x != nil {
		return x.Mask
	}
	return ""
}

type FieldEnumOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldEnumOption) Reset() {
	*x = FieldEnumOption{}
	mi := &file_sd_sd_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldEnumOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldEnumOption) ProtoMessage() {}

func (x *FieldEnumOption) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldEnumOption.ProtoReflect.Descriptor instead.
func (*FieldEnumOption) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{31}
}

func (x *FieldEnumOption) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FieldEnumOption) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type FieldEnumOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Options       []*FieldEnumOption     `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FieldEnumOptions) Reset() {
	*x = FieldEnumOptions{}
	mi := &file_sd_sd_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FieldEnumOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldEnumOptions) ProtoMessage() {}

func (x *FieldEnumOptions) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldEnumOptions.ProtoReflect.Descriptor instead.
func (*FieldEnumOptions) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{32}
}

func (x *FieldEnumOptions) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FieldEnumOptions) GetOptions() []*FieldEnumOption {
	if x != nil {
		return x.Options
	}
	return nil
}

type EntityFieldValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FieldId       int32                  `protobuf:"varint,1,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	EntityFieldId int32                  `protobuf:"varint,2,opt,name=entity_field_id,json=entityFieldId,proto3" json:"entity_field_id,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*EntityFieldValue_StringValue
	//	*EntityFieldValue_IntValue
	//	*EntityFieldValue_BoolValue
	//	*EntityFieldValue_BytesValue
	//	*EntityFieldValue_TimestampValue
	Value         isEntityFieldValue_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EntityFieldValue) Reset() {
	*x = EntityFieldValue{}
	mi := &file_sd_sd_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EntityFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityFieldValue) ProtoMessage() {}

func (x *EntityFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityFieldValue.ProtoReflect.Descriptor instead.
func (*EntityFieldValue) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{33}
}

func (x *EntityFieldValue) GetFieldId() int32 {
	if x != nil {
		return x.FieldId
	}
	return 0
}

func (x *EntityFieldValue) GetEntityFieldId() int32 {
	if x != nil {
		return x.EntityFieldId
	}
	return 0
}

func (x *EntityFieldValue) GetValue() isEntityFieldValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *EntityFieldValue) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*EntityFieldValue_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *EntityFieldValue) GetIntValue() int32 {
	if x != nil {
		if x, ok := x.Value.(*EntityFieldValue_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *EntityFieldValue) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*EntityFieldValue_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *EntityFieldValue) GetBytesValue() []byte {
	if x != nil {
		if x, ok := x.Value.(*EntityFieldValue_BytesValue); ok {
			return x.BytesValue
		}
	}
	return nil
}

func (x *EntityFieldValue) GetTimestampValue() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Value.(*EntityFieldValue_TimestampValue); ok {
			return x.TimestampValue
		}
	}
	return nil
}

type isEntityFieldValue_Value interface {
	isEntityFieldValue_Value()
}

type EntityFieldValue_StringValue struct {
	StringValue string `protobuf:"bytes,4,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type EntityFieldValue_IntValue struct {
	IntValue int32 `protobuf:"varint,5,opt,name=int_value,json=intValue,proto3,oneof"`
}

type EntityFieldValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,6,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type EntityFieldValue_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,7,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type EntityFieldValue_TimestampValue struct {
	TimestampValue *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=timestamp_value,json=timestampValue,proto3,oneof"`
}

func (*EntityFieldValue_StringValue) isEntityFieldValue_Value() {}

func (*EntityFieldValue_IntValue) isEntityFieldValue_Value() {}

func (*EntityFieldValue_BoolValue) isEntityFieldValue_Value() {}

func (*EntityFieldValue_BytesValue) isEntityFieldValue_Value() {}

func (*EntityFieldValue_TimestampValue) isEntityFieldValue_Value() {}

type ListEntityFieldValue struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	FieldId  int32                  `protobuf:"varint,1,opt,name=field_id,json=fieldId,proto3" json:"field_id,omitempty"`
	ListId   int32                  `protobuf:"varint,2,opt,name=list_id,json=listId,proto3" json:"list_id,omitempty"`
	EntityId int32                  `protobuf:"varint,3,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*ListEntityFieldValue_StringValue
	//	*ListEntityFieldValue_IntValue
	//	*ListEntityFieldValue_BoolValue
	//	*ListEntityFieldValue_BytesValue
	//	*ListEntityFieldValue_TimestampValue
	Value         isListEntityFieldValue_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEntityFieldValue) Reset() {
	*x = ListEntityFieldValue{}
	mi := &file_sd_sd_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEntityFieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntityFieldValue) ProtoMessage() {}

func (x *ListEntityFieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntityFieldValue.ProtoReflect.Descriptor instead.
func (*ListEntityFieldValue) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{34}
}

func (x *ListEntityFieldValue) GetFieldId() int32 {
	if x != nil {
		return x.FieldId
	}
	return 0
}

func (x *ListEntityFieldValue) GetListId() int32 {
	if x != nil {
		return x.ListId
	}
	return 0
}

func (x *ListEntityFieldValue) GetEntityId() int32 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *ListEntityFieldValue) GetValue() isListEntityFieldValue_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ListEntityFieldValue) GetStringValue() string {
	if x != nil {
		if x, ok := x.Value.(*ListEntityFieldValue_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *ListEntityFieldValue) GetIntValue() int32 {
	if x != nil {
		if x, ok := x.Value.(*ListEntityFieldValue_IntValue); ok {
			return x.IntValue
		}
	}
	return 0
}

func (x *ListEntityFieldValue) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Value.(*ListEntityFieldValue_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

func (x *ListEntityFieldValue) GetBytesValue() []byte {
	if x != nil {
		if x, ok := x.Value.(*ListEntityFieldValue_BytesValue); ok {
			return x.BytesValue
		}
	}
	return nil
}

func (x *ListEntityFieldValue) GetTimestampValue() *timestamppb.Timestamp {
	if x != nil {
		if x, ok := x.Value.(*ListEntityFieldValue_TimestampValue); ok {
			return x.TimestampValue
		}
	}
	return nil
}

type isListEntityFieldValue_Value interface {
	isListEntityFieldValue_Value()
}

type ListEntityFieldValue_StringValue struct {
	StringValue string `protobuf:"bytes,4,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type ListEntityFieldValue_IntValue struct {
	IntValue int32 `protobuf:"varint,5,opt,name=int_value,json=intValue,proto3,oneof"`
}

type ListEntityFieldValue_BoolValue struct {
	BoolValue bool `protobuf:"varint,6,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type ListEntityFieldValue_BytesValue struct {
	BytesValue []byte `protobuf:"bytes,7,opt,name=bytes_value,json=bytesValue,proto3,oneof"`
}

type ListEntityFieldValue_TimestampValue struct {
	TimestampValue *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=timestamp_value,json=timestampValue,proto3,oneof"`
}

func (*ListEntityFieldValue_StringValue) isListEntityFieldValue_Value() {}

func (*ListEntityFieldValue_IntValue) isListEntityFieldValue_Value() {}

func (*ListEntityFieldValue_BoolValue) isListEntityFieldValue_Value() {}

func (*ListEntityFieldValue_BytesValue) isListEntityFieldValue_Value() {}

func (*ListEntityFieldValue_TimestampValue) isListEntityFieldValue_Value() {}

type ListEntityFieldValues struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Values        []*ListEntityFieldValue `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListEntityFieldValues) Reset() {
	*x = ListEntityFieldValues{}
	mi := &file_sd_sd_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListEntityFieldValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEntityFieldValues) ProtoMessage() {}

func (x *ListEntityFieldValues) ProtoReflect() protoreflect.Message {
	mi := &file_sd_sd_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEntityFieldValues.ProtoReflect.Descriptor instead.
func (*ListEntityFieldValues) Descriptor() ([]byte, []int) {
	return file_sd_sd_proto_rawDescGZIP(), []int{35}
}

func (x *ListEntityFieldValues) GetValues() []*ListEntityFieldValue {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_sd_sd_proto protoreflect.FileDescriptor

var file_sd_sd_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x73, 0x64, 0x2f, 0x73, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x73,
	0x64, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2a,
	0x0a, 0x18, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x33, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x35, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x73, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x64, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0xca, 0x01,
	0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x20, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x31, 0x30, 0x6e, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x31, 0x30,
	0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x08, 0x53, 0x6f,
	0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c,
	0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x0e, 0x53, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x64, 0x2e, 0x53, 0x6f, 0x72, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x4f, 0x0a, 0x18, 0x54,
	0x6f, 0x67, 0x67, 0x6c, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x73, 0x22, 0x56, 0x0a, 0x1b,
	0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x73, 0x22, 0x4d, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x22, 0x2b, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64,
	0x22, 0x7c, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x31, 0x30, 0x6e, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x31, 0x30,
	0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3f,
	0x0a, 0x0a, 0x53, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22,
	0x38, 0x0a, 0x10, 0x53, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x22, 0x58, 0x0a, 0x1e, 0x54, 0x6f, 0x67,
	0x67, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x73, 0x22, 0x55, 0x0a, 0x1d, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x73, 0x22, 0x56, 0x0a, 0x1c, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x49, 0x64, 0x22, 0xa8, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x5f, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x6e,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x6e, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x66, 0x69, 0x78, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x66, 0x69, 0x78, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x0b, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x22, 0xf4, 0x01,
	0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x22, 0x2f, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x12, 0x21, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73,
	0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x12, 0x26, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x73, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x73, 0x64,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x08, 0x73, 0x75, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x12,
	0x26, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x73, 0x64, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x22, 0x5a, 0x0a, 0x06, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x06, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x64, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xa4, 0x02, 0x0a, 0x0d, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x61, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x6e, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x5f,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x6e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x6e, 0x50, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x66, 0x69, 0x78, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x66, 0x69, 0x78, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x73, 0x22, 0x42,
	0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x64, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x22, 0x42, 0x0a, 0x08, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x56, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x21, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x73, 0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x12, 0x2a, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x94,
	0x02, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x3f, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48,
	0x00, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x3f, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x48, 0x00, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x3f, 0x0a, 0x0e, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x64, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x39, 0x0a, 0x0c, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00,
	0x52, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x06, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x24, 0x0a, 0x12, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd5, 0x01, 0x0a, 0x12,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x61, 0x78,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x74, 0x65, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x73, 0x12, 0x27, 0x0a, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x52, 0x04, 0x76,
	0x69, 0x65, 0x77, 0x22, 0x52, 0x0a, 0x12, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b, 0x22, 0x37, 0x0a, 0x0f, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x51, 0x0a, 0x10, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x22, 0xad, 0x02, 0x0a, 0x10, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x21, 0x0a, 0x0b, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x45, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xbf, 0x02, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x62, 0x79, 0x74, 0x65, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x45, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x49, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x30,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x2a, 0x83, 0x01, 0x0a, 0x09, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x16, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x41,
	0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x10, 0x03, 0x12, 0x08,
	0x0a, 0x04, 0x42, 0x4f, 0x4f, 0x4c, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x49, 0x4d, 0x45,
	0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4e, 0x4b, 0x10,
	0x06, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x07, 0x12, 0x08, 0x0a, 0x04,
	0x45, 0x4e, 0x55, 0x4d, 0x10, 0x08, 0x2a, 0x59, 0x0a, 0x0f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x49, 0x45,
	0x4c, 0x44, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x41, 0x4e, 0x47, 0x45,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x43, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10,
	0x03, 0x2a, 0x8a, 0x01, 0x0a, 0x0f, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x54,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4c,
	0x49, 0x4e, 0x4b, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x4e, 0x45,
	0x52, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x45, 0x42, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07,
	0x54, 0x57, 0x49, 0x54, 0x54, 0x45, 0x52, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x58, 0x43, 0x4f,
	0x4d, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x41, 0x43, 0x45, 0x42, 0x4f, 0x4f, 0x4b, 0x10,
	0x05, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x06,
	0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x49, 0x4e, 0x4b, 0x45, 0x44, 0x49, 0x4e, 0x10, 0x07, 0x32, 0xad,
	0x0a, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x17,
	0x2e, 0x73, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x53, 0x6c, 0x75,
	0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x19, 0x2e, 0x73, 0x64, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x17, 0x2e, 0x73, 0x64,
	0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x21, 0x2e, 0x73, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x73, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x08, 0x2e, 0x73, 0x64,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x08, 0x2e, 0x73, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x08, 0x2e,
	0x73, 0x64, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x64, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x53, 0x6f, 0x72, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x73, 0x64, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x46, 0x0a, 0x12,
	0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x73, 0x12, 0x1c, 0x2e, 0x73, 0x64, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x56, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x2e, 0x73, 0x64, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x0a, 0x2e, 0x73,
	0x64, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67, 0x12, 0x19, 0x2e, 0x73, 0x64,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x79, 0x53, 0x6c, 0x75, 0x67,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x0a, 0x2e, 0x73, 0x64, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x36, 0x0a, 0x0a, 0x53, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x14, 0x2e, 0x73, 0x64, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4c, 0x0a, 0x15, 0x54, 0x6f,
	0x67, 0x67, 0x6c, 0x65, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x64, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x14, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x54, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x22, 0x2e, 0x73, 0x64, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x50, 0x0a, 0x16, 0x44, 0x65, 0x74, 0x61,
	0x63, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x22, 0x2e, 0x73, 0x64, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x11, 0x2e, 0x73, 0x64, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x61, 0x73, 0x65, 0x1a, 0x12, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x34, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x11, 0x2e, 0x73, 0x64, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x42, 0x61,
	0x73, 0x65, 0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1c, 0x2e, 0x73, 0x64, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c,
	0x65, 0x4d, 0x61, 0x6e, 0x69, 0x70, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6f,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x50, 0x0a, 0x17, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x64, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x52, 0x0a, 0x19, 0x44, 0x65, 0x74,
	0x61, 0x63, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x64, 0x2e, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a,
	0x13, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x64, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e,
	0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x2e, 0x73, 0x64, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x29,
	0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x33, 0x61,
	0x2d, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2d, 0x67,
	0x6f, 0x2f, 0x73, 0x64, 0x3b, 0x73, 0x64, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
})

var (
	file_sd_sd_proto_rawDescOnce sync.Once
	file_sd_sd_proto_rawDescData []byte
)

func file_sd_sd_proto_rawDescGZIP() []byte {
	file_sd_sd_proto_rawDescOnce.Do(func() {
		file_sd_sd_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sd_sd_proto_rawDesc), len(file_sd_sd_proto_rawDesc)))
	})
	return file_sd_sd_proto_rawDescData
}

var file_sd_sd_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_sd_sd_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_sd_sd_proto_goTypes = []any{
	(FieldType)(0),                         // 0: sd.FieldType
	(FieldNumberView)(0),                   // 1: sd.FieldNumberView
	(FieldLinkTarget)(0),                   // 2: sd.FieldLinkTarget
	(*SingleManipulationParams)(nil),       // 3: sd.SingleManipulationParams
	(*GetListBySlugParams)(nil),            // 4: sd.GetListBySlugParams
	(*GetListBySlugResponse)(nil),          // 5: sd.GetListBySlugResponse
	(*GetListEntitiesBySlugResponse)(nil),  // 6: sd.GetListEntitiesBySlugResponse
	(*CreateListParams)(nil),               // 7: sd.CreateListParams
	(*SortList)(nil),                       // 8: sd.SortList
	(*SortListParams)(nil),                 // 9: sd.SortListParams
	(*ToggleVisibleListsParams)(nil),       // 10: sd.ToggleVisibleListsParams
	(*ToggleVisibleEntitiesParams)(nil),    // 11: sd.ToggleVisibleEntitiesParams
	(*GetEntityBySlugParams)(nil),          // 12: sd.GetEntityBySlugParams
	(*DeleteListParams)(nil),               // 13: sd.DeleteListParams
	(*CreateEntityParams)(nil),             // 14: sd.CreateEntityParams
	(*SortEntity)(nil),                     // 15: sd.SortEntity
	(*SortEntityParams)(nil),               // 16: sd.SortEntityParams
	(*ToggleAttachEntityToListParams)(nil), // 17: sd.ToggleAttachEntityToListParams
	(*ToggleAttachFieldToListParams)(nil),  // 18: sd.ToggleAttachFieldToListParams
	(*RemoveEntityFieldValueParams)(nil),   // 19: sd.RemoveEntityFieldValueParams
	(*CreateFieldParams)(nil),              // 20: sd.CreateFieldParams
	(*ListMeta)(nil),                       // 21: sd.ListMeta
	(*ListFields)(nil),                     // 22: sd.ListFields
	(*List)(nil),                           // 23: sd.List
	(*EntityMeta)(nil),                     // 24: sd.EntityMeta
	(*Entity)(nil),                         // 25: sd.Entity
	(*FieldMetaBase)(nil),                  // 26: sd.FieldMetaBase
	(*FieldMeta)(nil),                      // 27: sd.FieldMeta
	(*GroupKey)(nil),                       // 28: sd.GroupKey
	(*Field)(nil),                          // 29: sd.Field
	(*FieldOptions)(nil),                   // 30: sd.FieldOptions
	(*FieldCommonOptions)(nil),             // 31: sd.FieldCommonOptions
	(*FieldNumberOptions)(nil),             // 32: sd.FieldNumberOptions
	(*FieldStringOptions)(nil),             // 33: sd.FieldStringOptions
	(*FieldEnumOption)(nil),                // 34: sd.FieldEnumOption
	(*FieldEnumOptions)(nil),               // 35: sd.FieldEnumOptions
	(*EntityFieldValue)(nil),               // 36: sd.EntityFieldValue
	(*ListEntityFieldValue)(nil),           // 37: sd.ListEntityFieldValue
	(*ListEntityFieldValues)(nil),          // 38: sd.ListEntityFieldValues
	(common.Lang)(0),                       // 39: common.Lang
	(*common.ListParams)(nil),              // 40: common.ListParams
	(*common.I10N)(nil),                    // 41: common.I10n
	(*timestamppb.Timestamp)(nil),          // 42: google.protobuf.Timestamp
	(*common.BoolStatus)(nil),              // 43: common.BoolStatus
}
var file_sd_sd_proto_depIdxs = []int32{
	39, // 0: sd.GetListBySlugParams.lang:type_name -> common.Lang
	40, // 1: sd.GetListBySlugParams.list_params:type_name -> common.ListParams
	23, // 2: sd.GetListBySlugResponse.list:type_name -> sd.List
	25, // 3: sd.GetListEntitiesBySlugResponse.entities:type_name -> sd.Entity
	41, // 4: sd.CreateListParams.name:type_name -> common.I10n
	41, // 5: sd.CreateListParams.description:type_name -> common.I10n
	8,  // 6: sd.SortListParams.sorts:type_name -> sd.SortList
	39, // 7: sd.GetEntityBySlugParams.lang:type_name -> common.Lang
	41, // 8: sd.CreateEntityParams.name:type_name -> common.I10n
	41, // 9: sd.CreateEntityParams.description:type_name -> common.I10n
	15, // 10: sd.SortEntityParams.sorts:type_name -> sd.SortEntity
	0,  // 11: sd.CreateFieldParams.type:type_name -> sd.FieldType
	29, // 12: sd.ListFields.fields:type_name -> sd.Field
	21, // 13: sd.List.meta:type_name -> sd.ListMeta
	22, // 14: sd.List.fields:type_name -> sd.ListFields
	23, // 15: sd.List.sub_lists:type_name -> sd.List
	25, // 16: sd.List.entities:type_name -> sd.Entity
	24, // 17: sd.Entity.meta:type_name -> sd.EntityMeta
	36, // 18: sd.Entity.fields:type_name -> sd.EntityFieldValue
	0,  // 19: sd.FieldMetaBase.type:type_name -> sd.FieldType
	26, // 20: sd.FieldMeta.base:type_name -> sd.FieldMetaBase
	27, // 21: sd.Field.meta:type_name -> sd.FieldMeta
	30, // 22: sd.Field.options:type_name -> sd.FieldOptions
	31, // 23: sd.FieldOptions.common_options:type_name -> sd.FieldCommonOptions
	32, // 24: sd.FieldOptions.number_options:type_name -> sd.FieldNumberOptions
	33, // 25: sd.FieldOptions.string_options:type_name -> sd.FieldStringOptions
	35, // 26: sd.FieldOptions.enum_options:type_name -> sd.FieldEnumOptions
	1,  // 27: sd.FieldNumberOptions.view:type_name -> sd.FieldNumberView
	34, // 28: sd.FieldEnumOptions.options:type_name -> sd.FieldEnumOption
	42, // 29: sd.EntityFieldValue.timestamp_value:type_name -> google.protobuf.Timestamp
	42, // 30: sd.ListEntityFieldValue.timestamp_value:type_name -> google.protobuf.Timestamp
	37, // 31: sd.ListEntityFieldValues.values:type_name -> sd.ListEntityFieldValue
	4,  // 32: sd.StaticData.GetListBySlug:input_type -> sd.GetListBySlugParams
	4,  // 33: sd.StaticData.GetListEntitiesBySlug:input_type -> sd.GetListBySlugParams
	7,  // 34: sd.StaticData.CreateList:input_type -> sd.CreateListParams
	23, // 35: sd.StaticData.UpdateList:input_type -> sd.List
	3,  // 36: sd.StaticData.DeleteList:input_type -> sd.SingleManipulationParams
	9,  // 37: sd.StaticData.SortLists:input_type -> sd.SortListParams
	10, // 38: sd.StaticData.ToggleVisibleLists:input_type -> sd.ToggleVisibleListsParams
	14, // 39: sd.StaticData.CreateEntity:input_type -> sd.CreateEntityParams
	12, // 40: sd.StaticData.GetEntityBySlug:input_type -> sd.GetEntityBySlugParams
	16, // 41: sd.StaticData.SortEntity:input_type -> sd.SortEntityParams
	11, // 42: sd.StaticData.ToggleVisibleEntities:input_type -> sd.ToggleVisibleEntitiesParams
	17, // 43: sd.StaticData.AttachEntitiesToList:input_type -> sd.ToggleAttachEntityToListParams
	17, // 44: sd.StaticData.DetachEntitiesFromList:input_type -> sd.ToggleAttachEntityToListParams
	26, // 45: sd.StaticData.CreateField:input_type -> sd.FieldMetaBase
	26, // 46: sd.StaticData.UpdateField:input_type -> sd.FieldMetaBase
	3,  // 47: sd.StaticData.DeleteField:input_type -> sd.SingleManipulationParams
	18, // 48: sd.StaticData.AttachFieldToListParams:input_type -> sd.ToggleAttachFieldToListParams
	18, // 49: sd.StaticData.DetachFieldFromListParams:input_type -> sd.ToggleAttachFieldToListParams
	36, // 50: sd.StaticData.SetEntityFieldValue:input_type -> sd.EntityFieldValue
	19, // 51: sd.StaticData.RemoveEntityFieldValue:input_type -> sd.RemoveEntityFieldValueParams
	5,  // 52: sd.StaticData.GetListBySlug:output_type -> sd.GetListBySlugResponse
	6,  // 53: sd.StaticData.GetListEntitiesBySlug:output_type -> sd.GetListEntitiesBySlugResponse
	23, // 54: sd.StaticData.CreateList:output_type -> sd.List
	23, // 55: sd.StaticData.UpdateList:output_type -> sd.List
	43, // 56: sd.StaticData.DeleteList:output_type -> common.BoolStatus
	43, // 57: sd.StaticData.SortLists:output_type -> common.BoolStatus
	43, // 58: sd.StaticData.ToggleVisibleLists:output_type -> common.BoolStatus
	25, // 59: sd.StaticData.CreateEntity:output_type -> sd.Entity
	25, // 60: sd.StaticData.GetEntityBySlug:output_type -> sd.Entity
	43, // 61: sd.StaticData.SortEntity:output_type -> common.BoolStatus
	43, // 62: sd.StaticData.ToggleVisibleEntities:output_type -> common.BoolStatus
	43, // 63: sd.StaticData.AttachEntitiesToList:output_type -> common.BoolStatus
	43, // 64: sd.StaticData.DetachEntitiesFromList:output_type -> common.BoolStatus
	43, // 65: sd.StaticData.CreateField:output_type -> common.BoolStatus
	43, // 66: sd.StaticData.UpdateField:output_type -> common.BoolStatus
	43, // 67: sd.StaticData.DeleteField:output_type -> common.BoolStatus
	43, // 68: sd.StaticData.AttachFieldToListParams:output_type -> common.BoolStatus
	43, // 69: sd.StaticData.DetachFieldFromListParams:output_type -> common.BoolStatus
	43, // 70: sd.StaticData.SetEntityFieldValue:output_type -> common.BoolStatus
	43, // 71: sd.StaticData.RemoveEntityFieldValue:output_type -> common.BoolStatus
	52, // [52:72] is the sub-list for method output_type
	32, // [32:52] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_sd_sd_proto_init() }
func file_sd_sd_proto_init() {
	if File_sd_sd_proto != nil {
		return
	}
	file_sd_sd_proto_msgTypes[18].OneofWrappers = []any{}
	file_sd_sd_proto_msgTypes[27].OneofWrappers = []any{
		(*FieldOptions_CommonOptions)(nil),
		(*FieldOptions_NumberOptions)(nil),
		(*FieldOptions_StringOptions)(nil),
		(*FieldOptions_EnumOptions)(nil),
	}
	file_sd_sd_proto_msgTypes[33].OneofWrappers = []any{
		(*EntityFieldValue_StringValue)(nil),
		(*EntityFieldValue_IntValue)(nil),
		(*EntityFieldValue_BoolValue)(nil),
		(*EntityFieldValue_BytesValue)(nil),
		(*EntityFieldValue_TimestampValue)(nil),
	}
	file_sd_sd_proto_msgTypes[34].OneofWrappers = []any{
		(*ListEntityFieldValue_StringValue)(nil),
		(*ListEntityFieldValue_IntValue)(nil),
		(*ListEntityFieldValue_BoolValue)(nil),
		(*ListEntityFieldValue_BytesValue)(nil),
		(*ListEntityFieldValue_TimestampValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sd_sd_proto_rawDesc), len(file_sd_sd_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sd_sd_proto_goTypes,
		DependencyIndexes: file_sd_sd_proto_depIdxs,
		EnumInfos:         file_sd_sd_proto_enumTypes,
		MessageInfos:      file_sd_sd_proto_msgTypes,
	}.Build()
	File_sd_sd_proto = out.File
	file_sd_sd_proto_goTypes = nil
	file_sd_sd_proto_depIdxs = nil
}
