// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v4.24.4
// source: news/source.proto

package newsv1

import (
	common "github.com/x3a-tech/contract-go/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SourceType int32

const (
	SourceType_SOURCE_TYPE_UNSPECIFIED SourceType = 0
	SourceType_WEB                     SourceType = 1
	SourceType_XCOM                    SourceType = 2
	SourceType_TELEGRAM                SourceType = 3
)

// Enum value maps for SourceType.
var (
	SourceType_name = map[int32]string{
		0: "SOURCE_TYPE_UNSPECIFIED",
		1: "WEB",
		2: "XCOM",
		3: "TELEGRAM",
	}
	SourceType_value = map[string]int32{
		"SOURCE_TYPE_UNSPECIFIED": 0,
		"WEB":                     1,
		"XCOM":                    2,
		"TELEGRAM":                3,
	}
)

func (x SourceType) Enum() *SourceType {
	p := new(SourceType)
	*p = x
	return p
}

func (x SourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_news_source_proto_enumTypes[0].Descriptor()
}

func (SourceType) Type() protoreflect.EnumType {
	return &file_news_source_proto_enumTypes[0]
}

func (x SourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SourceType.Descriptor instead.
func (SourceType) EnumDescriptor() ([]byte, []int) {
	return file_news_source_proto_rawDescGZIP(), []int{0}
}

type RawSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          []byte                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Type          SourceType             `protobuf:"varint,2,opt,name=type,proto3,enum=news.SourceType" json:"type,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Slug          string                 `protobuf:"bytes,4,opt,name=slug,proto3" json:"slug,omitempty"`
	Url           string                 `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	FaviconUrl    string                 `protobuf:"bytes,6,opt,name=favicon_url,json=faviconUrl,proto3" json:"favicon_url,omitempty"`
	Lang          common.Lang            `protobuf:"varint,7,opt,name=lang,proto3,enum=common.Lang" json:"lang,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RawSource) Reset() {
	*x = RawSource{}
	mi := &file_news_source_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RawSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawSource) ProtoMessage() {}

func (x *RawSource) ProtoReflect() protoreflect.Message {
	mi := &file_news_source_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawSource.ProtoReflect.Descriptor instead.
func (*RawSource) Descriptor() ([]byte, []int) {
	return file_news_source_proto_rawDescGZIP(), []int{0}
}

func (x *RawSource) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *RawSource) GetType() SourceType {
	if x != nil {
		return x.Type
	}
	return SourceType_SOURCE_TYPE_UNSPECIFIED
}

func (x *RawSource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RawSource) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *RawSource) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RawSource) GetFaviconUrl() string {
	if x != nil {
		return x.FaviconUrl
	}
	return ""
}

func (x *RawSource) GetLang() common.Lang {
	if x != nil {
		return x.Lang
	}
	return common.Lang(0)
}

type NormalizedSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          []byte                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Type          SourceType             `protobuf:"varint,2,opt,name=type,proto3,enum=news.SourceType" json:"type,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Slug          string                 `protobuf:"bytes,4,opt,name=slug,proto3" json:"slug,omitempty"`
	FaviconUuid   []byte                 `protobuf:"bytes,5,opt,name=favicon_uuid,json=faviconUuid,proto3" json:"favicon_uuid,omitempty"`
	Url           string                 `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	Lang          common.Lang            `protobuf:"varint,7,opt,name=lang,proto3,enum=common.Lang" json:"lang,omitempty"`
	State         int32                  `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NormalizedSource) Reset() {
	*x = NormalizedSource{}
	mi := &file_news_source_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NormalizedSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NormalizedSource) ProtoMessage() {}

func (x *NormalizedSource) ProtoReflect() protoreflect.Message {
	mi := &file_news_source_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NormalizedSource.ProtoReflect.Descriptor instead.
func (*NormalizedSource) Descriptor() ([]byte, []int) {
	return file_news_source_proto_rawDescGZIP(), []int{1}
}

func (x *NormalizedSource) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *NormalizedSource) GetType() SourceType {
	if x != nil {
		return x.Type
	}
	return SourceType_SOURCE_TYPE_UNSPECIFIED
}

func (x *NormalizedSource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NormalizedSource) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *NormalizedSource) GetFaviconUuid() []byte {
	if x != nil {
		return x.FaviconUuid
	}
	return nil
}

func (x *NormalizedSource) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *NormalizedSource) GetLang() common.Lang {
	if x != nil {
		return x.Lang
	}
	return common.Lang(0)
}

func (x *NormalizedSource) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

type SourceMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          []byte                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Type          SourceType             `protobuf:"varint,2,opt,name=type,proto3,enum=news.SourceType" json:"type,omitempty"`
	Icon          []byte                 `protobuf:"bytes,3,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceMeta) Reset() {
	*x = SourceMeta{}
	mi := &file_news_source_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceMeta) ProtoMessage() {}

func (x *SourceMeta) ProtoReflect() protoreflect.Message {
	mi := &file_news_source_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceMeta.ProtoReflect.Descriptor instead.
func (*SourceMeta) Descriptor() ([]byte, []int) {
	return file_news_source_proto_rawDescGZIP(), []int{2}
}

func (x *SourceMeta) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *SourceMeta) GetType() SourceType {
	if x != nil {
		return x.Type
	}
	return SourceType_SOURCE_TYPE_UNSPECIFIED
}

func (x *SourceMeta) GetIcon() []byte {
	if x != nil {
		return x.Icon
	}
	return nil
}

type SourceData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceData) Reset() {
	*x = SourceData{}
	mi := &file_news_source_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceData) ProtoMessage() {}

func (x *SourceData) ProtoReflect() protoreflect.Message {
	mi := &file_news_source_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceData.ProtoReflect.Descriptor instead.
func (*SourceData) Descriptor() ([]byte, []int) {
	return file_news_source_proto_rawDescGZIP(), []int{3}
}

func (x *SourceData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SourceData) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Source struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Meta          *SourceMeta            `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Data          *SourceData            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Source) Reset() {
	*x = Source{}
	mi := &file_news_source_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Source) ProtoMessage() {}

func (x *Source) ProtoReflect() protoreflect.Message {
	mi := &file_news_source_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Source.ProtoReflect.Descriptor instead.
func (*Source) Descriptor() ([]byte, []int) {
	return file_news_source_proto_rawDescGZIP(), []int{4}
}

func (x *Source) GetMeta() *SourceMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Source) GetData() *SourceData {
	if x != nil {
		return x.Data
	}
	return nil
}

type SourceCategory struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CategoryId    int32                  `protobuf:"varint,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	SourceUuid    []byte                 `protobuf:"bytes,3,opt,name=source_uuid,json=sourceUuid,proto3" json:"source_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SourceCategory) Reset() {
	*x = SourceCategory{}
	mi := &file_news_source_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceCategory) ProtoMessage() {}

func (x *SourceCategory) ProtoReflect() protoreflect.Message {
	mi := &file_news_source_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceCategory.ProtoReflect.Descriptor instead.
func (*SourceCategory) Descriptor() ([]byte, []int) {
	return file_news_source_proto_rawDescGZIP(), []int{5}
}

func (x *SourceCategory) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *SourceCategory) GetSourceUuid() []byte {
	if x != nil {
		return x.SourceUuid
	}
	return nil
}

var File_news_source_proto protoreflect.FileDescriptor

var file_news_source_proto_rawDesc = string([]byte{
	0x0a, 0x11, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6e, 0x65, 0x77, 0x73, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2,
	0x01, 0x0a, 0x09, 0x52, 0x61, 0x77, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72,
	0x6c, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x22, 0xe1, 0x01, 0x0a, 0x10, 0x4e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6e, 0x65, 0x77,
	0x73, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61,
	0x76, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x20, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x68, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x69, 0x63, 0x6f,
	0x6e, 0x22, 0x42, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x24, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6e, 0x65, 0x77, 0x73, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x52, 0x0a, 0x0e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x2a,
	0x4a, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x17, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x45,
	0x42, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x58, 0x43, 0x4f, 0x4d, 0x10, 0x02, 0x12, 0x0c, 0x0a,
	0x08, 0x54, 0x45, 0x4c, 0x45, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x03, 0x42, 0x2d, 0x5a, 0x2b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x78, 0x33, 0x61, 0x2d, 0x74, 0x65,
	0x63, 0x68, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2d, 0x67, 0x6f, 0x2f, 0x6e,
	0x65, 0x77, 0x73, 0x3b, 0x6e, 0x65, 0x77, 0x73, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_news_source_proto_rawDescOnce sync.Once
	file_news_source_proto_rawDescData []byte
)

func file_news_source_proto_rawDescGZIP() []byte {
	file_news_source_proto_rawDescOnce.Do(func() {
		file_news_source_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_news_source_proto_rawDesc), len(file_news_source_proto_rawDesc)))
	})
	return file_news_source_proto_rawDescData
}

var file_news_source_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_news_source_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_news_source_proto_goTypes = []any{
	(SourceType)(0),          // 0: news.SourceType
	(*RawSource)(nil),        // 1: news.RawSource
	(*NormalizedSource)(nil), // 2: news.NormalizedSource
	(*SourceMeta)(nil),       // 3: news.SourceMeta
	(*SourceData)(nil),       // 4: news.SourceData
	(*Source)(nil),           // 5: news.Source
	(*SourceCategory)(nil),   // 6: news.SourceCategory
	(common.Lang)(0),         // 7: common.Lang
}
var file_news_source_proto_depIdxs = []int32{
	0, // 0: news.RawSource.type:type_name -> news.SourceType
	7, // 1: news.RawSource.lang:type_name -> common.Lang
	0, // 2: news.NormalizedSource.type:type_name -> news.SourceType
	7, // 3: news.NormalizedSource.lang:type_name -> common.Lang
	0, // 4: news.SourceMeta.type:type_name -> news.SourceType
	3, // 5: news.Source.meta:type_name -> news.SourceMeta
	4, // 6: news.Source.data:type_name -> news.SourceData
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_news_source_proto_init() }
func file_news_source_proto_init() {
	if File_news_source_proto != nil {
		return
	}
	file_news_source_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_news_source_proto_rawDesc), len(file_news_source_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_news_source_proto_goTypes,
		DependencyIndexes: file_news_source_proto_depIdxs,
		EnumInfos:         file_news_source_proto_enumTypes,
		MessageInfos:      file_news_source_proto_msgTypes,
	}.Build()
	File_news_source_proto = out.File
	file_news_source_proto_goTypes = nil
	file_news_source_proto_depIdxs = nil
}
