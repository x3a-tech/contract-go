// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v4.24.4
// source: account/account.proto

package accountv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Method int32

const (
	Method_NULL              Method = 0
	Method_IDENTIFY          Method = 1
	Method_GET_ACCOUNT_SHORT Method = 2
)

// Enum value maps for Method.
var (
	Method_name = map[int32]string{
		0: "NULL",
		1: "IDENTIFY",
		2: "GET_ACCOUNT_SHORT",
	}
	Method_value = map[string]int32{
		"NULL":              0,
		"IDENTIFY":          1,
		"GET_ACCOUNT_SHORT": 2,
	}
)

func (x Method) Enum() *Method {
	p := new(Method)
	*p = x
	return p
}

func (x Method) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Method) Descriptor() protoreflect.EnumDescriptor {
	return file_account_account_proto_enumTypes[0].Descriptor()
}

func (Method) Type() protoreflect.EnumType {
	return &file_account_account_proto_enumTypes[0]
}

func (x Method) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Method.Descriptor instead.
func (Method) EnumDescriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{0}
}

type MarketType int32

const (
	MarketType_MARKET_TYPE_UNDEFINED MarketType = 0
	MarketType_Crypto                MarketType = 1
	MarketType_Fiat                  MarketType = 2
	MarketType_Forex                 MarketType = 3
	MarketType_Stock                 MarketType = 4
)

// Enum value maps for MarketType.
var (
	MarketType_name = map[int32]string{
		0: "MARKET_TYPE_UNDEFINED",
		1: "Crypto",
		2: "Fiat",
		3: "Forex",
		4: "Stock",
	}
	MarketType_value = map[string]int32{
		"MARKET_TYPE_UNDEFINED": 0,
		"Crypto":                1,
		"Fiat":                  2,
		"Forex":                 3,
		"Stock":                 4,
	}
)

func (x MarketType) Enum() *MarketType {
	p := new(MarketType)
	*p = x
	return p
}

func (x MarketType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MarketType) Descriptor() protoreflect.EnumDescriptor {
	return file_account_account_proto_enumTypes[1].Descriptor()
}

func (MarketType) Type() protoreflect.EnumType {
	return &file_account_account_proto_enumTypes[1]
}

func (x MarketType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MarketType.Descriptor instead.
func (MarketType) EnumDescriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{1}
}

type Profile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       *Account               `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	FeedCoins     []*FeedCoin            `protobuf:"bytes,2,rep,name=feed_coins,json=feedCoins,proto3" json:"feed_coins,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Profile) Reset() {
	*x = Profile{}
	mi := &file_account_account_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{0}
}

func (x *Profile) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *Profile) GetFeedCoins() []*FeedCoin {
	if x != nil {
		return x.FeedCoins
	}
	return nil
}

type FeedCoin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CoinId        int32                  `protobuf:"varint,1,opt,name=coin_id,json=coinId,proto3" json:"coin_id,omitempty"`
	Order         int32                  `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	MarketType    MarketType             `protobuf:"varint,3,opt,name=market_type,json=marketType,proto3,enum=users.MarketType" json:"market_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeedCoin) Reset() {
	*x = FeedCoin{}
	mi := &file_account_account_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedCoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedCoin) ProtoMessage() {}

func (x *FeedCoin) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedCoin.ProtoReflect.Descriptor instead.
func (*FeedCoin) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{1}
}

func (x *FeedCoin) GetCoinId() int32 {
	if x != nil {
		return x.CoinId
	}
	return 0
}

func (x *FeedCoin) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *FeedCoin) GetMarketType() MarketType {
	if x != nil {
		return x.MarketType
	}
	return MarketType_MARKET_TYPE_UNDEFINED
}

type Account struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          []byte                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	FirstName     string                 `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string                 `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Photo         []byte                 `protobuf:"bytes,5,opt,name=photo,proto3,oneof" json:"photo,omitempty"`
	PhotoUrl      *string                `protobuf:"bytes,6,opt,name=photo_url,json=photoUrl,proto3,oneof" json:"photo_url,omitempty"`
	Lang          int32                  `protobuf:"varint,7,opt,name=lang,proto3" json:"lang,omitempty"`
	IsOnboarded   bool                   `protobuf:"varint,8,opt,name=is_onboarded,json=isOnboarded,proto3" json:"is_onboarded,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_account_account_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{2}
}

func (x *Account) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *Account) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Account) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Account) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Account) GetPhoto() []byte {
	if x != nil {
		return x.Photo
	}
	return nil
}

func (x *Account) GetPhotoUrl() string {
	if x != nil && x.PhotoUrl != nil {
		return *x.PhotoUrl
	}
	return ""
}

func (x *Account) GetLang() int32 {
	if x != nil {
		return x.Lang
	}
	return 0
}

func (x *Account) GetIsOnboarded() bool {
	if x != nil {
		return x.IsOnboarded
	}
	return false
}

type AccountShort struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          []byte                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	FirstName     string                 `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName      string                 `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Photo         []byte                 `protobuf:"bytes,5,opt,name=photo,proto3,oneof" json:"photo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountShort) Reset() {
	*x = AccountShort{}
	mi := &file_account_account_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountShort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountShort) ProtoMessage() {}

func (x *AccountShort) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountShort.ProtoReflect.Descriptor instead.
func (*AccountShort) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{3}
}

func (x *AccountShort) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *AccountShort) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AccountShort) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *AccountShort) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *AccountShort) GetPhoto() []byte {
	if x != nil {
		return x.Photo
	}
	return nil
}

type TryRegistryFromTelegramParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TgId          int64                  `protobuf:"varint,1,opt,name=tg_id,json=tgId,proto3" json:"tg_id,omitempty"`
	TgFirstName   string                 `protobuf:"bytes,2,opt,name=tg_first_name,json=tgFirstName,proto3" json:"tg_first_name,omitempty"`
	TgLastName    string                 `protobuf:"bytes,3,opt,name=tg_last_name,json=tgLastName,proto3" json:"tg_last_name,omitempty"`
	TgUsername    string                 `protobuf:"bytes,4,opt,name=tg_username,json=tgUsername,proto3" json:"tg_username,omitempty"`
	TgIsPremium   bool                   `protobuf:"varint,5,opt,name=tg_is_premium,json=tgIsPremium,proto3" json:"tg_is_premium,omitempty"`
	LangCode      string                 `protobuf:"bytes,6,opt,name=lang_code,json=langCode,proto3" json:"lang_code,omitempty"`
	TgPhotoUrl    *string                `protobuf:"bytes,7,opt,name=tg_photo_url,json=tgPhotoUrl,proto3,oneof" json:"tg_photo_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TryRegistryFromTelegramParams) Reset() {
	*x = TryRegistryFromTelegramParams{}
	mi := &file_account_account_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TryRegistryFromTelegramParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TryRegistryFromTelegramParams) ProtoMessage() {}

func (x *TryRegistryFromTelegramParams) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TryRegistryFromTelegramParams.ProtoReflect.Descriptor instead.
func (*TryRegistryFromTelegramParams) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{4}
}

func (x *TryRegistryFromTelegramParams) GetTgId() int64 {
	if x != nil {
		return x.TgId
	}
	return 0
}

func (x *TryRegistryFromTelegramParams) GetTgFirstName() string {
	if x != nil {
		return x.TgFirstName
	}
	return ""
}

func (x *TryRegistryFromTelegramParams) GetTgLastName() string {
	if x != nil {
		return x.TgLastName
	}
	return ""
}

func (x *TryRegistryFromTelegramParams) GetTgUsername() string {
	if x != nil {
		return x.TgUsername
	}
	return ""
}

func (x *TryRegistryFromTelegramParams) GetTgIsPremium() bool {
	if x != nil {
		return x.TgIsPremium
	}
	return false
}

func (x *TryRegistryFromTelegramParams) GetLangCode() string {
	if x != nil {
		return x.LangCode
	}
	return ""
}

func (x *TryRegistryFromTelegramParams) GetTgPhotoUrl() string {
	if x != nil && x.TgPhotoUrl != nil {
		return *x.TgPhotoUrl
	}
	return ""
}

type GetAccountParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          []byte                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAccountParams) Reset() {
	*x = GetAccountParams{}
	mi := &file_account_account_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAccountParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountParams) ProtoMessage() {}

func (x *GetAccountParams) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountParams.ProtoReflect.Descriptor instead.
func (*GetAccountParams) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{5}
}

func (x *GetAccountParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

type FavoriteFolder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          []byte                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Icon          int32                  `protobuf:"varint,3,opt,name=icon,proto3" json:"icon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FavoriteFolder) Reset() {
	*x = FavoriteFolder{}
	mi := &file_account_account_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FavoriteFolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FavoriteFolder) ProtoMessage() {}

func (x *FavoriteFolder) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FavoriteFolder.ProtoReflect.Descriptor instead.
func (*FavoriteFolder) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{6}
}

func (x *FavoriteFolder) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *FavoriteFolder) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FavoriteFolder) GetIcon() int32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

type GetFavoritesParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountUuid   []byte                 `protobuf:"bytes,1,opt,name=account_uuid,json=accountUuid,proto3" json:"account_uuid,omitempty"`
	FolderUuid    []byte                 `protobuf:"bytes,2,opt,name=folder_uuid,json=folderUuid,proto3,oneof" json:"folder_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFavoritesParams) Reset() {
	*x = GetFavoritesParams{}
	mi := &file_account_account_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFavoritesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFavoritesParams) ProtoMessage() {}

func (x *GetFavoritesParams) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFavoritesParams.ProtoReflect.Descriptor instead.
func (*GetFavoritesParams) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{7}
}

func (x *GetFavoritesParams) GetAccountUuid() []byte {
	if x != nil {
		return x.AccountUuid
	}
	return nil
}

func (x *GetFavoritesParams) GetFolderUuid() []byte {
	if x != nil {
		return x.FolderUuid
	}
	return nil
}

type GetFavoritesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Favorites     []*FavoriteFolder      `protobuf:"bytes,1,rep,name=favorites,proto3" json:"favorites,omitempty"`
	Articles      [][]byte               `protobuf:"bytes,2,rep,name=articles,proto3" json:"articles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFavoritesResponse) Reset() {
	*x = GetFavoritesResponse{}
	mi := &file_account_account_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFavoritesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFavoritesResponse) ProtoMessage() {}

func (x *GetFavoritesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFavoritesResponse.ProtoReflect.Descriptor instead.
func (*GetFavoritesResponse) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{8}
}

func (x *GetFavoritesResponse) GetFavorites() []*FavoriteFolder {
	if x != nil {
		return x.Favorites
	}
	return nil
}

func (x *GetFavoritesResponse) GetArticles() [][]byte {
	if x != nil {
		return x.Articles
	}
	return nil
}

type HasFavoritesParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountUuid   []byte                 `protobuf:"bytes,1,opt,name=account_uuid,json=accountUuid,proto3" json:"account_uuid,omitempty"`
	ArticleUuids  [][]byte               `protobuf:"bytes,2,rep,name=article_uuids,json=articleUuids,proto3" json:"article_uuids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HasFavoritesParams) Reset() {
	*x = HasFavoritesParams{}
	mi := &file_account_account_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HasFavoritesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasFavoritesParams) ProtoMessage() {}

func (x *HasFavoritesParams) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasFavoritesParams.ProtoReflect.Descriptor instead.
func (*HasFavoritesParams) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{9}
}

func (x *HasFavoritesParams) GetAccountUuid() []byte {
	if x != nil {
		return x.AccountUuid
	}
	return nil
}

func (x *HasFavoritesParams) GetArticleUuids() [][]byte {
	if x != nil {
		return x.ArticleUuids
	}
	return nil
}

type HasFavoritesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Favorites     map[string]bool        `protobuf:"bytes,1,rep,name=favorites,proto3" json:"favorites,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HasFavoritesResponse) Reset() {
	*x = HasFavoritesResponse{}
	mi := &file_account_account_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HasFavoritesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HasFavoritesResponse) ProtoMessage() {}

func (x *HasFavoritesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HasFavoritesResponse.ProtoReflect.Descriptor instead.
func (*HasFavoritesResponse) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{10}
}

func (x *HasFavoritesResponse) GetFavorites() map[string]bool {
	if x != nil {
		return x.Favorites
	}
	return nil
}

type ToggleFavoriteParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountUuid   []byte                 `protobuf:"bytes,1,opt,name=account_uuid,json=accountUuid,proto3" json:"account_uuid,omitempty"`
	ArticleUuid   []byte                 `protobuf:"bytes,2,opt,name=article_uuid,json=articleUuid,proto3" json:"article_uuid,omitempty"`
	FolderUuid    []byte                 `protobuf:"bytes,3,opt,name=folder_uuid,json=folderUuid,proto3,oneof" json:"folder_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToggleFavoriteParams) Reset() {
	*x = ToggleFavoriteParams{}
	mi := &file_account_account_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToggleFavoriteParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleFavoriteParams) ProtoMessage() {}

func (x *ToggleFavoriteParams) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleFavoriteParams.ProtoReflect.Descriptor instead.
func (*ToggleFavoriteParams) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{11}
}

func (x *ToggleFavoriteParams) GetAccountUuid() []byte {
	if x != nil {
		return x.AccountUuid
	}
	return nil
}

func (x *ToggleFavoriteParams) GetArticleUuid() []byte {
	if x != nil {
		return x.ArticleUuid
	}
	return nil
}

func (x *ToggleFavoriteParams) GetFolderUuid() []byte {
	if x != nil {
		return x.FolderUuid
	}
	return nil
}

type MoveFavoriteParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountUuid   []byte                 `protobuf:"bytes,1,opt,name=account_uuid,json=accountUuid,proto3" json:"account_uuid,omitempty"`
	ArticleUuid   []byte                 `protobuf:"bytes,2,opt,name=article_uuid,json=articleUuid,proto3" json:"article_uuid,omitempty"`
	FolderUuid    []byte                 `protobuf:"bytes,3,opt,name=folder_uuid,json=folderUuid,proto3,oneof" json:"folder_uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFavoriteParams) Reset() {
	*x = MoveFavoriteParams{}
	mi := &file_account_account_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFavoriteParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFavoriteParams) ProtoMessage() {}

func (x *MoveFavoriteParams) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFavoriteParams.ProtoReflect.Descriptor instead.
func (*MoveFavoriteParams) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{12}
}

func (x *MoveFavoriteParams) GetAccountUuid() []byte {
	if x != nil {
		return x.AccountUuid
	}
	return nil
}

func (x *MoveFavoriteParams) GetArticleUuid() []byte {
	if x != nil {
		return x.ArticleUuid
	}
	return nil
}

func (x *MoveFavoriteParams) GetFolderUuid() []byte {
	if x != nil {
		return x.FolderUuid
	}
	return nil
}

type CreateFavoriteFolderParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountUuid   []byte                 `protobuf:"bytes,1,opt,name=account_uuid,json=accountUuid,proto3" json:"account_uuid,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Icon          int32                  `protobuf:"varint,3,opt,name=icon,proto3" json:"icon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFavoriteFolderParams) Reset() {
	*x = CreateFavoriteFolderParams{}
	mi := &file_account_account_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFavoriteFolderParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFavoriteFolderParams) ProtoMessage() {}

func (x *CreateFavoriteFolderParams) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFavoriteFolderParams.ProtoReflect.Descriptor instead.
func (*CreateFavoriteFolderParams) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{13}
}

func (x *CreateFavoriteFolderParams) GetAccountUuid() []byte {
	if x != nil {
		return x.AccountUuid
	}
	return nil
}

func (x *CreateFavoriteFolderParams) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateFavoriteFolderParams) GetIcon() int32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

type UpdateFavoriteFolderParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          []byte                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Icon          int32                  `protobuf:"varint,3,opt,name=icon,proto3" json:"icon,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFavoriteFolderParams) Reset() {
	*x = UpdateFavoriteFolderParams{}
	mi := &file_account_account_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFavoriteFolderParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFavoriteFolderParams) ProtoMessage() {}

func (x *UpdateFavoriteFolderParams) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFavoriteFolderParams.ProtoReflect.Descriptor instead.
func (*UpdateFavoriteFolderParams) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateFavoriteFolderParams) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *UpdateFavoriteFolderParams) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateFavoriteFolderParams) GetIcon() int32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

type Onboarding struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Categories    []int32                `protobuf:"varint,1,rep,packed,name=categories,proto3" json:"categories,omitempty"`
	HasWallet     bool                   `protobuf:"varint,2,opt,name=has_wallet,json=hasWallet,proto3" json:"has_wallet,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Onboarding) Reset() {
	*x = Onboarding{}
	mi := &file_account_account_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Onboarding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Onboarding) ProtoMessage() {}

func (x *Onboarding) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Onboarding.ProtoReflect.Descriptor instead.
func (*Onboarding) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{15}
}

func (x *Onboarding) GetCategories() []int32 {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *Onboarding) GetHasWallet() bool {
	if x != nil {
		return x.HasWallet
	}
	return false
}

type CheckNewsInfoParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subscribes    [][]byte               `protobuf:"bytes,1,rep,name=subscribes,proto3" json:"subscribes,omitempty"`
	Favorites     [][]byte               `protobuf:"bytes,2,rep,name=favorites,proto3" json:"favorites,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckNewsInfoParams) Reset() {
	*x = CheckNewsInfoParams{}
	mi := &file_account_account_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckNewsInfoParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckNewsInfoParams) ProtoMessage() {}

func (x *CheckNewsInfoParams) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckNewsInfoParams.ProtoReflect.Descriptor instead.
func (*CheckNewsInfoParams) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{16}
}

func (x *CheckNewsInfoParams) GetSubscribes() [][]byte {
	if x != nil {
		return x.Subscribes
	}
	return nil
}

func (x *CheckNewsInfoParams) GetFavorites() [][]byte {
	if x != nil {
		return x.Favorites
	}
	return nil
}

type CheckNewsInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subscribes    [][]byte               `protobuf:"bytes,1,rep,name=subscribes,proto3" json:"subscribes,omitempty"`
	Favorites     [][]byte               `protobuf:"bytes,2,rep,name=favorites,proto3" json:"favorites,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckNewsInfoResponse) Reset() {
	*x = CheckNewsInfoResponse{}
	mi := &file_account_account_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckNewsInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckNewsInfoResponse) ProtoMessage() {}

func (x *CheckNewsInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_account_account_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckNewsInfoResponse.ProtoReflect.Descriptor instead.
func (*CheckNewsInfoResponse) Descriptor() ([]byte, []int) {
	return file_account_account_proto_rawDescGZIP(), []int{17}
}

func (x *CheckNewsInfoResponse) GetSubscribes() [][]byte {
	if x != nil {
		return x.Subscribes
	}
	return nil
}

func (x *CheckNewsInfoResponse) GetFavorites() [][]byte {
	if x != nil {
		return x.Favorites
	}
	return nil
}

var File_account_account_proto protoreflect.FileDescriptor

var file_account_account_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x63, 0x0a, 0x07, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2e, 0x0a, 0x0a, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x43, 0x6f, 0x69, 0x6e, 0x52, 0x09, 0x66, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73,
	0x22, 0x6d, 0x0a, 0x08, 0x46, 0x65, 0x65, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63,
	0x6f, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x0b, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x81, 0x02, 0x0a, 0x07, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x08, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72,
	0x6c, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x6f,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x69, 0x73, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x65, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f,
	0x75, 0x72, 0x6c, 0x22, 0x9f, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x02, 0x0a, 0x1d, 0x54, 0x72, 0x79, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61,
	0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x13, 0x0a, 0x05, 0x74, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x67, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d,
	0x74, 0x67, 0x5f, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x67, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0c, 0x74, 0x67, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x67, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x67, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x67, 0x5f, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x65,
	0x6d, 0x69, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x74, 0x67, 0x49, 0x73,
	0x50, 0x72, 0x65, 0x6d, 0x69, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0c, 0x74, 0x67, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x67,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x74, 0x67, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0x26, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x0e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x22, 0x6d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a,
	0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x22, 0x67, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x66,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x12,
	0x48, 0x61, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x73, 0x22, 0x9e, 0x01, 0x0a, 0x14, 0x48,
	0x61, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x48,
	0x61, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x1a, 0x3c, 0x0a,
	0x0e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x92, 0x01, 0x0a, 0x14,
	0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x66, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x88, 0x01, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x22, 0x90, 0x01, 0x0a, 0x12, 0x4d, 0x6f, 0x76, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a,
	0x0b, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x55, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x5a,
	0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x0a, 0x4f, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x5f,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x68, 0x61,
	0x73, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x22, 0x53, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x4e, 0x65, 0x77, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x15,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x65, 0x77, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x73, 0x2a, 0x37, 0x0a, 0x06, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x44, 0x45, 0x4e, 0x54,
	0x49, 0x46, 0x59, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x47, 0x45, 0x54, 0x5f, 0x41, 0x43, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x53, 0x48, 0x4f, 0x52, 0x54, 0x10, 0x02, 0x2a, 0x53, 0x0a, 0x0a,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x41,
	0x52, 0x4b, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x44, 0x45, 0x46, 0x49,
	0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x10,
	0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x69, 0x61, 0x74, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x46,
	0x6f, 0x72, 0x65, 0x78, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x10,
	0x04, 0x32, 0xdf, 0x04, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x57, 0x0a, 0x17, 0x54,
	0x72, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x54,
	0x72, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x12, 0x46, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a,
	0x0c, 0x48, 0x61, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x12, 0x19, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x48, 0x61, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x48, 0x61, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x46,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x0c,
	0x4d, 0x6f, 0x76, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x50, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
	0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x12, 0x50, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x42, 0x17, 0x5a, 0x15, 0x78, 0x33, 0x61, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x3b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_account_account_proto_rawDescOnce sync.Once
	file_account_account_proto_rawDescData []byte
)

func file_account_account_proto_rawDescGZIP() []byte {
	file_account_account_proto_rawDescOnce.Do(func() {
		file_account_account_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_account_account_proto_rawDesc), len(file_account_account_proto_rawDesc)))
	})
	return file_account_account_proto_rawDescData
}

var file_account_account_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_account_account_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_account_account_proto_goTypes = []any{
	(Method)(0),                           // 0: users.Method
	(MarketType)(0),                       // 1: users.MarketType
	(*Profile)(nil),                       // 2: users.Profile
	(*FeedCoin)(nil),                      // 3: users.FeedCoin
	(*Account)(nil),                       // 4: users.Account
	(*AccountShort)(nil),                  // 5: users.AccountShort
	(*TryRegistryFromTelegramParams)(nil), // 6: users.TryRegistryFromTelegramParams
	(*GetAccountParams)(nil),              // 7: users.GetAccountParams
	(*FavoriteFolder)(nil),                // 8: users.FavoriteFolder
	(*GetFavoritesParams)(nil),            // 9: users.GetFavoritesParams
	(*GetFavoritesResponse)(nil),          // 10: users.GetFavoritesResponse
	(*HasFavoritesParams)(nil),            // 11: users.HasFavoritesParams
	(*HasFavoritesResponse)(nil),          // 12: users.HasFavoritesResponse
	(*ToggleFavoriteParams)(nil),          // 13: users.ToggleFavoriteParams
	(*MoveFavoriteParams)(nil),            // 14: users.MoveFavoriteParams
	(*CreateFavoriteFolderParams)(nil),    // 15: users.CreateFavoriteFolderParams
	(*UpdateFavoriteFolderParams)(nil),    // 16: users.UpdateFavoriteFolderParams
	(*Onboarding)(nil),                    // 17: users.Onboarding
	(*CheckNewsInfoParams)(nil),           // 18: users.CheckNewsInfoParams
	(*CheckNewsInfoResponse)(nil),         // 19: users.CheckNewsInfoResponse
	nil,                                   // 20: users.HasFavoritesResponse.FavoritesEntry
	(*emptypb.Empty)(nil),                 // 21: google.protobuf.Empty
}
var file_account_account_proto_depIdxs = []int32{
	4,  // 0: users.Profile.account:type_name -> users.Account
	3,  // 1: users.Profile.feed_coins:type_name -> users.FeedCoin
	1,  // 2: users.FeedCoin.market_type:type_name -> users.MarketType
	8,  // 3: users.GetFavoritesResponse.favorites:type_name -> users.FavoriteFolder
	20, // 4: users.HasFavoritesResponse.favorites:type_name -> users.HasFavoritesResponse.FavoritesEntry
	6,  // 5: users.Users.TryRegistryFromTelegram:input_type -> users.TryRegistryFromTelegramParams
	7,  // 6: users.Users.GetAccountShort:input_type -> users.GetAccountParams
	9,  // 7: users.Users.GetFavorites:input_type -> users.GetFavoritesParams
	11, // 8: users.Users.HasFavorites:input_type -> users.HasFavoritesParams
	13, // 9: users.Users.ToggleFavorite:input_type -> users.ToggleFavoriteParams
	14, // 10: users.Users.MoveFavorite:input_type -> users.MoveFavoriteParams
	15, // 11: users.Users.CreateFavoriteFolder:input_type -> users.CreateFavoriteFolderParams
	16, // 12: users.Users.UpdateFavoriteFolder:input_type -> users.UpdateFavoriteFolderParams
	21, // 13: users.Users.TryRegistryFromTelegram:output_type -> google.protobuf.Empty
	5,  // 14: users.Users.GetAccountShort:output_type -> users.AccountShort
	10, // 15: users.Users.GetFavorites:output_type -> users.GetFavoritesResponse
	12, // 16: users.Users.HasFavorites:output_type -> users.HasFavoritesResponse
	21, // 17: users.Users.ToggleFavorite:output_type -> google.protobuf.Empty
	21, // 18: users.Users.MoveFavorite:output_type -> google.protobuf.Empty
	8,  // 19: users.Users.CreateFavoriteFolder:output_type -> users.FavoriteFolder
	8,  // 20: users.Users.UpdateFavoriteFolder:output_type -> users.FavoriteFolder
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_account_account_proto_init() }
func file_account_account_proto_init() {
	if File_account_account_proto != nil {
		return
	}
	file_account_account_proto_msgTypes[2].OneofWrappers = []any{}
	file_account_account_proto_msgTypes[3].OneofWrappers = []any{}
	file_account_account_proto_msgTypes[4].OneofWrappers = []any{}
	file_account_account_proto_msgTypes[7].OneofWrappers = []any{}
	file_account_account_proto_msgTypes[11].OneofWrappers = []any{}
	file_account_account_proto_msgTypes[12].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_account_account_proto_rawDesc), len(file_account_account_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_account_account_proto_goTypes,
		DependencyIndexes: file_account_account_proto_depIdxs,
		EnumInfos:         file_account_account_proto_enumTypes,
		MessageInfos:      file_account_account_proto_msgTypes,
	}.Build()
	File_account_account_proto = out.File
	file_account_account_proto_goTypes = nil
	file_account_account_proto_depIdxs = nil
}
