// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v4.24.4
// source: market-data/market-data.proto

package marketdatav1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPairsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pairs         []*Pair                `protobuf:"bytes,1,rep,name=pairs,proto3" json:"pairs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPairsResponse) Reset() {
	*x = GetPairsResponse{}
	mi := &file_market_data_market_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPairsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPairsResponse) ProtoMessage() {}

func (x *GetPairsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_market_data_market_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPairsResponse.ProtoReflect.Descriptor instead.
func (*GetPairsResponse) Descriptor() ([]byte, []int) {
	return file_market_data_market_data_proto_rawDescGZIP(), []int{0}
}

func (x *GetPairsResponse) GetPairs() []*Pair {
	if x != nil {
		return x.Pairs
	}
	return nil
}

type Pair struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PairName      string                 `protobuf:"bytes,2,opt,name=pair_name,json=pairName,proto3" json:"pair_name,omitempty"`
	Bid           float32                `protobuf:"fixed32,3,opt,name=bid,proto3" json:"bid,omitempty"`
	Ask           float32                `protobuf:"fixed32,4,opt,name=ask,proto3" json:"ask,omitempty"`
	Spread        float32                `protobuf:"fixed32,5,opt,name=spread,proto3" json:"spread,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pair) Reset() {
	*x = Pair{}
	mi := &file_market_data_market_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pair) ProtoMessage() {}

func (x *Pair) ProtoReflect() protoreflect.Message {
	mi := &file_market_data_market_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pair.ProtoReflect.Descriptor instead.
func (*Pair) Descriptor() ([]byte, []int) {
	return file_market_data_market_data_proto_rawDescGZIP(), []int{1}
}

func (x *Pair) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Pair) GetPairName() string {
	if x != nil {
		return x.PairName
	}
	return ""
}

func (x *Pair) GetBid() float32 {
	if x != nil {
		return x.Bid
	}
	return 0
}

func (x *Pair) GetAsk() float32 {
	if x != nil {
		return x.Ask
	}
	return 0
}

func (x *Pair) GetSpread() float32 {
	if x != nil {
		return x.Spread
	}
	return 0
}

func (x *Pair) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Pair) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Currency      string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Ticker        string                 `protobuf:"bytes,4,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Date          string                 `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetParams) Reset() {
	*x = GetParams{}
	mi := &file_market_data_market_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetParams) ProtoMessage() {}

func (x *GetParams) ProtoReflect() protoreflect.Message {
	mi := &file_market_data_market_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetParams.ProtoReflect.Descriptor instead.
func (*GetParams) Descriptor() ([]byte, []int) {
	return file_market_data_market_data_proto_rawDescGZIP(), []int{2}
}

func (x *GetParams) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *GetParams) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetParams) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetParams) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *GetParams) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type GetTickerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tickers       []*Ticker              `protobuf:"bytes,1,rep,name=tickers,proto3" json:"tickers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTickerResponse) Reset() {
	*x = GetTickerResponse{}
	mi := &file_market_data_market_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTickerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTickerResponse) ProtoMessage() {}

func (x *GetTickerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_market_data_market_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTickerResponse.ProtoReflect.Descriptor instead.
func (*GetTickerResponse) Descriptor() ([]byte, []int) {
	return file_market_data_market_data_proto_rawDescGZIP(), []int{3}
}

func (x *GetTickerResponse) GetTickers() []*Ticker {
	if x != nil {
		return x.Tickers
	}
	return nil
}

type Ticker struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ticker            string                 `protobuf:"bytes,2,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Price             float32                `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	ChangesPercentage float32                `protobuf:"fixed32,4,opt,name=changesPercentage,proto3" json:"changesPercentage,omitempty"`
	Change            float32                `protobuf:"fixed32,5,opt,name=change,proto3" json:"change,omitempty"`
	DayLow            float32                `protobuf:"fixed32,6,opt,name=dayLow,proto3" json:"dayLow,omitempty"`
	DayHigh           float32                `protobuf:"fixed32,7,opt,name=dayHigh,proto3" json:"dayHigh,omitempty"`
	Volume            int32                  `protobuf:"varint,8,opt,name=volume,proto3" json:"volume,omitempty"`
	HistoricalDate    string                 `protobuf:"bytes,9,opt,name=historicalDate,proto3" json:"historicalDate,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Ticker) Reset() {
	*x = Ticker{}
	mi := &file_market_data_market_data_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ticker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticker) ProtoMessage() {}

func (x *Ticker) ProtoReflect() protoreflect.Message {
	mi := &file_market_data_market_data_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticker.ProtoReflect.Descriptor instead.
func (*Ticker) Descriptor() ([]byte, []int) {
	return file_market_data_market_data_proto_rawDescGZIP(), []int{4}
}

func (x *Ticker) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Ticker) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *Ticker) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Ticker) GetChangesPercentage() float32 {
	if x != nil {
		return x.ChangesPercentage
	}
	return 0
}

func (x *Ticker) GetChange() float32 {
	if x != nil {
		return x.Change
	}
	return 0
}

func (x *Ticker) GetDayLow() float32 {
	if x != nil {
		return x.DayLow
	}
	return 0
}

func (x *Ticker) GetDayHigh() float32 {
	if x != nil {
		return x.DayHigh
	}
	return 0
}

func (x *Ticker) GetVolume() int32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Ticker) GetHistoricalDate() string {
	if x != nil {
		return x.HistoricalDate
	}
	return ""
}

func (x *Ticker) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Ticker) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_market_data_market_data_proto protoreflect.FileDescriptor

var file_market_data_market_data_proto_rawDesc = string([]byte{
	0x0a, 0x1d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x6d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x50,
	0x61, 0x69, 0x72, 0x52, 0x05, 0x70, 0x61, 0x69, 0x72, 0x73, 0x22, 0xe5, 0x01, 0x0a, 0x04, 0x50,
	0x61, 0x69, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x69, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x69, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x62,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x7d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x22, 0x42, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x07, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x73, 0x22, 0xf4, 0x02, 0x0a, 0x06, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c,
	0x0a, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x79, 0x4c, 0x6f, 0x77, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x64, 0x61, 0x79, 0x4c, 0x6f, 0x77, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x61, 0x79, 0x48, 0x69, 0x67, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x64,
	0x61, 0x79, 0x48, 0x69, 0x67, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63,
	0x61, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x1e, 0x5a, 0x1c,
	0x78, 0x33, 0x61, 0x2e, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x2d, 0x64, 0x61, 0x74, 0x61, 0x3b,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x64, 0x61, 0x74, 0x61, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_market_data_market_data_proto_rawDescOnce sync.Once
	file_market_data_market_data_proto_rawDescData []byte
)

func file_market_data_market_data_proto_rawDescGZIP() []byte {
	file_market_data_market_data_proto_rawDescOnce.Do(func() {
		file_market_data_market_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_market_data_market_data_proto_rawDesc), len(file_market_data_market_data_proto_rawDesc)))
	})
	return file_market_data_market_data_proto_rawDescData
}

var file_market_data_market_data_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_market_data_market_data_proto_goTypes = []any{
	(*GetPairsResponse)(nil),      // 0: market_data.GetPairsResponse
	(*Pair)(nil),                  // 1: market_data.Pair
	(*GetParams)(nil),             // 2: market_data.GetParams
	(*GetTickerResponse)(nil),     // 3: market_data.GetTickerResponse
	(*Ticker)(nil),                // 4: market_data.Ticker
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_market_data_market_data_proto_depIdxs = []int32{
	1, // 0: market_data.GetPairsResponse.pairs:type_name -> market_data.Pair
	5, // 1: market_data.Pair.created_at:type_name -> google.protobuf.Timestamp
	5, // 2: market_data.Pair.updated_at:type_name -> google.protobuf.Timestamp
	4, // 3: market_data.GetTickerResponse.tickers:type_name -> market_data.Ticker
	5, // 4: market_data.Ticker.created_at:type_name -> google.protobuf.Timestamp
	5, // 5: market_data.Ticker.updated_at:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_market_data_market_data_proto_init() }
func file_market_data_market_data_proto_init() {
	if File_market_data_market_data_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_market_data_market_data_proto_rawDesc), len(file_market_data_market_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_market_data_market_data_proto_goTypes,
		DependencyIndexes: file_market_data_market_data_proto_depIdxs,
		MessageInfos:      file_market_data_market_data_proto_msgTypes,
	}.Build()
	File_market_data_market_data_proto = out.File
	file_market_data_market_data_proto_goTypes = nil
	file_market_data_market_data_proto_depIdxs = nil
}
